{
  "version": 3,
  "sources": ["../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/functions.ts", "../node_modules/.pnpm/pino-std-serializers@7.0.0/node_modules/pino-std-serializers/lib/err-helpers.js", "../node_modules/.pnpm/pino-std-serializers@7.0.0/node_modules/pino-std-serializers/lib/err-proto.js", "../node_modules/.pnpm/pino-std-serializers@7.0.0/node_modules/pino-std-serializers/lib/err.js", "../node_modules/.pnpm/pino-std-serializers@7.0.0/node_modules/pino-std-serializers/lib/err-with-cause.js", "../node_modules/.pnpm/pino-std-serializers@7.0.0/node_modules/pino-std-serializers/lib/req.js", "../node_modules/.pnpm/pino-std-serializers@7.0.0/node_modules/pino-std-serializers/lib/res.js", "../node_modules/.pnpm/pino-std-serializers@7.0.0/node_modules/pino-std-serializers/index.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/lib/caller.js", "../node_modules/.pnpm/fast-redact@3.5.0/node_modules/fast-redact/lib/validator.js", "../node_modules/.pnpm/fast-redact@3.5.0/node_modules/fast-redact/lib/rx.js", "../node_modules/.pnpm/fast-redact@3.5.0/node_modules/fast-redact/lib/parse.js", "../node_modules/.pnpm/fast-redact@3.5.0/node_modules/fast-redact/lib/redactor.js", "../node_modules/.pnpm/fast-redact@3.5.0/node_modules/fast-redact/lib/modifiers.js", "../node_modules/.pnpm/fast-redact@3.5.0/node_modules/fast-redact/lib/restorer.js", "../node_modules/.pnpm/fast-redact@3.5.0/node_modules/fast-redact/lib/state.js", "../node_modules/.pnpm/fast-redact@3.5.0/node_modules/fast-redact/index.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/lib/symbols.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/lib/redaction.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/lib/time.js", "../node_modules/.pnpm/quick-format-unescaped@4.0.4/node_modules/quick-format-unescaped/index.js", "../node_modules/.pnpm/atomic-sleep@1.0.0/node_modules/atomic-sleep/index.js", "../node_modules/.pnpm/sonic-boom@4.2.0/node_modules/sonic-boom/index.js", "../node_modules/.pnpm/on-exit-leak-free@2.1.2/node_modules/on-exit-leak-free/index.js", "../node_modules/.pnpm/thread-stream@3.1.0/node_modules/thread-stream/package.json", "../node_modules/.pnpm/thread-stream@3.1.0/node_modules/thread-stream/lib/wait.js", "../node_modules/.pnpm/thread-stream@3.1.0/node_modules/thread-stream/lib/indexes.js", "../node_modules/.pnpm/thread-stream@3.1.0/node_modules/thread-stream/index.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/lib/transport.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/lib/tools.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/lib/constants.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/lib/levels.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/lib/meta.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/lib/proto.js", "../node_modules/.pnpm/safe-stable-stringify@2.5.0/node_modules/safe-stable-stringify/index.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/lib/multistream.js", "../node_modules/.pnpm/pino@9.6.0/node_modules/pino/pino.js", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/base/base.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/base/index.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/index.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/ai-sdk-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/api-call-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/empty-response-body-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/get-error-message.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/invalid-argument-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/invalid-prompt-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/invalid-response-data-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/json-parse-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/load-api-key-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/load-setting-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/no-content-generated-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/no-such-model-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/too-many-embedding-values-for-call-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/type-validation-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/errors/unsupported-functionality-error.ts", "../node_modules/.pnpm/@ai-sdk+provider@1.1.0/node_modules/@ai-sdk/provider/src/json-value/is-json.ts", "../node_modules/.pnpm/nanoid@3.3.11/node_modules/nanoid/non-secure/index.cjs", "../node_modules/.pnpm/secure-json-parse@2.7.0/node_modules/secure-json-parse/index.js", "../node_modules/.pnpm/eventsource-parser@3.0.0/node_modules/eventsource-parser/src/errors.ts", "../node_modules/.pnpm/eventsource-parser@3.0.0/node_modules/eventsource-parser/src/parse.ts", "../node_modules/.pnpm/eventsource-parser@3.0.0/node_modules/eventsource-parser/src/stream.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/index.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/combine-headers.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/convert-async-iterator-to-readable-stream.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/delay.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/extract-response-headers.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/generate-id.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/get-error-message.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/get-from-api.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/remove-undefined-entries.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/is-abort-error.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/load-api-key.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/load-optional-setting.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/load-setting.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/parse-json.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/validate-types.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/validator.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/post-to-api.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/resolve.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/response-handler.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/uint8-utils.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/without-trailing-slash.ts", "../node_modules/.pnpm/@ai-sdk+provider-utils@2.2.0_zod@3.24.2/node_modules/@ai-sdk/provider-utils/src/parse-provider-options.ts", "../node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/helpers/util.js", "../node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/ZodError.js", "../node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/locales/en.js", "../node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/errors.js", "../node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/helpers/parseUtil.js", "../node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/helpers/typeAliases.js", "../node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/helpers/errorUtil.js", "../node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/types.js", "../node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/external.js", "../node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.js", "../node_modules/.pnpm/@ai-sdk+anthropic@1.2.0_zod@3.24.2/node_modules/@ai-sdk/anthropic/src/index.ts", "../node_modules/.pnpm/@ai-sdk+anthropic@1.2.0_zod@3.24.2/node_modules/@ai-sdk/anthropic/src/anthropic-provider.ts", "../node_modules/.pnpm/@ai-sdk+anthropic@1.2.0_zod@3.24.2/node_modules/@ai-sdk/anthropic/src/anthropic-messages-language-model.ts", "../node_modules/.pnpm/@ai-sdk+anthropic@1.2.0_zod@3.24.2/node_modules/@ai-sdk/anthropic/src/anthropic-error.ts", "../node_modules/.pnpm/@ai-sdk+anthropic@1.2.0_zod@3.24.2/node_modules/@ai-sdk/anthropic/src/anthropic-prepare-tools.ts", "../node_modules/.pnpm/@ai-sdk+anthropic@1.2.0_zod@3.24.2/node_modules/@ai-sdk/anthropic/src/convert-to-anthropic-messages-prompt.ts", "../node_modules/.pnpm/@ai-sdk+anthropic@1.2.0_zod@3.24.2/node_modules/@ai-sdk/anthropic/src/map-anthropic-stop-reason.ts", "../node_modules/.pnpm/@ai-sdk+anthropic@1.2.0_zod@3.24.2/node_modules/@ai-sdk/anthropic/src/anthropic-tools.ts", "../node_modules/.pnpm/@ai-sdk+google@1.2.1_zod@3.24.2/node_modules/@ai-sdk/google/src/index.ts", "../node_modules/.pnpm/@ai-sdk+google@1.2.1_zod@3.24.2/node_modules/@ai-sdk/google/src/google-provider.ts", "../node_modules/.pnpm/@ai-sdk+google@1.2.1_zod@3.24.2/node_modules/@ai-sdk/google/src/google-generative-ai-language-model.ts", "../node_modules/.pnpm/@ai-sdk+google@1.2.1_zod@3.24.2/node_modules/@ai-sdk/google/src/convert-json-schema-to-openapi-schema.ts", "../node_modules/.pnpm/@ai-sdk+google@1.2.1_zod@3.24.2/node_modules/@ai-sdk/google/src/convert-to-google-generative-ai-messages.ts", "../node_modules/.pnpm/@ai-sdk+google@1.2.1_zod@3.24.2/node_modules/@ai-sdk/google/src/get-model-path.ts", "../node_modules/.pnpm/@ai-sdk+google@1.2.1_zod@3.24.2/node_modules/@ai-sdk/google/src/google-error.ts", "../node_modules/.pnpm/@ai-sdk+google@1.2.1_zod@3.24.2/node_modules/@ai-sdk/google/src/google-prepare-tools.ts", "../node_modules/.pnpm/@ai-sdk+google@1.2.1_zod@3.24.2/node_modules/@ai-sdk/google/src/map-google-generative-ai-finish-reason.ts", "../node_modules/.pnpm/@ai-sdk+google@1.2.1_zod@3.24.2/node_modules/@ai-sdk/google/src/google-generative-ai-embedding-model.ts", "../node_modules/.pnpm/@ai-sdk+google@1.2.1_zod@3.24.2/node_modules/@ai-sdk/google/src/google-supported-file-url.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/index.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/openai-provider.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/openai-chat-language-model.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/convert-to-openai-chat-messages.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/map-openai-chat-logprobs.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/map-openai-finish-reason.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/openai-error.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/get-response-metadata.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/openai-prepare-tools.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/openai-completion-language-model.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/convert-to-openai-completion-prompt.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/map-openai-completion-logprobs.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/openai-embedding-model.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/openai-image-model.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/openai-image-settings.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/responses/openai-responses-language-model.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/responses/convert-to-openai-responses-messages.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/responses/map-openai-responses-finish-reason.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/responses/openai-responses-prepare-tools.ts", "../node_modules/.pnpm/@ai-sdk+openai@1.3.0_zod@3.24.2/node_modules/@ai-sdk/openai/src/openai-tools.ts", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/Options.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/Refs.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/errorMessages.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/any.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/array.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/bigint.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/boolean.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/branded.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/catch.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/date.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/default.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/effects.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/enum.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/intersection.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/literal.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/string.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/record.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/map.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/nativeEnum.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/never.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/null.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/union.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/nullable.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/number.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/object.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/optional.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/pipeline.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/promise.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/set.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/tuple.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/undefined.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/unknown.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parsers/readonly.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/selectParser.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parseDef.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/parseTypes.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/zodToJsonSchema.js", "../node_modules/.pnpm/zod-to-json-schema@3.24.5_zod@3.24.2/node_modules/zod-to-json-schema/dist/cjs/index.js", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/index.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/assistant-stream-parts.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/process-chat-response.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/duplicated/usage.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/parse-partial-json.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/fix-json.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/data-stream-parts.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/process-data-stream.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/process-chat-text-response.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/process-text-stream.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/call-chat-api.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/call-completion-api.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/data-url.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/extract-max-tool-invocation-step.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/get-message-parts.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/fill-message-parts.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/is-deep-equal-data.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/prepare-attachments-for-request.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/process-assistant-stream.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/schema.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/zod-schema.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/should-resubmit-messages.ts", "../node_modules/.pnpm/@ai-sdk+ui-utils@1.2.0_zod@3.24.2/node_modules/@ai-sdk/ui-utils/src/update-tool-call-result.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/platform/node/globalThis.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/platform/node/index.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/platform/index.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/version.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/internal/semver.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/internal/global-utils.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/diag/ComponentLogger.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/diag/types.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/diag/internal/logLevelLogger.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/api/diag.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/baggage/internal/baggage-impl.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/baggage/internal/symbol.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/baggage/utils.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/context/context.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/diag/consoleLogger.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/metrics/NoopMeter.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/metrics/Metric.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/propagation/TextMapPropagator.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/context/NoopContextManager.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/api/context.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/trace_flags.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/invalid-span-constants.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/NonRecordingSpan.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/context-utils.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/spancontext-utils.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/NoopTracer.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/ProxyTracer.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/NoopTracerProvider.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/ProxyTracerProvider.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/SamplingResult.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/span_kind.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/status.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/internal/tracestate-validators.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/internal/tracestate-impl.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace/internal/utils.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/context-api.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/diag-api.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/metrics/NoopMeterProvider.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/api/metrics.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/metrics-api.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/propagation/NoopTextMapPropagator.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/baggage/context-helpers.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/api/propagation.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/propagation-api.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/api/trace.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/trace-api.ts", "../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/src/index.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/streams/index.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/index.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/data-stream/create-data-stream.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/prepare-response-headers.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/data-stream/create-data-stream-response.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/prepare-outgoing-http-headers.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/write-to-server-response.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/data-stream/pipe-data-stream-to-response.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/errors/invalid-argument-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/util/retry-with-exponential-backoff.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/util/retry-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/prepare-retries.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/telemetry/assemble-operation-name.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/telemetry/get-base-telemetry-attributes.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/telemetry/get-tracer.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/telemetry/noop-tracer.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/telemetry/record-span.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/telemetry/select-telemetry-attributes.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/embed/embed.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/split-array.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/embed/embed-many.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/errors/no-image-generated-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-text/generated-file.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/detect-image-mimetype.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-image/generate-image.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-object/generate-object.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/errors/no-object-generated-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/util/download-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/util/download.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/data-content.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/invalid-data-content-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/invalid-message-role-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/split-data-url.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/convert-to-language-model-prompt.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/prepare-call-settings.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/standardize-prompt.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/attachments-to-parts.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/message-conversion-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/convert-to-core-messages.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/detect-prompt-type.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/message.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/types/provider-metadata.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/types/json-value.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/content-part.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/tool-result-content.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/types/usage.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-object/inject-json-instruction.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-object/output-strategy.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/async-iterable-stream.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-object/validate-object-generation-input.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-object/stream-object.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/util/delayed-promise.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/util/create-resolvable-promise.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/create-stitchable-stream.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/now.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-text/generate-text.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/errors/no-output-specified-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/errors/tool-execution-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/prepare-tools-and-tool-choice.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/is-non-empty-object.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/split-on-last-whitespace.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/remove-text-after-last-whitespace.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-text/parse-tool-call.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/errors/invalid-tool-arguments-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/errors/no-such-tool-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/errors/tool-call-repair-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-text/reasoning-detail.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-text/to-response-messages.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-text/output.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/errors/index.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/errors/invalid-stream-part-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/errors/mcp-client-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-text/smooth-stream.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-text/stream-text.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/util/as-array.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/merge-streams.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/generate-text/run-tools-transformation.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/merge-objects.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/middleware/default-settings-middleware.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/get-potential-start-index.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/middleware/extract-reasoning-middleware.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/middleware/simulate-streaming-middleware.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/middleware/wrap-language-model.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/append-client-message.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/prompt/append-response-messages.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/registry/custom-provider.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/registry/no-such-provider-error.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/registry/provider-registry.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/tool/mcp/mcp-client.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/tool/tool.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/tool/mcp/mcp-sse-transport.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/tool/mcp/json-rpc-message.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/tool/mcp/types.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/tool/mcp/mcp-transport.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/cosine-similarity.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/core/util/simulate-readable-stream.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/streams/assistant-response.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/streams/langchain-adapter.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/streams/stream-callbacks.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/streams/llamaindex-adapter.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/streams/stream-data.ts", "../node_modules/.pnpm/ai@4.2.0_react@19.0.0_zod@3.24.2/node_modules/ai/util/constants.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/llm/llm.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/dist/core/llm/llm.types.js", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/llm/index.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/agent/agent.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/dist/core/agent/agent.types.js", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/agent/index.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/tools/tool.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/utils/functions/bigIntParser.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/utils/functions/endpointGenerator.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/services/AllChainsService.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/utils/functions/paginateEndpoint.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/services/BalanceService.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/services/BaseService.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/utils/types/Generic.types.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/services/BitcoinService.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/services/NftService.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/services/PricingService.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/services/SecurityService.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/services/TransactionService.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/utils/functions/debugOutput.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/node_modules/yocto-queue/index.js", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/node_modules/p-limit/index.js", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/utils/functions/execution.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/utils/functions/isValidApiKey.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/GoldRushClient.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/node_modules/big.js/big.mjs", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/utils/functions/calculatePrettyBalance.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/utils/functions/prettifyCurrency.ts", "../node_modules/.pnpm/@covalenthq+client-sdk@2.2.4/node_modules/@covalenthq/client-sdk/src/utils/functions/timestamp-parser.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/tools/goldrush/goldrush.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/tools/goldrush/historical-token-price.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/tools/goldrush/nft-balances.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/tools/goldrush/token-balances.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/tools/goldrush/transactions.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/tools/goldrush/index.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/dist/core/tools/tool.types.js", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/tools/index.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/zee/zee.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/zee/zee.types.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/core/zee/index.ts", "../node_modules/.pnpm/@covalenthq+ai-agent-sdk@0.3.0_react@19.0.0/node_modules/@covalenthq/ai-agent-sdk/src/index.ts", "../src/cli/index.ts", "../src/cli/build.ts", "../src/cli/utils/index.ts", "../src/generators/index.ts", "../node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs", "../src/core/agent-kit.ts", "../src/cli/sytem/cli-agent.ts", "../src/cli/sytem/prompts.ts", "../src/cli/sytem/tools.ts", "../src/cli/integration.ts", "../src/cli/deploy.ts"],
  "sourcesContent": [null, "'use strict'\n\n// **************************************************************\n// * Code initially copied/adapted from \"pony-cause\" npm module *\n// * Please upstream improvements there                         *\n// **************************************************************\n\nconst isErrorLike = (err) => {\n  return err && typeof err.message === 'string'\n}\n\n/**\n * @param {Error|{ cause?: unknown|(()=>err)}} err\n * @returns {Error|Object|undefined}\n */\nconst getErrorCause = (err) => {\n  if (!err) return\n\n  /** @type {unknown} */\n  // @ts-ignore\n  const cause = err.cause\n\n  // VError / NError style causes\n  if (typeof cause === 'function') {\n    // @ts-ignore\n    const causeResult = err.cause()\n\n    return isErrorLike(causeResult)\n      ? causeResult\n      : undefined\n  } else {\n    return isErrorLike(cause)\n      ? cause\n      : undefined\n  }\n}\n\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @returns {string}\n */\nconst _stackWithCauses = (err, seen) => {\n  if (!isErrorLike(err)) return ''\n\n  const stack = err.stack || ''\n\n  // Ensure we don't go circular or crazily deep\n  if (seen.has(err)) {\n    return stack + '\\ncauses have become circular...'\n  }\n\n  const cause = getErrorCause(err)\n\n  if (cause) {\n    seen.add(err)\n    return (stack + '\\ncaused by: ' + _stackWithCauses(cause, seen))\n  } else {\n    return stack\n  }\n}\n\n/**\n * @param {Error} err\n * @returns {string}\n */\nconst stackWithCauses = (err) => _stackWithCauses(err, new Set())\n\n/**\n * Internal method that keeps a track of which error we have already added, to avoid circular recursion\n *\n * @private\n * @param {Error} err\n * @param {Set<Error>} seen\n * @param {boolean} [skip]\n * @returns {string}\n */\nconst _messageWithCauses = (err, seen, skip) => {\n  if (!isErrorLike(err)) return ''\n\n  const message = skip ? '' : (err.message || '')\n\n  // Ensure we don't go circular or crazily deep\n  if (seen.has(err)) {\n    return message + ': ...'\n  }\n\n  const cause = getErrorCause(err)\n\n  if (cause) {\n    seen.add(err)\n\n    // @ts-ignore\n    const skipIfVErrorStyleCause = typeof err.cause === 'function'\n\n    return (message +\n      (skipIfVErrorStyleCause ? '' : ': ') +\n      _messageWithCauses(cause, seen, skipIfVErrorStyleCause))\n  } else {\n    return message\n  }\n}\n\n/**\n * @param {Error} err\n * @returns {string}\n */\nconst messageWithCauses = (err) => _messageWithCauses(err, new Set())\n\nmodule.exports = {\n  isErrorLike,\n  getErrorCause,\n  stackWithCauses,\n  messageWithCauses\n}\n", "'use strict'\n\nconst seen = Symbol('circular-ref-tag')\nconst rawSymbol = Symbol('pino-raw-err-ref')\n\nconst pinoErrProto = Object.create({}, {\n  type: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  message: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  stack: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  aggregateErrors: {\n    enumerable: true,\n    writable: true,\n    value: undefined\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoErrProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nmodule.exports = {\n  pinoErrProto,\n  pinoErrorSymbols: {\n    seen,\n    rawSymbol\n  }\n}\n", "'use strict'\n\nmodule.exports = errSerializer\n\nconst { messageWithCauses, stackWithCauses, isErrorLike } = require('./err-helpers')\nconst { pinoErrProto, pinoErrorSymbols } = require('./err-proto')\nconst { seen } = pinoErrorSymbols\n\nconst { toString } = Object.prototype\n\nfunction errSerializer (err) {\n  if (!isErrorLike(err)) {\n    return err\n  }\n\n  err[seen] = undefined // tag to prevent re-looking at this\n  const _err = Object.create(pinoErrProto)\n  _err.type = toString.call(err.constructor) === '[object Function]'\n    ? err.constructor.name\n    : err.name\n  _err.message = messageWithCauses(err)\n  _err.stack = stackWithCauses(err)\n\n  if (Array.isArray(err.errors)) {\n    _err.aggregateErrors = err.errors.map(err => errSerializer(err))\n  }\n\n  for (const key in err) {\n    if (_err[key] === undefined) {\n      const val = err[key]\n      if (isErrorLike(val)) {\n        // We append cause messages and stacks to _err, therefore skipping causes here\n        if (key !== 'cause' && !Object.prototype.hasOwnProperty.call(val, seen)) {\n          _err[key] = errSerializer(val)\n        }\n      } else {\n        _err[key] = val\n      }\n    }\n  }\n\n  delete err[seen] // clean up tag in case err is serialized again later\n  _err.raw = err\n  return _err\n}\n", "'use strict'\n\nmodule.exports = errWithCauseSerializer\n\nconst { isErrorLike } = require('./err-helpers')\nconst { pinoErrProto, pinoErrorSymbols } = require('./err-proto')\nconst { seen } = pinoErrorSymbols\n\nconst { toString } = Object.prototype\n\nfunction errWithCauseSerializer (err) {\n  if (!isErrorLike(err)) {\n    return err\n  }\n\n  err[seen] = undefined // tag to prevent re-looking at this\n  const _err = Object.create(pinoErrProto)\n  _err.type = toString.call(err.constructor) === '[object Function]'\n    ? err.constructor.name\n    : err.name\n  _err.message = err.message\n  _err.stack = err.stack\n\n  if (Array.isArray(err.errors)) {\n    _err.aggregateErrors = err.errors.map(err => errWithCauseSerializer(err))\n  }\n\n  if (isErrorLike(err.cause) && !Object.prototype.hasOwnProperty.call(err.cause, seen)) {\n    _err.cause = errWithCauseSerializer(err.cause)\n  }\n\n  for (const key in err) {\n    if (_err[key] === undefined) {\n      const val = err[key]\n      if (isErrorLike(val)) {\n        if (!Object.prototype.hasOwnProperty.call(val, seen)) {\n          _err[key] = errWithCauseSerializer(val)\n        }\n      } else {\n        _err[key] = val\n      }\n    }\n  }\n\n  delete err[seen] // clean up tag in case err is serialized again later\n  _err.raw = err\n  return _err\n}\n", "'use strict'\n\nmodule.exports = {\n  mapHttpRequest,\n  reqSerializer\n}\n\nconst rawSymbol = Symbol('pino-raw-req-ref')\nconst pinoReqProto = Object.create({}, {\n  id: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  method: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  url: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  query: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  params: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  headers: {\n    enumerable: true,\n    writable: true,\n    value: {}\n  },\n  remoteAddress: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  remotePort: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoReqProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nfunction reqSerializer (req) {\n  // req.info is for hapi compat.\n  const connection = req.info || req.socket\n  const _req = Object.create(pinoReqProto)\n  _req.id = (typeof req.id === 'function' ? req.id() : (req.id || (req.info ? req.info.id : undefined)))\n  _req.method = req.method\n  // req.originalUrl is for expressjs compat.\n  if (req.originalUrl) {\n    _req.url = req.originalUrl\n  } else {\n    const path = req.path\n    // path for safe hapi compat.\n    _req.url = typeof path === 'string' ? path : (req.url ? req.url.path || req.url : undefined)\n  }\n\n  if (req.query) {\n    _req.query = req.query\n  }\n\n  if (req.params) {\n    _req.params = req.params\n  }\n\n  _req.headers = req.headers\n  _req.remoteAddress = connection && connection.remoteAddress\n  _req.remotePort = connection && connection.remotePort\n  // req.raw is  for hapi compat/equivalence\n  _req.raw = req.raw || req\n  return _req\n}\n\nfunction mapHttpRequest (req) {\n  return {\n    req: reqSerializer(req)\n  }\n}\n", "'use strict'\n\nmodule.exports = {\n  mapHttpResponse,\n  resSerializer\n}\n\nconst rawSymbol = Symbol('pino-raw-res-ref')\nconst pinoResProto = Object.create({}, {\n  statusCode: {\n    enumerable: true,\n    writable: true,\n    value: 0\n  },\n  headers: {\n    enumerable: true,\n    writable: true,\n    value: ''\n  },\n  raw: {\n    enumerable: false,\n    get: function () {\n      return this[rawSymbol]\n    },\n    set: function (val) {\n      this[rawSymbol] = val\n    }\n  }\n})\nObject.defineProperty(pinoResProto, rawSymbol, {\n  writable: true,\n  value: {}\n})\n\nfunction resSerializer (res) {\n  const _res = Object.create(pinoResProto)\n  _res.statusCode = res.headersSent ? res.statusCode : null\n  _res.headers = res.getHeaders ? res.getHeaders() : res._headers\n  _res.raw = res\n  return _res\n}\n\nfunction mapHttpResponse (res) {\n  return {\n    res: resSerializer(res)\n  }\n}\n", "'use strict'\n\nconst errSerializer = require('./lib/err')\nconst errWithCauseSerializer = require('./lib/err-with-cause')\nconst reqSerializers = require('./lib/req')\nconst resSerializers = require('./lib/res')\n\nmodule.exports = {\n  err: errSerializer,\n  errWithCause: errWithCauseSerializer,\n  mapHttpRequest: reqSerializers.mapHttpRequest,\n  mapHttpResponse: resSerializers.mapHttpResponse,\n  req: reqSerializers.reqSerializer,\n  res: resSerializers.resSerializer,\n\n  wrapErrorSerializer: function wrapErrorSerializer (customSerializer) {\n    if (customSerializer === errSerializer) return customSerializer\n    return function wrapErrSerializer (err) {\n      return customSerializer(errSerializer(err))\n    }\n  },\n\n  wrapRequestSerializer: function wrapRequestSerializer (customSerializer) {\n    if (customSerializer === reqSerializers.reqSerializer) return customSerializer\n    return function wrappedReqSerializer (req) {\n      return customSerializer(reqSerializers.reqSerializer(req))\n    }\n  },\n\n  wrapResponseSerializer: function wrapResponseSerializer (customSerializer) {\n    if (customSerializer === resSerializers.resSerializer) return customSerializer\n    return function wrappedResSerializer (res) {\n      return customSerializer(resSerializers.resSerializer(res))\n    }\n  }\n}\n", "'use strict'\n\nfunction noOpPrepareStackTrace (_, stack) {\n  return stack\n}\n\nmodule.exports = function getCallers () {\n  const originalPrepare = Error.prepareStackTrace\n  Error.prepareStackTrace = noOpPrepareStackTrace\n  const stack = new Error().stack\n  Error.prepareStackTrace = originalPrepare\n\n  if (!Array.isArray(stack)) {\n    return undefined\n  }\n\n  const entries = stack.slice(2)\n\n  const fileNames = []\n\n  for (const entry of entries) {\n    if (!entry) {\n      continue\n    }\n\n    fileNames.push(entry.getFileName())\n  }\n\n  return fileNames\n}\n", "'use strict'\n\nmodule.exports = validator\n\nfunction validator (opts = {}) {\n  const {\n    ERR_PATHS_MUST_BE_STRINGS = () => 'fast-redact - Paths must be (non-empty) strings',\n    ERR_INVALID_PATH = (s) => `fast-redact \u2013 Invalid path (${s})`\n  } = opts\n\n  return function validate ({ paths }) {\n    paths.forEach((s) => {\n      if (typeof s !== 'string') {\n        throw Error(ERR_PATHS_MUST_BE_STRINGS())\n      }\n      try {\n        if (/\u3007/.test(s)) throw Error()\n        const expr = (s[0] === '[' ? '' : '.') + s.replace(/^\\*/, '\u3007').replace(/\\.\\*/g, '.\u3007').replace(/\\[\\*\\]/g, '[\u3007]')\n        if (/\\n|\\r|;/.test(expr)) throw Error()\n        if (/\\/\\*/.test(expr)) throw Error()\n        /* eslint-disable-next-line */\n        Function(`\n            'use strict'\n            const o = new Proxy({}, { get: () => o, set: () => { throw Error() } });\n            const \u3007 = null;\n            o${expr}\n            if ([o${expr}].length !== 1) throw Error()`)()\n      } catch (e) {\n        throw Error(ERR_INVALID_PATH(s))\n      }\n    })\n  }\n}\n", "'use strict'\n\nmodule.exports = /[^.[\\]]+|\\[((?:.)*?)\\]/g\n\n/*\nRegular expression explanation:\n\nAlt 1: /[^.[\\]]+/ - Match one or more characters that are *not* a dot (.)\n                    opening square bracket ([) or closing square bracket (])\n\nAlt 2: /\\[((?:.)*?)\\]/ - If the char IS dot or square bracket, then create a capture\n                         group (which will be capture group $1) that matches anything\n                         within square brackets. Expansion is lazy so it will\n                         stop matching as soon as the first closing bracket is met `]`\n                         (rather than continuing to match until the final closing bracket).\n*/\n", "'use strict'\n\nconst rx = require('./rx')\n\nmodule.exports = parse\n\nfunction parse ({ paths }) {\n  const wildcards = []\n  var wcLen = 0\n  const secret = paths.reduce(function (o, strPath, ix) {\n    var path = strPath.match(rx).map((p) => p.replace(/'|\"|`/g, ''))\n    const leadingBracket = strPath[0] === '['\n    path = path.map((p) => {\n      if (p[0] === '[') return p.substr(1, p.length - 2)\n      else return p\n    })\n    const star = path.indexOf('*')\n    if (star > -1) {\n      const before = path.slice(0, star)\n      const beforeStr = before.join('.')\n      const after = path.slice(star + 1, path.length)\n      const nested = after.length > 0\n      wcLen++\n      wildcards.push({\n        before,\n        beforeStr,\n        after,\n        nested\n      })\n    } else {\n      o[strPath] = {\n        path: path,\n        val: undefined,\n        precensored: false,\n        circle: '',\n        escPath: JSON.stringify(strPath),\n        leadingBracket: leadingBracket\n      }\n    }\n    return o\n  }, {})\n\n  return { wildcards, wcLen, secret }\n}\n", "'use strict'\n\nconst rx = require('./rx')\n\nmodule.exports = redactor\n\nfunction redactor ({ secret, serialize, wcLen, strict, isCensorFct, censorFctTakesPath }, state) {\n  /* eslint-disable-next-line */\n  const redact = Function('o', `\n    if (typeof o !== 'object' || o == null) {\n      ${strictImpl(strict, serialize)}\n    }\n    const { censor, secret } = this\n    const originalSecret = {}\n    const secretKeys = Object.keys(secret)\n    for (var i = 0; i < secretKeys.length; i++) {\n      originalSecret[secretKeys[i]] = secret[secretKeys[i]]\n    }\n\n    ${redactTmpl(secret, isCensorFct, censorFctTakesPath)}\n    this.compileRestore()\n    ${dynamicRedactTmpl(wcLen > 0, isCensorFct, censorFctTakesPath)}\n    this.secret = originalSecret\n    ${resultTmpl(serialize)}\n  `).bind(state)\n\n  redact.state = state\n\n  if (serialize === false) {\n    redact.restore = (o) => state.restore(o)\n  }\n\n  return redact\n}\n\nfunction redactTmpl (secret, isCensorFct, censorFctTakesPath) {\n  return Object.keys(secret).map((path) => {\n    const { escPath, leadingBracket, path: arrPath } = secret[path]\n    const skip = leadingBracket ? 1 : 0\n    const delim = leadingBracket ? '' : '.'\n    const hops = []\n    var match\n    while ((match = rx.exec(path)) !== null) {\n      const [ , ix ] = match\n      const { index, input } = match\n      if (index > skip) hops.push(input.substring(0, index - (ix ? 0 : 1)))\n    }\n    var existence = hops.map((p) => `o${delim}${p}`).join(' && ')\n    if (existence.length === 0) existence += `o${delim}${path} != null`\n    else existence += ` && o${delim}${path} != null`\n\n    const circularDetection = `\n      switch (true) {\n        ${hops.reverse().map((p) => `\n          case o${delim}${p} === censor:\n            secret[${escPath}].circle = ${JSON.stringify(p)}\n            break\n        `).join('\\n')}\n      }\n    `\n\n    const censorArgs = censorFctTakesPath\n      ? `val, ${JSON.stringify(arrPath)}`\n      : `val`\n\n    return `\n      if (${existence}) {\n        const val = o${delim}${path}\n        if (val === censor) {\n          secret[${escPath}].precensored = true\n        } else {\n          secret[${escPath}].val = val\n          o${delim}${path} = ${isCensorFct ? `censor(${censorArgs})` : 'censor'}\n          ${circularDetection}\n        }\n      }\n    `\n  }).join('\\n')\n}\n\nfunction dynamicRedactTmpl (hasWildcards, isCensorFct, censorFctTakesPath) {\n  return hasWildcards === true ? `\n    {\n      const { wildcards, wcLen, groupRedact, nestedRedact } = this\n      for (var i = 0; i < wcLen; i++) {\n        const { before, beforeStr, after, nested } = wildcards[i]\n        if (nested === true) {\n          secret[beforeStr] = secret[beforeStr] || []\n          nestedRedact(secret[beforeStr], o, before, after, censor, ${isCensorFct}, ${censorFctTakesPath})\n        } else secret[beforeStr] = groupRedact(o, before, censor, ${isCensorFct}, ${censorFctTakesPath})\n      }\n    }\n  ` : ''\n}\n\nfunction resultTmpl (serialize) {\n  return serialize === false ? `return o` : `\n    var s = this.serialize(o)\n    this.restore(o)\n    return s\n  `\n}\n\nfunction strictImpl (strict, serialize) {\n  return strict === true\n    ? `throw Error('fast-redact: primitives cannot be redacted')`\n    : serialize === false ? `return o` : `return this.serialize(o)`\n}\n", "'use strict'\n\nmodule.exports = {\n  groupRedact,\n  groupRestore,\n  nestedRedact,\n  nestedRestore\n}\n\nfunction groupRestore ({ keys, values, target }) {\n  if (target == null || typeof target === 'string') return\n  const length = keys.length\n  for (var i = 0; i < length; i++) {\n    const k = keys[i]\n    target[k] = values[i]\n  }\n}\n\nfunction groupRedact (o, path, censor, isCensorFct, censorFctTakesPath) {\n  const target = get(o, path)\n  if (target == null || typeof target === 'string') return { keys: null, values: null, target, flat: true }\n  const keys = Object.keys(target)\n  const keysLength = keys.length\n  const pathLength = path.length\n  const pathWithKey = censorFctTakesPath ? [...path] : undefined\n  const values = new Array(keysLength)\n\n  for (var i = 0; i < keysLength; i++) {\n    const key = keys[i]\n    values[i] = target[key]\n\n    if (censorFctTakesPath) {\n      pathWithKey[pathLength] = key\n      target[key] = censor(target[key], pathWithKey)\n    } else if (isCensorFct) {\n      target[key] = censor(target[key])\n    } else {\n      target[key] = censor\n    }\n  }\n  return { keys, values, target, flat: true }\n}\n\n/**\n * @param {RestoreInstruction[]} instructions a set of instructions for restoring values to objects\n */\nfunction nestedRestore (instructions) {\n  for (let i = 0; i < instructions.length; i++) {\n    const { target, path, value } = instructions[i]\n    let current = target\n    for (let i = path.length - 1; i > 0; i--) {\n      current = current[path[i]]\n    }\n    current[path[0]] = value\n  }\n}\n\nfunction nestedRedact (store, o, path, ns, censor, isCensorFct, censorFctTakesPath) {\n  const target = get(o, path)\n  if (target == null) return\n  const keys = Object.keys(target)\n  const keysLength = keys.length\n  for (var i = 0; i < keysLength; i++) {\n    const key = keys[i]\n    specialSet(store, target, key, path, ns, censor, isCensorFct, censorFctTakesPath)\n  }\n  return store\n}\n\nfunction has (obj, prop) {\n  return obj !== undefined && obj !== null\n    ? ('hasOwn' in Object ? Object.hasOwn(obj, prop) : Object.prototype.hasOwnProperty.call(obj, prop))\n    : false\n}\n\nfunction specialSet (store, o, k, path, afterPath, censor, isCensorFct, censorFctTakesPath) {\n  const afterPathLen = afterPath.length\n  const lastPathIndex = afterPathLen - 1\n  const originalKey = k\n  var i = -1\n  var n\n  var nv\n  var ov\n  var oov = null\n  var wc = null\n  var kIsWc\n  var wcov\n  var consecutive = false\n  var level = 0\n  // need to track depth of the `redactPath` tree\n  var depth = 0\n  var redactPathCurrent = tree()\n  ov = n = o[k]\n  if (typeof n !== 'object') return\n  while (n != null && ++i < afterPathLen) {\n    depth += 1\n    k = afterPath[i]\n    oov = ov\n    if (k !== '*' && !wc && !(typeof n === 'object' && k in n)) {\n      break\n    }\n    if (k === '*') {\n      if (wc === '*') {\n        consecutive = true\n      }\n      wc = k\n      if (i !== lastPathIndex) {\n        continue\n      }\n    }\n    if (wc) {\n      const wcKeys = Object.keys(n)\n      for (var j = 0; j < wcKeys.length; j++) {\n        const wck = wcKeys[j]\n        wcov = n[wck]\n        kIsWc = k === '*'\n        if (consecutive) {\n          redactPathCurrent = node(redactPathCurrent, wck, depth)\n          level = i\n          ov = iterateNthLevel(wcov, level - 1, k, path, afterPath, censor, isCensorFct, censorFctTakesPath, originalKey, n, nv, ov, kIsWc, wck, i, lastPathIndex, redactPathCurrent, store, o[originalKey], depth + 1)\n        } else {\n          if (kIsWc || (typeof wcov === 'object' && wcov !== null && k in wcov)) {\n            if (kIsWc) {\n              ov = wcov\n            } else {\n              ov = wcov[k]\n            }\n            nv = (i !== lastPathIndex)\n              ? ov\n              : (isCensorFct\n                ? (censorFctTakesPath ? censor(ov, [...path, originalKey, ...afterPath]) : censor(ov))\n                : censor)\n            if (kIsWc) {\n              const rv = restoreInstr(node(redactPathCurrent, wck, depth), ov, o[originalKey])\n              store.push(rv)\n              n[wck] = nv\n            } else {\n              if (wcov[k] === nv) {\n                // pass\n              } else if ((nv === undefined && censor !== undefined) || (has(wcov, k) && nv === ov)) {\n                redactPathCurrent = node(redactPathCurrent, wck, depth)\n              } else {\n                redactPathCurrent = node(redactPathCurrent, wck, depth)\n                const rv = restoreInstr(node(redactPathCurrent, k, depth + 1), ov, o[originalKey])\n                store.push(rv)\n                wcov[k] = nv\n              }\n            }\n          }\n        }\n      }\n      wc = null\n    } else {\n      ov = n[k]\n      redactPathCurrent = node(redactPathCurrent, k, depth)\n      nv = (i !== lastPathIndex)\n        ? ov\n        : (isCensorFct\n          ? (censorFctTakesPath ? censor(ov, [...path, originalKey, ...afterPath]) : censor(ov))\n          : censor)\n      if ((has(n, k) && nv === ov) || (nv === undefined && censor !== undefined)) {\n        // pass\n      } else {\n        const rv = restoreInstr(redactPathCurrent, ov, o[originalKey])\n        store.push(rv)\n        n[k] = nv\n      }\n      n = n[k]\n    }\n    if (typeof n !== 'object') break\n    // prevent circular structure, see https://github.com/pinojs/pino/issues/1513\n    if (ov === oov || typeof ov === 'undefined') {\n      // pass\n    }\n  }\n}\n\nfunction get (o, p) {\n  var i = -1\n  var l = p.length\n  var n = o\n  while (n != null && ++i < l) {\n    n = n[p[i]]\n  }\n  return n\n}\n\nfunction iterateNthLevel (wcov, level, k, path, afterPath, censor, isCensorFct, censorFctTakesPath, originalKey, n, nv, ov, kIsWc, wck, i, lastPathIndex, redactPathCurrent, store, parent, depth) {\n  if (level === 0) {\n    if (kIsWc || (typeof wcov === 'object' && wcov !== null && k in wcov)) {\n      if (kIsWc) {\n        ov = wcov\n      } else {\n        ov = wcov[k]\n      }\n      nv = (i !== lastPathIndex)\n        ? ov\n        : (isCensorFct\n          ? (censorFctTakesPath ? censor(ov, [...path, originalKey, ...afterPath]) : censor(ov))\n          : censor)\n      if (kIsWc) {\n        const rv = restoreInstr(redactPathCurrent, ov, parent)\n        store.push(rv)\n        n[wck] = nv\n      } else {\n        if (wcov[k] === nv) {\n          // pass\n        } else if ((nv === undefined && censor !== undefined) || (has(wcov, k) && nv === ov)) {\n          // pass\n        } else {\n          const rv = restoreInstr(node(redactPathCurrent, k, depth + 1), ov, parent)\n          store.push(rv)\n          wcov[k] = nv\n        }\n      }\n    }\n  }\n  for (const key in wcov) {\n    if (typeof wcov[key] === 'object') {\n      redactPathCurrent = node(redactPathCurrent, key, depth)\n      iterateNthLevel(wcov[key], level - 1, k, path, afterPath, censor, isCensorFct, censorFctTakesPath, originalKey, n, nv, ov, kIsWc, wck, i, lastPathIndex, redactPathCurrent, store, parent, depth + 1)\n    }\n  }\n}\n\n/**\n * @typedef {object} TreeNode\n * @prop {TreeNode} [parent] reference to the parent of this node in the tree, or `null` if there is no parent\n * @prop {string} key the key that this node represents (key here being part of the path being redacted\n * @prop {TreeNode[]} children the child nodes of this node\n * @prop {number} depth the depth of this node in the tree\n */\n\n/**\n * instantiate a new, empty tree\n * @returns {TreeNode}\n */\nfunction tree () {\n  return { parent: null, key: null, children: [], depth: 0 }\n}\n\n/**\n * creates a new node in the tree, attaching it as a child of the provided parent node\n * if the specified depth matches the parent depth, adds the new node as a _sibling_ of the parent instead\n  * @param {TreeNode} parent the parent node to add a new node to (if the parent depth matches the provided `depth` value, will instead add as a sibling of this\n  * @param {string} key the key that the new node represents (key here being part of the path being redacted)\n  * @param {number} depth the depth of the new node in the tree - used to determing whether to add the new node as a child or sibling of the provided `parent` node\n  * @returns {TreeNode} a reference to the newly created node in the tree\n */\nfunction node (parent, key, depth) {\n  if (parent.depth === depth) {\n    return node(parent.parent, key, depth)\n  }\n\n  var child = {\n    parent,\n    key,\n    depth,\n    children: []\n  }\n\n  parent.children.push(child)\n\n  return child\n}\n\n/**\n * @typedef {object} RestoreInstruction\n * @prop {string[]} path a reverse-order path that can be used to find the correct insertion point to restore a `value` for the given `parent` object\n * @prop {*} value the value to restore\n * @prop {object} target the object to restore the `value` in\n */\n\n/**\n * create a restore instruction for the given redactPath node\n * generates a path in reverse order by walking up the redactPath tree\n * @param {TreeNode} node a tree node that should be at the bottom of the redact path (i.e. have no children) - this will be used to walk up the redact path tree to construct the path needed to restore\n * @param {*} value the value to restore\n * @param {object} target a reference to the parent object to apply the restore instruction to\n * @returns {RestoreInstruction} an instruction used to restore a nested value for a specific object\n */\nfunction restoreInstr (node, value, target) {\n  let current = node\n  const path = []\n  do {\n    path.push(current.key)\n    current = current.parent\n  } while (current.parent != null)\n\n  return { path, value, target }\n}\n", "'use strict'\n\nconst { groupRestore, nestedRestore } = require('./modifiers')\n\nmodule.exports = restorer\n\nfunction restorer () {\n  return function compileRestore () {\n    if (this.restore) {\n      this.restore.state.secret = this.secret\n      return\n    }\n    const { secret, wcLen } = this\n    const paths = Object.keys(secret)\n    const resetters = resetTmpl(secret, paths)\n    const hasWildcards = wcLen > 0\n    const state = hasWildcards ? { secret, groupRestore, nestedRestore } : { secret }\n    /* eslint-disable-next-line */\n    this.restore = Function(\n      'o',\n      restoreTmpl(resetters, paths, hasWildcards)\n    ).bind(state)\n    this.restore.state = state\n  }\n}\n\n/**\n * Mutates the original object to be censored by restoring its original values\n * prior to censoring.\n *\n * @param {object} secret Compiled object describing which target fields should\n * be censored and the field states.\n * @param {string[]} paths The list of paths to censor as provided at\n * initialization time.\n *\n * @returns {string} String of JavaScript to be used by `Function()`. The\n * string compiles to the function that does the work in the description.\n */\nfunction resetTmpl (secret, paths) {\n  return paths.map((path) => {\n    const { circle, escPath, leadingBracket } = secret[path]\n    const delim = leadingBracket ? '' : '.'\n    const reset = circle\n      ? `o.${circle} = secret[${escPath}].val`\n      : `o${delim}${path} = secret[${escPath}].val`\n    const clear = `secret[${escPath}].val = undefined`\n    return `\n      if (secret[${escPath}].val !== undefined) {\n        try { ${reset} } catch (e) {}\n        ${clear}\n      }\n    `\n  }).join('')\n}\n\n/**\n * Creates the body of the restore function\n *\n * Restoration of the redacted object happens\n * backwards, in reverse order of redactions,\n * so that repeated redactions on the same object\n * property can be eventually rolled back to the\n * original value.\n *\n * This way dynamic redactions are restored first,\n * starting from the last one working backwards and\n * followed by the static ones.\n *\n * @returns {string} the body of the restore function\n */\nfunction restoreTmpl (resetters, paths, hasWildcards) {\n  const dynamicReset = hasWildcards === true ? `\n    const keys = Object.keys(secret)\n    const len = keys.length\n    for (var i = len - 1; i >= ${paths.length}; i--) {\n      const k = keys[i]\n      const o = secret[k]\n      if (o) {\n        if (o.flat === true) this.groupRestore(o)\n        else this.nestedRestore(o)\n        secret[k] = null\n      }\n    }\n  ` : ''\n\n  return `\n    const secret = this.secret\n    ${dynamicReset}\n    ${resetters}\n    return o\n  `\n}\n", "'use strict'\n\nmodule.exports = state\n\nfunction state (o) {\n  const {\n    secret,\n    censor,\n    compileRestore,\n    serialize,\n    groupRedact,\n    nestedRedact,\n    wildcards,\n    wcLen\n  } = o\n  const builder = [{ secret, censor, compileRestore }]\n  if (serialize !== false) builder.push({ serialize })\n  if (wcLen > 0) builder.push({ groupRedact, nestedRedact, wildcards, wcLen })\n  return Object.assign(...builder)\n}\n", "'use strict'\n\nconst validator = require('./lib/validator')\nconst parse = require('./lib/parse')\nconst redactor = require('./lib/redactor')\nconst restorer = require('./lib/restorer')\nconst { groupRedact, nestedRedact } = require('./lib/modifiers')\nconst state = require('./lib/state')\nconst rx = require('./lib/rx')\nconst validate = validator()\nconst noop = (o) => o\nnoop.restore = noop\n\nconst DEFAULT_CENSOR = '[REDACTED]'\nfastRedact.rx = rx\nfastRedact.validator = validator\n\nmodule.exports = fastRedact\n\nfunction fastRedact (opts = {}) {\n  const paths = Array.from(new Set(opts.paths || []))\n  const serialize = 'serialize' in opts ? (\n    opts.serialize === false ? opts.serialize\n      : (typeof opts.serialize === 'function' ? opts.serialize : JSON.stringify)\n  ) : JSON.stringify\n  const remove = opts.remove\n  if (remove === true && serialize !== JSON.stringify) {\n    throw Error('fast-redact \u2013 remove option may only be set when serializer is JSON.stringify')\n  }\n  const censor = remove === true\n    ? undefined\n    : 'censor' in opts ? opts.censor : DEFAULT_CENSOR\n\n  const isCensorFct = typeof censor === 'function'\n  const censorFctTakesPath = isCensorFct && censor.length > 1\n\n  if (paths.length === 0) return serialize || noop\n\n  validate({ paths, serialize, censor })\n\n  const { wildcards, wcLen, secret } = parse({ paths, censor })\n\n  const compileRestore = restorer()\n  const strict = 'strict' in opts ? opts.strict : true\n\n  return redactor({ secret, wcLen, serialize, strict, isCensorFct, censorFctTakesPath }, state({\n    secret,\n    censor,\n    compileRestore,\n    serialize,\n    groupRedact,\n    nestedRedact,\n    wildcards,\n    wcLen\n  }))\n}\n", "'use strict'\n\nconst setLevelSym = Symbol('pino.setLevel')\nconst getLevelSym = Symbol('pino.getLevel')\nconst levelValSym = Symbol('pino.levelVal')\nconst levelCompSym = Symbol('pino.levelComp')\nconst useLevelLabelsSym = Symbol('pino.useLevelLabels')\nconst useOnlyCustomLevelsSym = Symbol('pino.useOnlyCustomLevels')\nconst mixinSym = Symbol('pino.mixin')\n\nconst lsCacheSym = Symbol('pino.lsCache')\nconst chindingsSym = Symbol('pino.chindings')\n\nconst asJsonSym = Symbol('pino.asJson')\nconst writeSym = Symbol('pino.write')\nconst redactFmtSym = Symbol('pino.redactFmt')\n\nconst timeSym = Symbol('pino.time')\nconst timeSliceIndexSym = Symbol('pino.timeSliceIndex')\nconst streamSym = Symbol('pino.stream')\nconst stringifySym = Symbol('pino.stringify')\nconst stringifySafeSym = Symbol('pino.stringifySafe')\nconst stringifiersSym = Symbol('pino.stringifiers')\nconst endSym = Symbol('pino.end')\nconst formatOptsSym = Symbol('pino.formatOpts')\nconst messageKeySym = Symbol('pino.messageKey')\nconst errorKeySym = Symbol('pino.errorKey')\nconst nestedKeySym = Symbol('pino.nestedKey')\nconst nestedKeyStrSym = Symbol('pino.nestedKeyStr')\nconst mixinMergeStrategySym = Symbol('pino.mixinMergeStrategy')\nconst msgPrefixSym = Symbol('pino.msgPrefix')\n\nconst wildcardFirstSym = Symbol('pino.wildcardFirst')\n\n// public symbols, no need to use the same pino\n// version for these\nconst serializersSym = Symbol.for('pino.serializers')\nconst formattersSym = Symbol.for('pino.formatters')\nconst hooksSym = Symbol.for('pino.hooks')\nconst needsMetadataGsym = Symbol.for('pino.metadata')\n\nmodule.exports = {\n  setLevelSym,\n  getLevelSym,\n  levelValSym,\n  levelCompSym,\n  useLevelLabelsSym,\n  mixinSym,\n  lsCacheSym,\n  chindingsSym,\n  asJsonSym,\n  writeSym,\n  serializersSym,\n  redactFmtSym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  stringifySym,\n  stringifySafeSym,\n  stringifiersSym,\n  endSym,\n  formatOptsSym,\n  messageKeySym,\n  errorKeySym,\n  nestedKeySym,\n  wildcardFirstSym,\n  needsMetadataGsym,\n  useOnlyCustomLevelsSym,\n  formattersSym,\n  hooksSym,\n  nestedKeyStrSym,\n  mixinMergeStrategySym,\n  msgPrefixSym\n}\n", "'use strict'\n\nconst fastRedact = require('fast-redact')\nconst { redactFmtSym, wildcardFirstSym } = require('./symbols')\nconst { rx, validator } = fastRedact\n\nconst validate = validator({\n  ERR_PATHS_MUST_BE_STRINGS: () => 'pino \u2013 redacted paths must be strings',\n  ERR_INVALID_PATH: (s) => `pino \u2013 redact paths array contains an invalid path (${s})`\n})\n\nconst CENSOR = '[Redacted]'\nconst strict = false // TODO should this be configurable?\n\nfunction redaction (opts, serialize) {\n  const { paths, censor } = handle(opts)\n\n  const shape = paths.reduce((o, str) => {\n    rx.lastIndex = 0\n    const first = rx.exec(str)\n    const next = rx.exec(str)\n\n    // ns is the top-level path segment, brackets + quoting removed.\n    let ns = first[1] !== undefined\n      ? first[1].replace(/^(?:\"|'|`)(.*)(?:\"|'|`)$/, '$1')\n      : first[0]\n\n    if (ns === '*') {\n      ns = wildcardFirstSym\n    }\n\n    // top level key:\n    if (next === null) {\n      o[ns] = null\n      return o\n    }\n\n    // path with at least two segments:\n    // if ns is already redacted at the top level, ignore lower level redactions\n    if (o[ns] === null) {\n      return o\n    }\n\n    const { index } = next\n    const nextPath = `${str.substr(index, str.length - 1)}`\n\n    o[ns] = o[ns] || []\n\n    // shape is a mix of paths beginning with literal values and wildcard\n    // paths [ \"a.b.c\", \"*.b.z\" ] should reduce to a shape of\n    // { \"a\": [ \"b.c\", \"b.z\" ], *: [ \"b.z\" ] }\n    // note: \"b.z\" is in both \"a\" and * arrays because \"a\" matches the wildcard.\n    // (* entry has wildcardFirstSym as key)\n    if (ns !== wildcardFirstSym && o[ns].length === 0) {\n      // first time ns's get all '*' redactions so far\n      o[ns].push(...(o[wildcardFirstSym] || []))\n    }\n\n    if (ns === wildcardFirstSym) {\n      // new * path gets added to all previously registered literal ns's.\n      Object.keys(o).forEach(function (k) {\n        if (o[k]) {\n          o[k].push(nextPath)\n        }\n      })\n    }\n\n    o[ns].push(nextPath)\n    return o\n  }, {})\n\n  // the redactor assigned to the format symbol key\n  // provides top level redaction for instances where\n  // an object is interpolated into the msg string\n  const result = {\n    [redactFmtSym]: fastRedact({ paths, censor, serialize, strict })\n  }\n\n  const topCensor = (...args) => {\n    return typeof censor === 'function' ? serialize(censor(...args)) : serialize(censor)\n  }\n\n  return [...Object.keys(shape), ...Object.getOwnPropertySymbols(shape)].reduce((o, k) => {\n    // top level key:\n    if (shape[k] === null) {\n      o[k] = (value) => topCensor(value, [k])\n    } else {\n      const wrappedCensor = typeof censor === 'function'\n        ? (value, path) => {\n            return censor(value, [k, ...path])\n          }\n        : censor\n      o[k] = fastRedact({\n        paths: shape[k],\n        censor: wrappedCensor,\n        serialize,\n        strict\n      })\n    }\n    return o\n  }, result)\n}\n\nfunction handle (opts) {\n  if (Array.isArray(opts)) {\n    opts = { paths: opts, censor: CENSOR }\n    validate(opts)\n    return opts\n  }\n  let { paths, censor = CENSOR, remove } = opts\n  if (Array.isArray(paths) === false) { throw Error('pino \u2013 redact must contain an array of strings') }\n  if (remove === true) censor = undefined\n  validate({ paths, censor })\n\n  return { paths, censor }\n}\n\nmodule.exports = redaction\n", "'use strict'\n\nconst nullTime = () => ''\n\nconst epochTime = () => `,\"time\":${Date.now()}`\n\nconst unixTime = () => `,\"time\":${Math.round(Date.now() / 1000.0)}`\n\nconst isoTime = () => `,\"time\":\"${new Date(Date.now()).toISOString()}\"` // using Date.now() for testability\n\nmodule.exports = { nullTime, epochTime, unixTime, isoTime }\n", "'use strict'\nfunction tryStringify (o) {\n  try { return JSON.stringify(o) } catch(e) { return '\"[Circular]\"' }\n}\n\nmodule.exports = format\n\nfunction format(f, args, opts) {\n  var ss = (opts && opts.stringify) || tryStringify\n  var offset = 1\n  if (typeof f === 'object' && f !== null) {\n    var len = args.length + offset\n    if (len === 1) return f\n    var objects = new Array(len)\n    objects[0] = ss(f)\n    for (var index = 1; index < len; index++) {\n      objects[index] = ss(args[index])\n    }\n    return objects.join(' ')\n  }\n  if (typeof f !== 'string') {\n    return f\n  }\n  var argLen = args.length\n  if (argLen === 0) return f\n  var str = ''\n  var a = 1 - offset\n  var lastPos = -1\n  var flen = (f && f.length) || 0\n  for (var i = 0; i < flen;) {\n    if (f.charCodeAt(i) === 37 && i + 1 < flen) {\n      lastPos = lastPos > -1 ? lastPos : 0\n      switch (f.charCodeAt(i + 1)) {\n        case 100: // 'd'\n        case 102: // 'f'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Number(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 105: // 'i'\n          if (a >= argLen)\n            break\n          if (args[a] == null)  break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += Math.floor(Number(args[a]))\n          lastPos = i + 2\n          i++\n          break\n        case 79: // 'O'\n        case 111: // 'o'\n        case 106: // 'j'\n          if (a >= argLen)\n            break\n          if (args[a] === undefined) break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          var type = typeof args[a]\n          if (type === 'string') {\n            str += '\\'' + args[a] + '\\''\n            lastPos = i + 2\n            i++\n            break\n          }\n          if (type === 'function') {\n            str += args[a].name || '<anonymous>'\n            lastPos = i + 2\n            i++\n            break\n          }\n          str += ss(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 115: // 's'\n          if (a >= argLen)\n            break\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += String(args[a])\n          lastPos = i + 2\n          i++\n          break\n        case 37: // '%'\n          if (lastPos < i)\n            str += f.slice(lastPos, i)\n          str += '%'\n          lastPos = i + 2\n          i++\n          a--\n          break\n      }\n      ++a\n    }\n    ++i\n  }\n  if (lastPos === -1)\n    return f\n  else if (lastPos < flen) {\n    str += f.slice(lastPos)\n  }\n\n  return str\n}\n", "'use strict'\n\n/* global SharedArrayBuffer, Atomics */\n\nif (typeof SharedArrayBuffer !== 'undefined' && typeof Atomics !== 'undefined') {\n  const nil = new Int32Array(new SharedArrayBuffer(4))\n\n  function sleep (ms) {\n    // also filters out NaN, non-number types, including empty strings, but allows bigints\n    const valid = ms > 0 && ms < Infinity \n    if (valid === false) {\n      if (typeof ms !== 'number' && typeof ms !== 'bigint') {\n        throw TypeError('sleep: ms must be a number')\n      }\n      throw RangeError('sleep: ms must be a number that is greater than 0 but less than Infinity')\n    }\n\n    Atomics.wait(nil, 0, 0, Number(ms))\n  }\n  module.exports = sleep\n} else {\n\n  function sleep (ms) {\n    // also filters out NaN, non-number types, including empty strings, but allows bigints\n    const valid = ms > 0 && ms < Infinity \n    if (valid === false) {\n      if (typeof ms !== 'number' && typeof ms !== 'bigint') {\n        throw TypeError('sleep: ms must be a number')\n      }\n      throw RangeError('sleep: ms must be a number that is greater than 0 but less than Infinity')\n    }\n    const target = Date.now() + Number(ms)\n    while (target > Date.now()){}\n  }\n\n  module.exports = sleep\n\n}\n", "'use strict'\n\nconst fs = require('fs')\nconst EventEmitter = require('events')\nconst inherits = require('util').inherits\nconst path = require('path')\nconst sleep = require('atomic-sleep')\nconst assert = require('assert')\n\nconst BUSY_WRITE_TIMEOUT = 100\nconst kEmptyBuffer = Buffer.allocUnsafe(0)\n\n// 16 KB. Don't write more than docker buffer size.\n// https://github.com/moby/moby/blob/513ec73831269947d38a644c278ce3cac36783b2/daemon/logger/copier.go#L13\nconst MAX_WRITE = 16 * 1024\n\nconst kContentModeBuffer = 'buffer'\nconst kContentModeUtf8 = 'utf8'\n\nconst [major, minor] = (process.versions.node || '0.0').split('.').map(Number)\nconst kCopyBuffer = major >= 22 && minor >= 7\n\nfunction openFile (file, sonic) {\n  sonic._opening = true\n  sonic._writing = true\n  sonic._asyncDrainScheduled = false\n\n  // NOTE: 'error' and 'ready' events emitted below only relevant when sonic.sync===false\n  // for sync mode, there is no way to add a listener that will receive these\n\n  function fileOpened (err, fd) {\n    if (err) {\n      sonic._reopening = false\n      sonic._writing = false\n      sonic._opening = false\n\n      if (sonic.sync) {\n        process.nextTick(() => {\n          if (sonic.listenerCount('error') > 0) {\n            sonic.emit('error', err)\n          }\n        })\n      } else {\n        sonic.emit('error', err)\n      }\n      return\n    }\n\n    const reopening = sonic._reopening\n\n    sonic.fd = fd\n    sonic.file = file\n    sonic._reopening = false\n    sonic._opening = false\n    sonic._writing = false\n\n    if (sonic.sync) {\n      process.nextTick(() => sonic.emit('ready'))\n    } else {\n      sonic.emit('ready')\n    }\n\n    if (sonic.destroyed) {\n      return\n    }\n\n    // start\n    if ((!sonic._writing && sonic._len > sonic.minLength) || sonic._flushPending) {\n      sonic._actualWrite()\n    } else if (reopening) {\n      process.nextTick(() => sonic.emit('drain'))\n    }\n  }\n\n  const flags = sonic.append ? 'a' : 'w'\n  const mode = sonic.mode\n\n  if (sonic.sync) {\n    try {\n      if (sonic.mkdir) fs.mkdirSync(path.dirname(file), { recursive: true })\n      const fd = fs.openSync(file, flags, mode)\n      fileOpened(null, fd)\n    } catch (err) {\n      fileOpened(err)\n      throw err\n    }\n  } else if (sonic.mkdir) {\n    fs.mkdir(path.dirname(file), { recursive: true }, (err) => {\n      if (err) return fileOpened(err)\n      fs.open(file, flags, mode, fileOpened)\n    })\n  } else {\n    fs.open(file, flags, mode, fileOpened)\n  }\n}\n\nfunction SonicBoom (opts) {\n  if (!(this instanceof SonicBoom)) {\n    return new SonicBoom(opts)\n  }\n\n  let { fd, dest, minLength, maxLength, maxWrite, periodicFlush, sync, append = true, mkdir, retryEAGAIN, fsync, contentMode, mode } = opts || {}\n\n  fd = fd || dest\n\n  this._len = 0\n  this.fd = -1\n  this._bufs = []\n  this._lens = []\n  this._writing = false\n  this._ending = false\n  this._reopening = false\n  this._asyncDrainScheduled = false\n  this._flushPending = false\n  this._hwm = Math.max(minLength || 0, 16387)\n  this.file = null\n  this.destroyed = false\n  this.minLength = minLength || 0\n  this.maxLength = maxLength || 0\n  this.maxWrite = maxWrite || MAX_WRITE\n  this._periodicFlush = periodicFlush || 0\n  this._periodicFlushTimer = undefined\n  this.sync = sync || false\n  this.writable = true\n  this._fsync = fsync || false\n  this.append = append || false\n  this.mode = mode\n  this.retryEAGAIN = retryEAGAIN || (() => true)\n  this.mkdir = mkdir || false\n\n  let fsWriteSync\n  let fsWrite\n  if (contentMode === kContentModeBuffer) {\n    this._writingBuf = kEmptyBuffer\n    this.write = writeBuffer\n    this.flush = flushBuffer\n    this.flushSync = flushBufferSync\n    this._actualWrite = actualWriteBuffer\n    fsWriteSync = () => fs.writeSync(this.fd, this._writingBuf)\n    fsWrite = () => fs.write(this.fd, this._writingBuf, this.release)\n  } else if (contentMode === undefined || contentMode === kContentModeUtf8) {\n    this._writingBuf = ''\n    this.write = write\n    this.flush = flush\n    this.flushSync = flushSync\n    this._actualWrite = actualWrite\n    fsWriteSync = () => fs.writeSync(this.fd, this._writingBuf, 'utf8')\n    fsWrite = () => fs.write(this.fd, this._writingBuf, 'utf8', this.release)\n  } else {\n    throw new Error(`SonicBoom supports \"${kContentModeUtf8}\" and \"${kContentModeBuffer}\", but passed ${contentMode}`)\n  }\n\n  if (typeof fd === 'number') {\n    this.fd = fd\n    process.nextTick(() => this.emit('ready'))\n  } else if (typeof fd === 'string') {\n    openFile(fd, this)\n  } else {\n    throw new Error('SonicBoom supports only file descriptors and files')\n  }\n  if (this.minLength >= this.maxWrite) {\n    throw new Error(`minLength should be smaller than maxWrite (${this.maxWrite})`)\n  }\n\n  this.release = (err, n) => {\n    if (err) {\n      if ((err.code === 'EAGAIN' || err.code === 'EBUSY') && this.retryEAGAIN(err, this._writingBuf.length, this._len - this._writingBuf.length)) {\n        if (this.sync) {\n          // This error code should not happen in sync mode, because it is\n          // not using the underlining operating system asynchronous functions.\n          // However it happens, and so we handle it.\n          // Ref: https://github.com/pinojs/pino/issues/783\n          try {\n            sleep(BUSY_WRITE_TIMEOUT)\n            this.release(undefined, 0)\n          } catch (err) {\n            this.release(err)\n          }\n        } else {\n          // Let's give the destination some time to process the chunk.\n          setTimeout(fsWrite, BUSY_WRITE_TIMEOUT)\n        }\n      } else {\n        this._writing = false\n\n        this.emit('error', err)\n      }\n      return\n    }\n\n    this.emit('write', n)\n    const releasedBufObj = releaseWritingBuf(this._writingBuf, this._len, n)\n    this._len = releasedBufObj.len\n    this._writingBuf = releasedBufObj.writingBuf\n\n    if (this._writingBuf.length) {\n      if (!this.sync) {\n        fsWrite()\n        return\n      }\n\n      try {\n        do {\n          const n = fsWriteSync()\n          const releasedBufObj = releaseWritingBuf(this._writingBuf, this._len, n)\n          this._len = releasedBufObj.len\n          this._writingBuf = releasedBufObj.writingBuf\n        } while (this._writingBuf.length)\n      } catch (err) {\n        this.release(err)\n        return\n      }\n    }\n\n    if (this._fsync) {\n      fs.fsyncSync(this.fd)\n    }\n\n    const len = this._len\n    if (this._reopening) {\n      this._writing = false\n      this._reopening = false\n      this.reopen()\n    } else if (len > this.minLength) {\n      this._actualWrite()\n    } else if (this._ending) {\n      if (len > 0) {\n        this._actualWrite()\n      } else {\n        this._writing = false\n        actualClose(this)\n      }\n    } else {\n      this._writing = false\n      if (this.sync) {\n        if (!this._asyncDrainScheduled) {\n          this._asyncDrainScheduled = true\n          process.nextTick(emitDrain, this)\n        }\n      } else {\n        this.emit('drain')\n      }\n    }\n  }\n\n  this.on('newListener', function (name) {\n    if (name === 'drain') {\n      this._asyncDrainScheduled = false\n    }\n  })\n\n  if (this._periodicFlush !== 0) {\n    this._periodicFlushTimer = setInterval(() => this.flush(null), this._periodicFlush)\n    this._periodicFlushTimer.unref()\n  }\n}\n\n/**\n * Release the writingBuf after fs.write n bytes data\n * @param {string | Buffer} writingBuf - currently writing buffer, usually be instance._writingBuf.\n * @param {number} len - currently buffer length, usually be instance._len.\n * @param {number} n - number of bytes fs already written\n * @returns {{writingBuf: string | Buffer, len: number}} released writingBuf and length\n */\nfunction releaseWritingBuf (writingBuf, len, n) {\n  // if Buffer.byteLength is equal to n, that means writingBuf contains no multi-byte character\n  if (typeof writingBuf === 'string' && Buffer.byteLength(writingBuf) !== n) {\n    // Since the fs.write callback parameter `n` means how many bytes the passed of string\n    // We calculate the original string length for avoiding the multi-byte character issue\n    n = Buffer.from(writingBuf).subarray(0, n).toString().length\n  }\n  len = Math.max(len - n, 0)\n  writingBuf = writingBuf.slice(n)\n  return { writingBuf, len }\n}\n\nfunction emitDrain (sonic) {\n  const hasListeners = sonic.listenerCount('drain') > 0\n  if (!hasListeners) return\n  sonic._asyncDrainScheduled = false\n  sonic.emit('drain')\n}\n\ninherits(SonicBoom, EventEmitter)\n\nfunction mergeBuf (bufs, len) {\n  if (bufs.length === 0) {\n    return kEmptyBuffer\n  }\n\n  if (bufs.length === 1) {\n    return bufs[0]\n  }\n\n  return Buffer.concat(bufs, len)\n}\n\nfunction write (data) {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  const len = this._len + data.length\n  const bufs = this._bufs\n\n  if (this.maxLength && len > this.maxLength) {\n    this.emit('drop', data)\n    return this._len < this._hwm\n  }\n\n  if (\n    bufs.length === 0 ||\n    bufs[bufs.length - 1].length + data.length > this.maxWrite\n  ) {\n    bufs.push('' + data)\n  } else {\n    bufs[bufs.length - 1] += data\n  }\n\n  this._len = len\n\n  if (!this._writing && this._len >= this.minLength) {\n    this._actualWrite()\n  }\n\n  return this._len < this._hwm\n}\n\nfunction writeBuffer (data) {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  const len = this._len + data.length\n  const bufs = this._bufs\n  const lens = this._lens\n\n  if (this.maxLength && len > this.maxLength) {\n    this.emit('drop', data)\n    return this._len < this._hwm\n  }\n\n  if (\n    bufs.length === 0 ||\n    lens[lens.length - 1] + data.length > this.maxWrite\n  ) {\n    bufs.push([data])\n    lens.push(data.length)\n  } else {\n    bufs[bufs.length - 1].push(data)\n    lens[lens.length - 1] += data.length\n  }\n\n  this._len = len\n\n  if (!this._writing && this._len >= this.minLength) {\n    this._actualWrite()\n  }\n\n  return this._len < this._hwm\n}\n\nfunction callFlushCallbackOnDrain (cb) {\n  this._flushPending = true\n  const onDrain = () => {\n    // only if _fsync is false to avoid double fsync\n    if (!this._fsync) {\n      try {\n        fs.fsync(this.fd, (err) => {\n          this._flushPending = false\n          cb(err)\n        })\n      } catch (err) {\n        cb(err)\n      }\n    } else {\n      this._flushPending = false\n      cb()\n    }\n    this.off('error', onError)\n  }\n  const onError = (err) => {\n    this._flushPending = false\n    cb(err)\n    this.off('drain', onDrain)\n  }\n\n  this.once('drain', onDrain)\n  this.once('error', onError)\n}\n\nfunction flush (cb) {\n  if (cb != null && typeof cb !== 'function') {\n    throw new Error('flush cb must be a function')\n  }\n\n  if (this.destroyed) {\n    const error = new Error('SonicBoom destroyed')\n    if (cb) {\n      cb(error)\n      return\n    }\n\n    throw error\n  }\n\n  if (this.minLength <= 0) {\n    cb?.()\n    return\n  }\n\n  if (cb) {\n    callFlushCallbackOnDrain.call(this, cb)\n  }\n\n  if (this._writing) {\n    return\n  }\n\n  if (this._bufs.length === 0) {\n    this._bufs.push('')\n  }\n\n  this._actualWrite()\n}\n\nfunction flushBuffer (cb) {\n  if (cb != null && typeof cb !== 'function') {\n    throw new Error('flush cb must be a function')\n  }\n\n  if (this.destroyed) {\n    const error = new Error('SonicBoom destroyed')\n    if (cb) {\n      cb(error)\n      return\n    }\n\n    throw error\n  }\n\n  if (this.minLength <= 0) {\n    cb?.()\n    return\n  }\n\n  if (cb) {\n    callFlushCallbackOnDrain.call(this, cb)\n  }\n\n  if (this._writing) {\n    return\n  }\n\n  if (this._bufs.length === 0) {\n    this._bufs.push([])\n    this._lens.push(0)\n  }\n\n  this._actualWrite()\n}\n\nSonicBoom.prototype.reopen = function (file) {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this._opening) {\n    this.once('ready', () => {\n      this.reopen(file)\n    })\n    return\n  }\n\n  if (this._ending) {\n    return\n  }\n\n  if (!this.file) {\n    throw new Error('Unable to reopen a file descriptor, you must pass a file to SonicBoom')\n  }\n\n  if (file) {\n    this.file = file\n  }\n  this._reopening = true\n\n  if (this._writing) {\n    return\n  }\n\n  const fd = this.fd\n  this.once('ready', () => {\n    if (fd !== this.fd) {\n      fs.close(fd, (err) => {\n        if (err) {\n          return this.emit('error', err)\n        }\n      })\n    }\n  })\n\n  openFile(this.file, this)\n}\n\nSonicBoom.prototype.end = function () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this._opening) {\n    this.once('ready', () => {\n      this.end()\n    })\n    return\n  }\n\n  if (this._ending) {\n    return\n  }\n\n  this._ending = true\n\n  if (this._writing) {\n    return\n  }\n\n  if (this._len > 0 && this.fd >= 0) {\n    this._actualWrite()\n  } else {\n    actualClose(this)\n  }\n}\n\nfunction flushSync () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this.fd < 0) {\n    throw new Error('sonic boom is not ready yet')\n  }\n\n  if (!this._writing && this._writingBuf.length > 0) {\n    this._bufs.unshift(this._writingBuf)\n    this._writingBuf = ''\n  }\n\n  let buf = ''\n  while (this._bufs.length || buf) {\n    if (buf.length <= 0) {\n      buf = this._bufs[0]\n    }\n    try {\n      const n = fs.writeSync(this.fd, buf, 'utf8')\n      const releasedBufObj = releaseWritingBuf(buf, this._len, n)\n      buf = releasedBufObj.writingBuf\n      this._len = releasedBufObj.len\n      if (buf.length <= 0) {\n        this._bufs.shift()\n      }\n    } catch (err) {\n      const shouldRetry = err.code === 'EAGAIN' || err.code === 'EBUSY'\n      if (shouldRetry && !this.retryEAGAIN(err, buf.length, this._len - buf.length)) {\n        throw err\n      }\n\n      sleep(BUSY_WRITE_TIMEOUT)\n    }\n  }\n\n  try {\n    fs.fsyncSync(this.fd)\n  } catch {\n    // Skip the error. The fd might not support fsync.\n  }\n}\n\nfunction flushBufferSync () {\n  if (this.destroyed) {\n    throw new Error('SonicBoom destroyed')\n  }\n\n  if (this.fd < 0) {\n    throw new Error('sonic boom is not ready yet')\n  }\n\n  if (!this._writing && this._writingBuf.length > 0) {\n    this._bufs.unshift([this._writingBuf])\n    this._writingBuf = kEmptyBuffer\n  }\n\n  let buf = kEmptyBuffer\n  while (this._bufs.length || buf.length) {\n    if (buf.length <= 0) {\n      buf = mergeBuf(this._bufs[0], this._lens[0])\n    }\n    try {\n      const n = fs.writeSync(this.fd, buf)\n      buf = buf.subarray(n)\n      this._len = Math.max(this._len - n, 0)\n      if (buf.length <= 0) {\n        this._bufs.shift()\n        this._lens.shift()\n      }\n    } catch (err) {\n      const shouldRetry = err.code === 'EAGAIN' || err.code === 'EBUSY'\n      if (shouldRetry && !this.retryEAGAIN(err, buf.length, this._len - buf.length)) {\n        throw err\n      }\n\n      sleep(BUSY_WRITE_TIMEOUT)\n    }\n  }\n}\n\nSonicBoom.prototype.destroy = function () {\n  if (this.destroyed) {\n    return\n  }\n  actualClose(this)\n}\n\nfunction actualWrite () {\n  const release = this.release\n  this._writing = true\n  this._writingBuf = this._writingBuf || this._bufs.shift() || ''\n\n  if (this.sync) {\n    try {\n      const written = fs.writeSync(this.fd, this._writingBuf, 'utf8')\n      release(null, written)\n    } catch (err) {\n      release(err)\n    }\n  } else {\n    fs.write(this.fd, this._writingBuf, 'utf8', release)\n  }\n}\n\nfunction actualWriteBuffer () {\n  const release = this.release\n  this._writing = true\n  this._writingBuf = this._writingBuf.length ? this._writingBuf : mergeBuf(this._bufs.shift(), this._lens.shift())\n\n  if (this.sync) {\n    try {\n      const written = fs.writeSync(this.fd, this._writingBuf)\n      release(null, written)\n    } catch (err) {\n      release(err)\n    }\n  } else {\n    // fs.write will need to copy string to buffer anyway so\n    // we do it here to avoid the overhead of calculating the buffer size\n    // in releaseWritingBuf.\n    if (kCopyBuffer) {\n      this._writingBuf = Buffer.from(this._writingBuf)\n    }\n    fs.write(this.fd, this._writingBuf, release)\n  }\n}\n\nfunction actualClose (sonic) {\n  if (sonic.fd === -1) {\n    sonic.once('ready', actualClose.bind(null, sonic))\n    return\n  }\n\n  if (sonic._periodicFlushTimer !== undefined) {\n    clearInterval(sonic._periodicFlushTimer)\n  }\n\n  sonic.destroyed = true\n  sonic._bufs = []\n  sonic._lens = []\n\n  assert(typeof sonic.fd === 'number', `sonic.fd must be a number, got ${typeof sonic.fd}`)\n  try {\n    fs.fsync(sonic.fd, closeWrapped)\n  } catch {\n  }\n\n  function closeWrapped () {\n    // We skip errors in fsync\n\n    if (sonic.fd !== 1 && sonic.fd !== 2) {\n      fs.close(sonic.fd, done)\n    } else {\n      done()\n    }\n  }\n\n  function done (err) {\n    if (err) {\n      sonic.emit('error', err)\n      return\n    }\n\n    if (sonic._ending && !sonic._writing) {\n      sonic.emit('finish')\n    }\n    sonic.emit('close')\n  }\n}\n\n/**\n * These export configurations enable JS and TS developers\n * to consumer SonicBoom in whatever way best suits their needs.\n * Some examples of supported import syntax includes:\n * - `const SonicBoom = require('SonicBoom')`\n * - `const { SonicBoom } = require('SonicBoom')`\n * - `import * as SonicBoom from 'SonicBoom'`\n * - `import { SonicBoom } from 'SonicBoom'`\n * - `import SonicBoom from 'SonicBoom'`\n */\nSonicBoom.SonicBoom = SonicBoom\nSonicBoom.default = SonicBoom\nmodule.exports = SonicBoom\n", "'use strict'\n\nconst refs = {\n  exit: [],\n  beforeExit: []\n}\nconst functions = {\n  exit: onExit,\n  beforeExit: onBeforeExit\n}\n\nlet registry\n\nfunction ensureRegistry () {\n  if (registry === undefined) {\n    registry = new FinalizationRegistry(clear)\n  }\n}\n\nfunction install (event) {\n  if (refs[event].length > 0) {\n    return\n  }\n\n  process.on(event, functions[event])\n}\n\nfunction uninstall (event) {\n  if (refs[event].length > 0) {\n    return\n  }\n  process.removeListener(event, functions[event])\n  if (refs.exit.length === 0 && refs.beforeExit.length === 0) {\n    registry = undefined\n  }\n}\n\nfunction onExit () {\n  callRefs('exit')\n}\n\nfunction onBeforeExit () {\n  callRefs('beforeExit')\n}\n\nfunction callRefs (event) {\n  for (const ref of refs[event]) {\n    const obj = ref.deref()\n    const fn = ref.fn\n\n    // This should always happen, however GC is\n    // undeterministic so it might not happen.\n    /* istanbul ignore else */\n    if (obj !== undefined) {\n      fn(obj, event)\n    }\n  }\n  refs[event] = []\n}\n\nfunction clear (ref) {\n  for (const event of ['exit', 'beforeExit']) {\n    const index = refs[event].indexOf(ref)\n    refs[event].splice(index, index + 1)\n    uninstall(event)\n  }\n}\n\nfunction _register (event, obj, fn) {\n  if (obj === undefined) {\n    throw new Error('the object can\\'t be undefined')\n  }\n  install(event)\n  const ref = new WeakRef(obj)\n  ref.fn = fn\n\n  ensureRegistry()\n  registry.register(obj, ref)\n  refs[event].push(ref)\n}\n\nfunction register (obj, fn) {\n  _register('exit', obj, fn)\n}\n\nfunction registerBeforeExit (obj, fn) {\n  _register('beforeExit', obj, fn)\n}\n\nfunction unregister (obj) {\n  if (registry === undefined) {\n    return\n  }\n  registry.unregister(obj)\n  for (const event of ['exit', 'beforeExit']) {\n    refs[event] = refs[event].filter((ref) => {\n      const _obj = ref.deref()\n      return _obj && _obj !== obj\n    })\n    uninstall(event)\n  }\n}\n\nmodule.exports = {\n  register,\n  registerBeforeExit,\n  unregister\n}\n", "{\n  \"name\": \"thread-stream\",\n  \"version\": \"3.1.0\",\n  \"description\": \"A streaming way to send data to a Node.js Worker Thread\",\n  \"main\": \"index.js\",\n  \"types\": \"index.d.ts\",\n  \"dependencies\": {\n    \"real-require\": \"^0.2.0\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^20.1.0\",\n    \"@types/tap\": \"^15.0.0\",\n    \"@yao-pkg/pkg\": \"^5.11.5\",\n    \"desm\": \"^1.3.0\",\n    \"fastbench\": \"^1.0.1\",\n    \"husky\": \"^9.0.6\",\n    \"pino-elasticsearch\": \"^8.0.0\",\n    \"sonic-boom\": \"^4.0.1\",\n    \"standard\": \"^17.0.0\",\n    \"tap\": \"^16.2.0\",\n    \"ts-node\": \"^10.8.0\",\n    \"typescript\": \"^5.3.2\",\n    \"why-is-node-running\": \"^2.2.2\"\n  },\n  \"scripts\": {\n    \"build\": \"tsc --noEmit\",\n    \"test\": \"standard && npm run build && npm run transpile && tap \\\"test/**/*.test.*js\\\" && tap --ts test/*.test.*ts\",\n    \"test:ci\": \"standard && npm run transpile && npm run test:ci:js && npm run test:ci:ts\",\n    \"test:ci:js\": \"tap --no-check-coverage --timeout=120 --coverage-report=lcovonly \\\"test/**/*.test.*js\\\"\",\n    \"test:ci:ts\": \"tap --ts --no-check-coverage --coverage-report=lcovonly \\\"test/**/*.test.*ts\\\"\",\n    \"test:yarn\": \"npm run transpile && tap \\\"test/**/*.test.js\\\" --no-check-coverage\",\n    \"transpile\": \"sh ./test/ts/transpile.sh\",\n    \"prepare\": \"husky install\"\n  },\n  \"standard\": {\n    \"ignore\": [\n      \"test/ts/**/*\",\n      \"test/syntax-error.mjs\"\n    ]\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/mcollina/thread-stream.git\"\n  },\n  \"keywords\": [\n    \"worker\",\n    \"thread\",\n    \"threads\",\n    \"stream\"\n  ],\n  \"author\": \"Matteo Collina <hello@matteocollina.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/mcollina/thread-stream/issues\"\n  },\n  \"homepage\": \"https://github.com/mcollina/thread-stream#readme\"\n}\n", "'use strict'\n\nconst MAX_TIMEOUT = 1000\n\nfunction wait (state, index, expected, timeout, done) {\n  const max = Date.now() + timeout\n  let current = Atomics.load(state, index)\n  if (current === expected) {\n    done(null, 'ok')\n    return\n  }\n  let prior = current\n  const check = (backoff) => {\n    if (Date.now() > max) {\n      done(null, 'timed-out')\n    } else {\n      setTimeout(() => {\n        prior = current\n        current = Atomics.load(state, index)\n        if (current === prior) {\n          check(backoff >= MAX_TIMEOUT ? MAX_TIMEOUT : backoff * 2)\n        } else {\n          if (current === expected) done(null, 'ok')\n          else done(null, 'not-equal')\n        }\n      }, backoff)\n    }\n  }\n  check(1)\n}\n\n// let waitDiffCount = 0\nfunction waitDiff (state, index, expected, timeout, done) {\n  // const id = waitDiffCount++\n  // process._rawDebug(`>>> waitDiff ${id}`)\n  const max = Date.now() + timeout\n  let current = Atomics.load(state, index)\n  if (current !== expected) {\n    done(null, 'ok')\n    return\n  }\n  const check = (backoff) => {\n    // process._rawDebug(`${id} ${index} current ${current} expected ${expected}`)\n    // process._rawDebug('' + backoff)\n    if (Date.now() > max) {\n      done(null, 'timed-out')\n    } else {\n      setTimeout(() => {\n        current = Atomics.load(state, index)\n        if (current !== expected) {\n          done(null, 'ok')\n        } else {\n          check(backoff >= MAX_TIMEOUT ? MAX_TIMEOUT : backoff * 2)\n        }\n      }, backoff)\n    }\n  }\n  check(1)\n}\n\nmodule.exports = { wait, waitDiff }\n", "'use strict'\n\nconst WRITE_INDEX = 4\nconst READ_INDEX = 8\n\nmodule.exports = {\n  WRITE_INDEX,\n  READ_INDEX\n}\n", "'use strict'\n\nconst { version } = require('./package.json')\nconst { EventEmitter } = require('events')\nconst { Worker } = require('worker_threads')\nconst { join } = require('path')\nconst { pathToFileURL } = require('url')\nconst { wait } = require('./lib/wait')\nconst {\n  WRITE_INDEX,\n  READ_INDEX\n} = require('./lib/indexes')\nconst buffer = require('buffer')\nconst assert = require('assert')\n\nconst kImpl = Symbol('kImpl')\n\n// V8 limit for string size\nconst MAX_STRING = buffer.constants.MAX_STRING_LENGTH\n\nclass FakeWeakRef {\n  constructor (value) {\n    this._value = value\n  }\n\n  deref () {\n    return this._value\n  }\n}\n\nclass FakeFinalizationRegistry {\n  register () {}\n\n  unregister () {}\n}\n\n// Currently using FinalizationRegistry with code coverage breaks the world\n// Ref: https://github.com/nodejs/node/issues/49344\nconst FinalizationRegistry = process.env.NODE_V8_COVERAGE ? FakeFinalizationRegistry : global.FinalizationRegistry || FakeFinalizationRegistry\nconst WeakRef = process.env.NODE_V8_COVERAGE ? FakeWeakRef : global.WeakRef || FakeWeakRef\n\nconst registry = new FinalizationRegistry((worker) => {\n  if (worker.exited) {\n    return\n  }\n  worker.terminate()\n})\n\nfunction createWorker (stream, opts) {\n  const { filename, workerData } = opts\n\n  const bundlerOverrides = '__bundlerPathsOverrides' in globalThis ? globalThis.__bundlerPathsOverrides : {}\n  const toExecute = bundlerOverrides['thread-stream-worker'] || join(__dirname, 'lib', 'worker.js')\n\n  const worker = new Worker(toExecute, {\n    ...opts.workerOpts,\n    trackUnmanagedFds: false,\n    workerData: {\n      filename: filename.indexOf('file://') === 0\n        ? filename\n        : pathToFileURL(filename).href,\n      dataBuf: stream[kImpl].dataBuf,\n      stateBuf: stream[kImpl].stateBuf,\n      workerData: {\n        $context: {\n          threadStreamVersion: version\n        },\n        ...workerData\n      }\n    }\n  })\n\n  // We keep a strong reference for now,\n  // we need to start writing first\n  worker.stream = new FakeWeakRef(stream)\n\n  worker.on('message', onWorkerMessage)\n  worker.on('exit', onWorkerExit)\n  registry.register(stream, worker)\n\n  return worker\n}\n\nfunction drain (stream) {\n  assert(!stream[kImpl].sync)\n  if (stream[kImpl].needDrain) {\n    stream[kImpl].needDrain = false\n    stream.emit('drain')\n  }\n}\n\nfunction nextFlush (stream) {\n  const writeIndex = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n  let leftover = stream[kImpl].data.length - writeIndex\n\n  if (leftover > 0) {\n    if (stream[kImpl].buf.length === 0) {\n      stream[kImpl].flushing = false\n\n      if (stream[kImpl].ending) {\n        end(stream)\n      } else if (stream[kImpl].needDrain) {\n        process.nextTick(drain, stream)\n      }\n\n      return\n    }\n\n    let toWrite = stream[kImpl].buf.slice(0, leftover)\n    let toWriteBytes = Buffer.byteLength(toWrite)\n    if (toWriteBytes <= leftover) {\n      stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n      // process._rawDebug('writing ' + toWrite.length)\n      write(stream, toWrite, nextFlush.bind(null, stream))\n    } else {\n      // multi-byte utf-8\n      stream.flush(() => {\n        // err is already handled in flush()\n        if (stream.destroyed) {\n          return\n        }\n\n        Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n        Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n\n        // Find a toWrite length that fits the buffer\n        // it must exists as the buffer is at least 4 bytes length\n        // and the max utf-8 length for a char is 4 bytes.\n        while (toWriteBytes > stream[kImpl].data.length) {\n          leftover = leftover / 2\n          toWrite = stream[kImpl].buf.slice(0, leftover)\n          toWriteBytes = Buffer.byteLength(toWrite)\n        }\n        stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n        write(stream, toWrite, nextFlush.bind(null, stream))\n      })\n    }\n  } else if (leftover === 0) {\n    if (writeIndex === 0 && stream[kImpl].buf.length === 0) {\n      // we had a flushSync in the meanwhile\n      return\n    }\n    stream.flush(() => {\n      Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n      Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n      nextFlush(stream)\n    })\n  } else {\n    // This should never happen\n    destroy(stream, new Error('overwritten'))\n  }\n}\n\nfunction onWorkerMessage (msg) {\n  const stream = this.stream.deref()\n  if (stream === undefined) {\n    this.exited = true\n    // Terminate the worker.\n    this.terminate()\n    return\n  }\n\n  switch (msg.code) {\n    case 'READY':\n      // Replace the FakeWeakRef with a\n      // proper one.\n      this.stream = new WeakRef(stream)\n\n      stream.flush(() => {\n        stream[kImpl].ready = true\n        stream.emit('ready')\n      })\n      break\n    case 'ERROR':\n      destroy(stream, msg.err)\n      break\n    case 'EVENT':\n      if (Array.isArray(msg.args)) {\n        stream.emit(msg.name, ...msg.args)\n      } else {\n        stream.emit(msg.name, msg.args)\n      }\n      break\n    case 'WARNING':\n      process.emitWarning(msg.err)\n      break\n    default:\n      destroy(stream, new Error('this should not happen: ' + msg.code))\n  }\n}\n\nfunction onWorkerExit (code) {\n  const stream = this.stream.deref()\n  if (stream === undefined) {\n    // Nothing to do, the worker already exit\n    return\n  }\n  registry.unregister(stream)\n  stream.worker.exited = true\n  stream.worker.off('exit', onWorkerExit)\n  destroy(stream, code !== 0 ? new Error('the worker thread exited') : null)\n}\n\nclass ThreadStream extends EventEmitter {\n  constructor (opts = {}) {\n    super()\n\n    if (opts.bufferSize < 4) {\n      throw new Error('bufferSize must at least fit a 4-byte utf-8 char')\n    }\n\n    this[kImpl] = {}\n    this[kImpl].stateBuf = new SharedArrayBuffer(128)\n    this[kImpl].state = new Int32Array(this[kImpl].stateBuf)\n    this[kImpl].dataBuf = new SharedArrayBuffer(opts.bufferSize || 4 * 1024 * 1024)\n    this[kImpl].data = Buffer.from(this[kImpl].dataBuf)\n    this[kImpl].sync = opts.sync || false\n    this[kImpl].ending = false\n    this[kImpl].ended = false\n    this[kImpl].needDrain = false\n    this[kImpl].destroyed = false\n    this[kImpl].flushing = false\n    this[kImpl].ready = false\n    this[kImpl].finished = false\n    this[kImpl].errored = null\n    this[kImpl].closed = false\n    this[kImpl].buf = ''\n\n    // TODO (fix): Make private?\n    this.worker = createWorker(this, opts) // TODO (fix): make private\n    this.on('message', (message, transferList) => {\n      this.worker.postMessage(message, transferList)\n    })\n  }\n\n  write (data) {\n    if (this[kImpl].destroyed) {\n      error(this, new Error('the worker has exited'))\n      return false\n    }\n\n    if (this[kImpl].ending) {\n      error(this, new Error('the worker is ending'))\n      return false\n    }\n\n    if (this[kImpl].flushing && this[kImpl].buf.length + data.length >= MAX_STRING) {\n      try {\n        writeSync(this)\n        this[kImpl].flushing = true\n      } catch (err) {\n        destroy(this, err)\n        return false\n      }\n    }\n\n    this[kImpl].buf += data\n\n    if (this[kImpl].sync) {\n      try {\n        writeSync(this)\n        return true\n      } catch (err) {\n        destroy(this, err)\n        return false\n      }\n    }\n\n    if (!this[kImpl].flushing) {\n      this[kImpl].flushing = true\n      setImmediate(nextFlush, this)\n    }\n\n    this[kImpl].needDrain = this[kImpl].data.length - this[kImpl].buf.length - Atomics.load(this[kImpl].state, WRITE_INDEX) <= 0\n    return !this[kImpl].needDrain\n  }\n\n  end () {\n    if (this[kImpl].destroyed) {\n      return\n    }\n\n    this[kImpl].ending = true\n    end(this)\n  }\n\n  flush (cb) {\n    if (this[kImpl].destroyed) {\n      if (typeof cb === 'function') {\n        process.nextTick(cb, new Error('the worker has exited'))\n      }\n      return\n    }\n\n    // TODO write all .buf\n    const writeIndex = Atomics.load(this[kImpl].state, WRITE_INDEX)\n    // process._rawDebug(`(flush) readIndex (${Atomics.load(this.state, READ_INDEX)}) writeIndex (${Atomics.load(this.state, WRITE_INDEX)})`)\n    wait(this[kImpl].state, READ_INDEX, writeIndex, Infinity, (err, res) => {\n      if (err) {\n        destroy(this, err)\n        process.nextTick(cb, err)\n        return\n      }\n      if (res === 'not-equal') {\n        // TODO handle deadlock\n        this.flush(cb)\n        return\n      }\n      process.nextTick(cb)\n    })\n  }\n\n  flushSync () {\n    if (this[kImpl].destroyed) {\n      return\n    }\n\n    writeSync(this)\n    flushSync(this)\n  }\n\n  unref () {\n    this.worker.unref()\n  }\n\n  ref () {\n    this.worker.ref()\n  }\n\n  get ready () {\n    return this[kImpl].ready\n  }\n\n  get destroyed () {\n    return this[kImpl].destroyed\n  }\n\n  get closed () {\n    return this[kImpl].closed\n  }\n\n  get writable () {\n    return !this[kImpl].destroyed && !this[kImpl].ending\n  }\n\n  get writableEnded () {\n    return this[kImpl].ending\n  }\n\n  get writableFinished () {\n    return this[kImpl].finished\n  }\n\n  get writableNeedDrain () {\n    return this[kImpl].needDrain\n  }\n\n  get writableObjectMode () {\n    return false\n  }\n\n  get writableErrored () {\n    return this[kImpl].errored\n  }\n}\n\nfunction error (stream, err) {\n  setImmediate(() => {\n    stream.emit('error', err)\n  })\n}\n\nfunction destroy (stream, err) {\n  if (stream[kImpl].destroyed) {\n    return\n  }\n  stream[kImpl].destroyed = true\n\n  if (err) {\n    stream[kImpl].errored = err\n    error(stream, err)\n  }\n\n  if (!stream.worker.exited) {\n    stream.worker.terminate()\n      .catch(() => {})\n      .then(() => {\n        stream[kImpl].closed = true\n        stream.emit('close')\n      })\n  } else {\n    setImmediate(() => {\n      stream[kImpl].closed = true\n      stream.emit('close')\n    })\n  }\n}\n\nfunction write (stream, data, cb) {\n  // data is smaller than the shared buffer length\n  const current = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n  const length = Buffer.byteLength(data)\n  stream[kImpl].data.write(data, current)\n  Atomics.store(stream[kImpl].state, WRITE_INDEX, current + length)\n  Atomics.notify(stream[kImpl].state, WRITE_INDEX)\n  cb()\n  return true\n}\n\nfunction end (stream) {\n  if (stream[kImpl].ended || !stream[kImpl].ending || stream[kImpl].flushing) {\n    return\n  }\n  stream[kImpl].ended = true\n\n  try {\n    stream.flushSync()\n\n    let readIndex = Atomics.load(stream[kImpl].state, READ_INDEX)\n\n    // process._rawDebug('writing index')\n    Atomics.store(stream[kImpl].state, WRITE_INDEX, -1)\n    // process._rawDebug(`(end) readIndex (${Atomics.load(stream.state, READ_INDEX)}) writeIndex (${Atomics.load(stream.state, WRITE_INDEX)})`)\n    Atomics.notify(stream[kImpl].state, WRITE_INDEX)\n\n    // Wait for the process to complete\n    let spins = 0\n    while (readIndex !== -1) {\n      // process._rawDebug(`read = ${read}`)\n      Atomics.wait(stream[kImpl].state, READ_INDEX, readIndex, 1000)\n      readIndex = Atomics.load(stream[kImpl].state, READ_INDEX)\n\n      if (readIndex === -2) {\n        destroy(stream, new Error('end() failed'))\n        return\n      }\n\n      if (++spins === 10) {\n        destroy(stream, new Error('end() took too long (10s)'))\n        return\n      }\n    }\n\n    process.nextTick(() => {\n      stream[kImpl].finished = true\n      stream.emit('finish')\n    })\n  } catch (err) {\n    destroy(stream, err)\n  }\n  // process._rawDebug('end finished...')\n}\n\nfunction writeSync (stream) {\n  const cb = () => {\n    if (stream[kImpl].ending) {\n      end(stream)\n    } else if (stream[kImpl].needDrain) {\n      process.nextTick(drain, stream)\n    }\n  }\n  stream[kImpl].flushing = false\n\n  while (stream[kImpl].buf.length !== 0) {\n    const writeIndex = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n    let leftover = stream[kImpl].data.length - writeIndex\n    if (leftover === 0) {\n      flushSync(stream)\n      Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n      Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n      continue\n    } else if (leftover < 0) {\n      // stream should never happen\n      throw new Error('overwritten')\n    }\n\n    let toWrite = stream[kImpl].buf.slice(0, leftover)\n    let toWriteBytes = Buffer.byteLength(toWrite)\n    if (toWriteBytes <= leftover) {\n      stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n      // process._rawDebug('writing ' + toWrite.length)\n      write(stream, toWrite, cb)\n    } else {\n      // multi-byte utf-8\n      flushSync(stream)\n      Atomics.store(stream[kImpl].state, READ_INDEX, 0)\n      Atomics.store(stream[kImpl].state, WRITE_INDEX, 0)\n\n      // Find a toWrite length that fits the buffer\n      // it must exists as the buffer is at least 4 bytes length\n      // and the max utf-8 length for a char is 4 bytes.\n      while (toWriteBytes > stream[kImpl].buf.length) {\n        leftover = leftover / 2\n        toWrite = stream[kImpl].buf.slice(0, leftover)\n        toWriteBytes = Buffer.byteLength(toWrite)\n      }\n      stream[kImpl].buf = stream[kImpl].buf.slice(leftover)\n      write(stream, toWrite, cb)\n    }\n  }\n}\n\nfunction flushSync (stream) {\n  if (stream[kImpl].flushing) {\n    throw new Error('unable to flush while flushing')\n  }\n\n  // process._rawDebug('flushSync started')\n\n  const writeIndex = Atomics.load(stream[kImpl].state, WRITE_INDEX)\n\n  let spins = 0\n\n  // TODO handle deadlock\n  while (true) {\n    const readIndex = Atomics.load(stream[kImpl].state, READ_INDEX)\n\n    if (readIndex === -2) {\n      throw Error('_flushSync failed')\n    }\n\n    // process._rawDebug(`(flushSync) readIndex (${readIndex}) writeIndex (${writeIndex})`)\n    if (readIndex !== writeIndex) {\n      // TODO stream timeouts for some reason.\n      Atomics.wait(stream[kImpl].state, READ_INDEX, readIndex, 1000)\n    } else {\n      break\n    }\n\n    if (++spins === 10) {\n      throw new Error('_flushSync took too long (10s)')\n    }\n  }\n  // process._rawDebug('flushSync finished')\n}\n\nmodule.exports = ThreadStream\n", "'use strict'\n\nconst { createRequire } = require('module')\nconst getCallers = require('./caller')\nconst { join, isAbsolute, sep } = require('node:path')\nconst sleep = require('atomic-sleep')\nconst onExit = require('on-exit-leak-free')\nconst ThreadStream = require('thread-stream')\n\nfunction setupOnExit (stream) {\n  // This is leak free, it does not leave event handlers\n  onExit.register(stream, autoEnd)\n  onExit.registerBeforeExit(stream, flush)\n\n  stream.on('close', function () {\n    onExit.unregister(stream)\n  })\n}\n\nfunction buildStream (filename, workerData, workerOpts, sync) {\n  const stream = new ThreadStream({\n    filename,\n    workerData,\n    workerOpts,\n    sync\n  })\n\n  stream.on('ready', onReady)\n  stream.on('close', function () {\n    process.removeListener('exit', onExit)\n  })\n\n  process.on('exit', onExit)\n\n  function onReady () {\n    process.removeListener('exit', onExit)\n    stream.unref()\n\n    if (workerOpts.autoEnd !== false) {\n      setupOnExit(stream)\n    }\n  }\n\n  function onExit () {\n    /* istanbul ignore next */\n    if (stream.closed) {\n      return\n    }\n    stream.flushSync()\n    // Apparently there is a very sporadic race condition\n    // that in certain OS would prevent the messages to be flushed\n    // because the thread might not have been created still.\n    // Unfortunately we need to sleep(100) in this case.\n    sleep(100)\n    stream.end()\n  }\n\n  return stream\n}\n\nfunction autoEnd (stream) {\n  stream.ref()\n  stream.flushSync()\n  stream.end()\n  stream.once('close', function () {\n    stream.unref()\n  })\n}\n\nfunction flush (stream) {\n  stream.flushSync()\n}\n\nfunction transport (fullOptions) {\n  const { pipeline, targets, levels, dedupe, worker = {}, caller = getCallers(), sync = false } = fullOptions\n\n  const options = {\n    ...fullOptions.options\n  }\n\n  // Backwards compatibility\n  const callers = typeof caller === 'string' ? [caller] : caller\n\n  // This will be eventually modified by bundlers\n  const bundlerOverrides = '__bundlerPathsOverrides' in globalThis ? globalThis.__bundlerPathsOverrides : {}\n\n  let target = fullOptions.target\n\n  if (target && targets) {\n    throw new Error('only one of target or targets can be specified')\n  }\n\n  if (targets) {\n    target = bundlerOverrides['pino-worker'] || join(__dirname, 'worker.js')\n    options.targets = targets.filter(dest => dest.target).map((dest) => {\n      return {\n        ...dest,\n        target: fixTarget(dest.target)\n      }\n    })\n    options.pipelines = targets.filter(dest => dest.pipeline).map((dest) => {\n      return dest.pipeline.map((t) => {\n        return {\n          ...t,\n          level: dest.level, // duplicate the pipeline `level` property defined in the upper level\n          target: fixTarget(t.target)\n        }\n      })\n    })\n  } else if (pipeline) {\n    target = bundlerOverrides['pino-worker'] || join(__dirname, 'worker.js')\n    options.pipelines = [pipeline.map((dest) => {\n      return {\n        ...dest,\n        target: fixTarget(dest.target)\n      }\n    })]\n  }\n\n  if (levels) {\n    options.levels = levels\n  }\n\n  if (dedupe) {\n    options.dedupe = dedupe\n  }\n\n  options.pinoWillSendConfig = true\n\n  return buildStream(fixTarget(target), options, worker, sync)\n\n  function fixTarget (origin) {\n    origin = bundlerOverrides[origin] || origin\n\n    if (isAbsolute(origin) || origin.indexOf('file://') === 0) {\n      return origin\n    }\n\n    if (origin === 'pino/file') {\n      return join(__dirname, '..', 'file.js')\n    }\n\n    let fixTarget\n\n    for (const filePath of callers) {\n      try {\n        const context = filePath === 'node:repl'\n          ? process.cwd() + sep\n          : filePath\n\n        fixTarget = createRequire(context).resolve(origin)\n        break\n      } catch (err) {\n        // Silent catch\n        continue\n      }\n    }\n\n    if (!fixTarget) {\n      throw new Error(`unable to determine transport target for \"${origin}\"`)\n    }\n\n    return fixTarget\n  }\n}\n\nmodule.exports = transport\n", "'use strict'\n\n/* eslint no-prototype-builtins: 0 */\n\nconst format = require('quick-format-unescaped')\nconst { mapHttpRequest, mapHttpResponse } = require('pino-std-serializers')\nconst SonicBoom = require('sonic-boom')\nconst onExit = require('on-exit-leak-free')\nconst {\n  lsCacheSym,\n  chindingsSym,\n  writeSym,\n  serializersSym,\n  formatOptsSym,\n  endSym,\n  stringifiersSym,\n  stringifySym,\n  stringifySafeSym,\n  wildcardFirstSym,\n  nestedKeySym,\n  formattersSym,\n  messageKeySym,\n  errorKeySym,\n  nestedKeyStrSym,\n  msgPrefixSym\n} = require('./symbols')\nconst { isMainThread } = require('worker_threads')\nconst transport = require('./transport')\n\nfunction noop () {\n}\n\nfunction genLog (level, hook) {\n  if (!hook) return LOG\n\n  return function hookWrappedLog (...args) {\n    hook.call(this, args, LOG, level)\n  }\n\n  function LOG (o, ...n) {\n    if (typeof o === 'object') {\n      let msg = o\n      if (o !== null) {\n        if (o.method && o.headers && o.socket) {\n          o = mapHttpRequest(o)\n        } else if (typeof o.setHeader === 'function') {\n          o = mapHttpResponse(o)\n        }\n      }\n      let formatParams\n      if (msg === null && n.length === 0) {\n        formatParams = [null]\n      } else {\n        msg = n.shift()\n        formatParams = n\n      }\n      // We do not use a coercive check for `msg` as it is\n      // measurably slower than the explicit checks.\n      if (typeof this[msgPrefixSym] === 'string' && msg !== undefined && msg !== null) {\n        msg = this[msgPrefixSym] + msg\n      }\n      this[writeSym](o, format(msg, formatParams, this[formatOptsSym]), level)\n    } else {\n      let msg = o === undefined ? n.shift() : o\n\n      // We do not use a coercive check for `msg` as it is\n      // measurably slower than the explicit checks.\n      if (typeof this[msgPrefixSym] === 'string' && msg !== undefined && msg !== null) {\n        msg = this[msgPrefixSym] + msg\n      }\n      this[writeSym](null, format(msg, n, this[formatOptsSym]), level)\n    }\n  }\n}\n\n// magically escape strings for json\n// relying on their charCodeAt\n// everything below 32 needs JSON.stringify()\n// 34 and 92 happens all the time, so we\n// have a fast case for them\nfunction asString (str) {\n  let result = ''\n  let last = 0\n  let found = false\n  let point = 255\n  const l = str.length\n  if (l > 100) {\n    return JSON.stringify(str)\n  }\n  for (var i = 0; i < l && point >= 32; i++) {\n    point = str.charCodeAt(i)\n    if (point === 34 || point === 92) {\n      result += str.slice(last, i) + '\\\\'\n      last = i\n      found = true\n    }\n  }\n  if (!found) {\n    result = str\n  } else {\n    result += str.slice(last)\n  }\n  return point < 32 ? JSON.stringify(str) : '\"' + result + '\"'\n}\n\nfunction asJson (obj, msg, num, time) {\n  const stringify = this[stringifySym]\n  const stringifySafe = this[stringifySafeSym]\n  const stringifiers = this[stringifiersSym]\n  const end = this[endSym]\n  const chindings = this[chindingsSym]\n  const serializers = this[serializersSym]\n  const formatters = this[formattersSym]\n  const messageKey = this[messageKeySym]\n  const errorKey = this[errorKeySym]\n  let data = this[lsCacheSym][num] + time\n\n  // we need the child bindings added to the output first so instance logged\n  // objects can take precedence when JSON.parse-ing the resulting log line\n  data = data + chindings\n\n  let value\n  if (formatters.log) {\n    obj = formatters.log(obj)\n  }\n  const wildcardStringifier = stringifiers[wildcardFirstSym]\n  let propStr = ''\n  for (const key in obj) {\n    value = obj[key]\n    if (Object.prototype.hasOwnProperty.call(obj, key) && value !== undefined) {\n      if (serializers[key]) {\n        value = serializers[key](value)\n      } else if (key === errorKey && serializers.err) {\n        value = serializers.err(value)\n      }\n\n      const stringifier = stringifiers[key] || wildcardStringifier\n\n      switch (typeof value) {\n        case 'undefined':\n        case 'function':\n          continue\n        case 'number':\n          /* eslint no-fallthrough: \"off\" */\n          if (Number.isFinite(value) === false) {\n            value = null\n          }\n        // this case explicitly falls through to the next one\n        case 'boolean':\n          if (stringifier) value = stringifier(value)\n          break\n        case 'string':\n          value = (stringifier || asString)(value)\n          break\n        default:\n          value = (stringifier || stringify)(value, stringifySafe)\n      }\n      if (value === undefined) continue\n      const strKey = asString(key)\n      propStr += ',' + strKey + ':' + value\n    }\n  }\n\n  let msgStr = ''\n  if (msg !== undefined) {\n    value = serializers[messageKey] ? serializers[messageKey](msg) : msg\n    const stringifier = stringifiers[messageKey] || wildcardStringifier\n\n    switch (typeof value) {\n      case 'function':\n        break\n      case 'number':\n        /* eslint no-fallthrough: \"off\" */\n        if (Number.isFinite(value) === false) {\n          value = null\n        }\n      // this case explicitly falls through to the next one\n      case 'boolean':\n        if (stringifier) value = stringifier(value)\n        msgStr = ',\"' + messageKey + '\":' + value\n        break\n      case 'string':\n        value = (stringifier || asString)(value)\n        msgStr = ',\"' + messageKey + '\":' + value\n        break\n      default:\n        value = (stringifier || stringify)(value, stringifySafe)\n        msgStr = ',\"' + messageKey + '\":' + value\n    }\n  }\n\n  if (this[nestedKeySym] && propStr) {\n    // place all the obj properties under the specified key\n    // the nested key is already formatted from the constructor\n    return data + this[nestedKeyStrSym] + propStr.slice(1) + '}' + msgStr + end\n  } else {\n    return data + propStr + msgStr + end\n  }\n}\n\nfunction asChindings (instance, bindings) {\n  let value\n  let data = instance[chindingsSym]\n  const stringify = instance[stringifySym]\n  const stringifySafe = instance[stringifySafeSym]\n  const stringifiers = instance[stringifiersSym]\n  const wildcardStringifier = stringifiers[wildcardFirstSym]\n  const serializers = instance[serializersSym]\n  const formatter = instance[formattersSym].bindings\n  bindings = formatter(bindings)\n\n  for (const key in bindings) {\n    value = bindings[key]\n    const valid = key !== 'level' &&\n      key !== 'serializers' &&\n      key !== 'formatters' &&\n      key !== 'customLevels' &&\n      bindings.hasOwnProperty(key) &&\n      value !== undefined\n    if (valid === true) {\n      value = serializers[key] ? serializers[key](value) : value\n      value = (stringifiers[key] || wildcardStringifier || stringify)(value, stringifySafe)\n      if (value === undefined) continue\n      data += ',\"' + key + '\":' + value\n    }\n  }\n  return data\n}\n\nfunction hasBeenTampered (stream) {\n  return stream.write !== stream.constructor.prototype.write\n}\n\nconst hasNodeCodeCoverage = process.env.NODE_V8_COVERAGE || process.env.V8_COVERAGE\n\nfunction buildSafeSonicBoom (opts) {\n  const stream = new SonicBoom(opts)\n  stream.on('error', filterBrokenPipe)\n  // If we are sync: false, we must flush on exit\n  // We must disable this if there is node code coverage due to\n  // https://github.com/nodejs/node/issues/49344#issuecomment-1741776308.\n  if (!hasNodeCodeCoverage && !opts.sync && isMainThread) {\n    onExit.register(stream, autoEnd)\n\n    stream.on('close', function () {\n      onExit.unregister(stream)\n    })\n  }\n  return stream\n\n  function filterBrokenPipe (err) {\n    // Impossible to replicate across all operating systems\n    /* istanbul ignore next */\n    if (err.code === 'EPIPE') {\n      // If we get EPIPE, we should stop logging here\n      // however we have no control to the consumer of\n      // SonicBoom, so we just overwrite the write method\n      stream.write = noop\n      stream.end = noop\n      stream.flushSync = noop\n      stream.destroy = noop\n      return\n    }\n    stream.removeListener('error', filterBrokenPipe)\n    stream.emit('error', err)\n  }\n}\n\nfunction autoEnd (stream, eventName) {\n  // This check is needed only on some platforms\n  /* istanbul ignore next */\n  if (stream.destroyed) {\n    return\n  }\n\n  if (eventName === 'beforeExit') {\n    // We still have an event loop, let's use it\n    stream.flush()\n    stream.on('drain', function () {\n      stream.end()\n    })\n  } else {\n    // For some reason istanbul is not detecting this, but it's there\n    /* istanbul ignore next */\n    // We do not have an event loop, so flush synchronously\n    stream.flushSync()\n  }\n}\n\nfunction createArgsNormalizer (defaultOptions) {\n  return function normalizeArgs (instance, caller, opts = {}, stream) {\n    // support stream as a string\n    if (typeof opts === 'string') {\n      stream = buildSafeSonicBoom({ dest: opts })\n      opts = {}\n    } else if (typeof stream === 'string') {\n      if (opts && opts.transport) {\n        throw Error('only one of option.transport or stream can be specified')\n      }\n      stream = buildSafeSonicBoom({ dest: stream })\n    } else if (opts instanceof SonicBoom || opts.writable || opts._writableState) {\n      stream = opts\n      opts = {}\n    } else if (opts.transport) {\n      if (opts.transport instanceof SonicBoom || opts.transport.writable || opts.transport._writableState) {\n        throw Error('option.transport do not allow stream, please pass to option directly. e.g. pino(transport)')\n      }\n      if (opts.transport.targets && opts.transport.targets.length && opts.formatters && typeof opts.formatters.level === 'function') {\n        throw Error('option.transport.targets do not allow custom level formatters')\n      }\n\n      let customLevels\n      if (opts.customLevels) {\n        customLevels = opts.useOnlyCustomLevels ? opts.customLevels : Object.assign({}, opts.levels, opts.customLevels)\n      }\n      stream = transport({ caller, ...opts.transport, levels: customLevels })\n    }\n    opts = Object.assign({}, defaultOptions, opts)\n    opts.serializers = Object.assign({}, defaultOptions.serializers, opts.serializers)\n    opts.formatters = Object.assign({}, defaultOptions.formatters, opts.formatters)\n\n    if (opts.prettyPrint) {\n      throw new Error('prettyPrint option is no longer supported, see the pino-pretty package (https://github.com/pinojs/pino-pretty)')\n    }\n\n    const { enabled, onChild } = opts\n    if (enabled === false) opts.level = 'silent'\n    if (!onChild) opts.onChild = noop\n    if (!stream) {\n      if (!hasBeenTampered(process.stdout)) {\n        // If process.stdout.fd is undefined, it means that we are running\n        // in a worker thread. Let's assume we are logging to file descriptor 1.\n        stream = buildSafeSonicBoom({ fd: process.stdout.fd || 1 })\n      } else {\n        stream = process.stdout\n      }\n    }\n    return { opts, stream }\n  }\n}\n\nfunction stringify (obj, stringifySafeFn) {\n  try {\n    return JSON.stringify(obj)\n  } catch (_) {\n    try {\n      const stringify = stringifySafeFn || this[stringifySafeSym]\n      return stringify(obj)\n    } catch (_) {\n      return '\"[unable to serialize, circular reference is too complex to analyze]\"'\n    }\n  }\n}\n\nfunction buildFormatters (level, bindings, log) {\n  return {\n    level,\n    bindings,\n    log\n  }\n}\n\n/**\n * Convert a string integer file descriptor to a proper native integer\n * file descriptor.\n *\n * @param {string} destination The file descriptor string to attempt to convert.\n *\n * @returns {Number}\n */\nfunction normalizeDestFileDescriptor (destination) {\n  const fd = Number(destination)\n  if (typeof destination === 'string' && Number.isFinite(fd)) {\n    return fd\n  }\n  // destination could be undefined if we are in a worker\n  if (destination === undefined) {\n    // This is stdout in UNIX systems\n    return 1\n  }\n  return destination\n}\n\nmodule.exports = {\n  noop,\n  buildSafeSonicBoom,\n  asChindings,\n  asJson,\n  genLog,\n  createArgsNormalizer,\n  stringify,\n  buildFormatters,\n  normalizeDestFileDescriptor\n}\n", "/**\n * Represents default log level values\n *\n * @enum {number}\n */\nconst DEFAULT_LEVELS = {\n  trace: 10,\n  debug: 20,\n  info: 30,\n  warn: 40,\n  error: 50,\n  fatal: 60\n}\n\n/**\n * Represents sort order direction: `ascending` or `descending`\n *\n * @enum {string}\n */\nconst SORTING_ORDER = {\n  ASC: 'ASC',\n  DESC: 'DESC'\n}\n\nmodule.exports = {\n  DEFAULT_LEVELS,\n  SORTING_ORDER\n}\n", "'use strict'\n/* eslint no-prototype-builtins: 0 */\nconst {\n  lsCacheSym,\n  levelValSym,\n  useOnlyCustomLevelsSym,\n  streamSym,\n  formattersSym,\n  hooksSym,\n  levelCompSym\n} = require('./symbols')\nconst { noop, genLog } = require('./tools')\nconst { DEFAULT_LEVELS, SORTING_ORDER } = require('./constants')\n\nconst levelMethods = {\n  fatal: (hook) => {\n    const logFatal = genLog(DEFAULT_LEVELS.fatal, hook)\n    return function (...args) {\n      const stream = this[streamSym]\n      logFatal.call(this, ...args)\n      if (typeof stream.flushSync === 'function') {\n        try {\n          stream.flushSync()\n        } catch (e) {\n          // https://github.com/pinojs/pino/pull/740#discussion_r346788313\n        }\n      }\n    }\n  },\n  error: (hook) => genLog(DEFAULT_LEVELS.error, hook),\n  warn: (hook) => genLog(DEFAULT_LEVELS.warn, hook),\n  info: (hook) => genLog(DEFAULT_LEVELS.info, hook),\n  debug: (hook) => genLog(DEFAULT_LEVELS.debug, hook),\n  trace: (hook) => genLog(DEFAULT_LEVELS.trace, hook)\n}\n\nconst nums = Object.keys(DEFAULT_LEVELS).reduce((o, k) => {\n  o[DEFAULT_LEVELS[k]] = k\n  return o\n}, {})\n\nconst initialLsCache = Object.keys(nums).reduce((o, k) => {\n  o[k] = '{\"level\":' + Number(k)\n  return o\n}, {})\n\nfunction genLsCache (instance) {\n  const formatter = instance[formattersSym].level\n  const { labels } = instance.levels\n  const cache = {}\n  for (const label in labels) {\n    const level = formatter(labels[label], Number(label))\n    cache[label] = JSON.stringify(level).slice(0, -1)\n  }\n  instance[lsCacheSym] = cache\n  return instance\n}\n\nfunction isStandardLevel (level, useOnlyCustomLevels) {\n  if (useOnlyCustomLevels) {\n    return false\n  }\n\n  switch (level) {\n    case 'fatal':\n    case 'error':\n    case 'warn':\n    case 'info':\n    case 'debug':\n    case 'trace':\n      return true\n    default:\n      return false\n  }\n}\n\nfunction setLevel (level) {\n  const { labels, values } = this.levels\n  if (typeof level === 'number') {\n    if (labels[level] === undefined) throw Error('unknown level value' + level)\n    level = labels[level]\n  }\n  if (values[level] === undefined) throw Error('unknown level ' + level)\n  const preLevelVal = this[levelValSym]\n  const levelVal = this[levelValSym] = values[level]\n  const useOnlyCustomLevelsVal = this[useOnlyCustomLevelsSym]\n  const levelComparison = this[levelCompSym]\n  const hook = this[hooksSym].logMethod\n\n  for (const key in values) {\n    if (levelComparison(values[key], levelVal) === false) {\n      this[key] = noop\n      continue\n    }\n    this[key] = isStandardLevel(key, useOnlyCustomLevelsVal) ? levelMethods[key](hook) : genLog(values[key], hook)\n  }\n\n  this.emit(\n    'level-change',\n    level,\n    levelVal,\n    labels[preLevelVal],\n    preLevelVal,\n    this\n  )\n}\n\nfunction getLevel (level) {\n  const { levels, levelVal } = this\n  // protection against potential loss of Pino scope from serializers (edge case with circular refs - https://github.com/pinojs/pino/issues/833)\n  return (levels && levels.labels) ? levels.labels[levelVal] : ''\n}\n\nfunction isLevelEnabled (logLevel) {\n  const { values } = this.levels\n  const logLevelVal = values[logLevel]\n  return logLevelVal !== undefined && this[levelCompSym](logLevelVal, this[levelValSym])\n}\n\n/**\n * Determine if the given `current` level is enabled by comparing it\n * against the current threshold (`expected`).\n *\n * @param {SORTING_ORDER} direction comparison direction \"ASC\" or \"DESC\"\n * @param {number} current current log level number representation\n * @param {number} expected threshold value to compare with\n * @returns {boolean}\n */\nfunction compareLevel (direction, current, expected) {\n  if (direction === SORTING_ORDER.DESC) {\n    return current <= expected\n  }\n\n  return current >= expected\n}\n\n/**\n * Create a level comparison function based on `levelComparison`\n * it could a default function which compares levels either in \"ascending\" or \"descending\" order or custom comparison function\n *\n * @param {SORTING_ORDER | Function} levelComparison sort levels order direction or custom comparison function\n * @returns Function\n */\nfunction genLevelComparison (levelComparison) {\n  if (typeof levelComparison === 'string') {\n    return compareLevel.bind(null, levelComparison)\n  }\n\n  return levelComparison\n}\n\nfunction mappings (customLevels = null, useOnlyCustomLevels = false) {\n  const customNums = customLevels\n    /* eslint-disable */\n    ? Object.keys(customLevels).reduce((o, k) => {\n        o[customLevels[k]] = k\n        return o\n      }, {})\n    : null\n    /* eslint-enable */\n\n  const labels = Object.assign(\n    Object.create(Object.prototype, { Infinity: { value: 'silent' } }),\n    useOnlyCustomLevels ? null : nums,\n    customNums\n  )\n  const values = Object.assign(\n    Object.create(Object.prototype, { silent: { value: Infinity } }),\n    useOnlyCustomLevels ? null : DEFAULT_LEVELS,\n    customLevels\n  )\n  return { labels, values }\n}\n\nfunction assertDefaultLevelFound (defaultLevel, customLevels, useOnlyCustomLevels) {\n  if (typeof defaultLevel === 'number') {\n    const values = [].concat(\n      Object.keys(customLevels || {}).map(key => customLevels[key]),\n      useOnlyCustomLevels ? [] : Object.keys(nums).map(level => +level),\n      Infinity\n    )\n    if (!values.includes(defaultLevel)) {\n      throw Error(`default level:${defaultLevel} must be included in custom levels`)\n    }\n    return\n  }\n\n  const labels = Object.assign(\n    Object.create(Object.prototype, { silent: { value: Infinity } }),\n    useOnlyCustomLevels ? null : DEFAULT_LEVELS,\n    customLevels\n  )\n  if (!(defaultLevel in labels)) {\n    throw Error(`default level:${defaultLevel} must be included in custom levels`)\n  }\n}\n\nfunction assertNoLevelCollisions (levels, customLevels) {\n  const { labels, values } = levels\n  for (const k in customLevels) {\n    if (k in values) {\n      throw Error('levels cannot be overridden')\n    }\n    if (customLevels[k] in labels) {\n      throw Error('pre-existing level values cannot be used for new levels')\n    }\n  }\n}\n\n/**\n * Validates whether `levelComparison` is correct\n *\n * @throws Error\n * @param {SORTING_ORDER | Function} levelComparison - value to validate\n * @returns\n */\nfunction assertLevelComparison (levelComparison) {\n  if (typeof levelComparison === 'function') {\n    return\n  }\n\n  if (typeof levelComparison === 'string' && Object.values(SORTING_ORDER).includes(levelComparison)) {\n    return\n  }\n\n  throw new Error('Levels comparison should be one of \"ASC\", \"DESC\" or \"function\" type')\n}\n\nmodule.exports = {\n  initialLsCache,\n  genLsCache,\n  levelMethods,\n  getLevel,\n  setLevel,\n  isLevelEnabled,\n  mappings,\n  assertNoLevelCollisions,\n  assertDefaultLevelFound,\n  genLevelComparison,\n  assertLevelComparison\n}\n", "'use strict'\n\nmodule.exports = { version: '9.6.0' }\n", "'use strict'\n\n/* eslint no-prototype-builtins: 0 */\n\nconst { EventEmitter } = require('node:events')\nconst {\n  lsCacheSym,\n  levelValSym,\n  setLevelSym,\n  getLevelSym,\n  chindingsSym,\n  parsedChindingsSym,\n  mixinSym,\n  asJsonSym,\n  writeSym,\n  mixinMergeStrategySym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  serializersSym,\n  formattersSym,\n  errorKeySym,\n  messageKeySym,\n  useOnlyCustomLevelsSym,\n  needsMetadataGsym,\n  redactFmtSym,\n  stringifySym,\n  formatOptsSym,\n  stringifiersSym,\n  msgPrefixSym,\n  hooksSym\n} = require('./symbols')\nconst {\n  getLevel,\n  setLevel,\n  isLevelEnabled,\n  mappings,\n  initialLsCache,\n  genLsCache,\n  assertNoLevelCollisions\n} = require('./levels')\nconst {\n  asChindings,\n  asJson,\n  buildFormatters,\n  stringify\n} = require('./tools')\nconst {\n  version\n} = require('./meta')\nconst redaction = require('./redaction')\n\n// note: use of class is satirical\n// https://github.com/pinojs/pino/pull/433#pullrequestreview-127703127\nconst constructor = class Pino {}\nconst prototype = {\n  constructor,\n  child,\n  bindings,\n  setBindings,\n  flush,\n  isLevelEnabled,\n  version,\n  get level () { return this[getLevelSym]() },\n  set level (lvl) { this[setLevelSym](lvl) },\n  get levelVal () { return this[levelValSym] },\n  set levelVal (n) { throw Error('levelVal is read-only') },\n  [lsCacheSym]: initialLsCache,\n  [writeSym]: write,\n  [asJsonSym]: asJson,\n  [getLevelSym]: getLevel,\n  [setLevelSym]: setLevel\n}\n\nObject.setPrototypeOf(prototype, EventEmitter.prototype)\n\n// exporting and consuming the prototype object using factory pattern fixes scoping issues with getters when serializing\nmodule.exports = function () {\n  return Object.create(prototype)\n}\n\nconst resetChildingsFormatter = bindings => bindings\nfunction child (bindings, options) {\n  if (!bindings) {\n    throw Error('missing bindings for child Pino')\n  }\n  options = options || {} // default options to empty object\n  const serializers = this[serializersSym]\n  const formatters = this[formattersSym]\n  const instance = Object.create(this)\n\n  if (options.hasOwnProperty('serializers') === true) {\n    instance[serializersSym] = Object.create(null)\n\n    for (const k in serializers) {\n      instance[serializersSym][k] = serializers[k]\n    }\n    const parentSymbols = Object.getOwnPropertySymbols(serializers)\n    /* eslint no-var: off */\n    for (var i = 0; i < parentSymbols.length; i++) {\n      const ks = parentSymbols[i]\n      instance[serializersSym][ks] = serializers[ks]\n    }\n\n    for (const bk in options.serializers) {\n      instance[serializersSym][bk] = options.serializers[bk]\n    }\n    const bindingsSymbols = Object.getOwnPropertySymbols(options.serializers)\n    for (var bi = 0; bi < bindingsSymbols.length; bi++) {\n      const bks = bindingsSymbols[bi]\n      instance[serializersSym][bks] = options.serializers[bks]\n    }\n  } else instance[serializersSym] = serializers\n  if (options.hasOwnProperty('formatters')) {\n    const { level, bindings: chindings, log } = options.formatters\n    instance[formattersSym] = buildFormatters(\n      level || formatters.level,\n      chindings || resetChildingsFormatter,\n      log || formatters.log\n    )\n  } else {\n    instance[formattersSym] = buildFormatters(\n      formatters.level,\n      resetChildingsFormatter,\n      formatters.log\n    )\n  }\n  if (options.hasOwnProperty('customLevels') === true) {\n    assertNoLevelCollisions(this.levels, options.customLevels)\n    instance.levels = mappings(options.customLevels, instance[useOnlyCustomLevelsSym])\n    genLsCache(instance)\n  }\n\n  // redact must place before asChindings and only replace if exist\n  if ((typeof options.redact === 'object' && options.redact !== null) || Array.isArray(options.redact)) {\n    instance.redact = options.redact // replace redact directly\n    const stringifiers = redaction(instance.redact, stringify)\n    const formatOpts = { stringify: stringifiers[redactFmtSym] }\n    instance[stringifySym] = stringify\n    instance[stringifiersSym] = stringifiers\n    instance[formatOptsSym] = formatOpts\n  }\n\n  if (typeof options.msgPrefix === 'string') {\n    instance[msgPrefixSym] = (this[msgPrefixSym] || '') + options.msgPrefix\n  }\n\n  instance[chindingsSym] = asChindings(instance, bindings)\n  const childLevel = options.level || this.level\n  instance[setLevelSym](childLevel)\n  this.onChild(instance)\n  return instance\n}\n\nfunction bindings () {\n  const chindings = this[chindingsSym]\n  const chindingsJson = `{${chindings.substr(1)}}` // at least contains ,\"pid\":7068,\"hostname\":\"myMac\"\n  const bindingsFromJson = JSON.parse(chindingsJson)\n  delete bindingsFromJson.pid\n  delete bindingsFromJson.hostname\n  return bindingsFromJson\n}\n\nfunction setBindings (newBindings) {\n  const chindings = asChindings(this, newBindings)\n  this[chindingsSym] = chindings\n  delete this[parsedChindingsSym]\n}\n\n/**\n * Default strategy for creating `mergeObject` from arguments and the result from `mixin()`.\n * Fields from `mergeObject` have higher priority in this strategy.\n *\n * @param {Object} mergeObject The object a user has supplied to the logging function.\n * @param {Object} mixinObject The result of the `mixin` method.\n * @return {Object}\n */\nfunction defaultMixinMergeStrategy (mergeObject, mixinObject) {\n  return Object.assign(mixinObject, mergeObject)\n}\n\nfunction write (_obj, msg, num) {\n  const t = this[timeSym]()\n  const mixin = this[mixinSym]\n  const errorKey = this[errorKeySym]\n  const messageKey = this[messageKeySym]\n  const mixinMergeStrategy = this[mixinMergeStrategySym] || defaultMixinMergeStrategy\n  let obj\n  const streamWriteHook = this[hooksSym].streamWrite\n\n  if (_obj === undefined || _obj === null) {\n    obj = {}\n  } else if (_obj instanceof Error) {\n    obj = { [errorKey]: _obj }\n    if (msg === undefined) {\n      msg = _obj.message\n    }\n  } else {\n    obj = _obj\n    if (msg === undefined && _obj[messageKey] === undefined && _obj[errorKey]) {\n      msg = _obj[errorKey].message\n    }\n  }\n\n  if (mixin) {\n    obj = mixinMergeStrategy(obj, mixin(obj, num, this))\n  }\n\n  const s = this[asJsonSym](obj, msg, num, t)\n\n  const stream = this[streamSym]\n  if (stream[needsMetadataGsym] === true) {\n    stream.lastLevel = num\n    stream.lastObj = obj\n    stream.lastMsg = msg\n    stream.lastTime = t.slice(this[timeSliceIndexSym])\n    stream.lastLogger = this // for child loggers\n  }\n  stream.write(streamWriteHook ? streamWriteHook(s) : s)\n}\n\nfunction noop () {}\n\nfunction flush (cb) {\n  if (cb != null && typeof cb !== 'function') {\n    throw Error('callback must be a function')\n  }\n\n  const stream = this[streamSym]\n\n  if (typeof stream.flush === 'function') {\n    stream.flush(cb || noop)\n  } else if (cb) cb()\n}\n", "'use strict'\n\nconst { hasOwnProperty } = Object.prototype\n\nconst stringify = configure()\n\n// @ts-expect-error\nstringify.configure = configure\n// @ts-expect-error\nstringify.stringify = stringify\n\n// @ts-expect-error\nstringify.default = stringify\n\n// @ts-expect-error used for named export\nexports.stringify = stringify\n// @ts-expect-error used for named export\nexports.configure = configure\n\nmodule.exports = stringify\n\n// eslint-disable-next-line no-control-regex\nconst strEscapeSequencesRegExp = /[\\u0000-\\u001f\\u0022\\u005c\\ud800-\\udfff]/\n\n// Escape C0 control characters, double quotes, the backslash and every code\n// unit with a numeric value in the inclusive range 0xD800 to 0xDFFF.\nfunction strEscape (str) {\n  // Some magic numbers that worked out fine while benchmarking with v8 8.0\n  if (str.length < 5000 && !strEscapeSequencesRegExp.test(str)) {\n    return `\"${str}\"`\n  }\n  return JSON.stringify(str)\n}\n\nfunction sort (array, comparator) {\n  // Insertion sort is very efficient for small input sizes, but it has a bad\n  // worst case complexity. Thus, use native array sort for bigger values.\n  if (array.length > 2e2 || comparator) {\n    return array.sort(comparator)\n  }\n  for (let i = 1; i < array.length; i++) {\n    const currentValue = array[i]\n    let position = i\n    while (position !== 0 && array[position - 1] > currentValue) {\n      array[position] = array[position - 1]\n      position--\n    }\n    array[position] = currentValue\n  }\n  return array\n}\n\nconst typedArrayPrototypeGetSymbolToStringTag =\n  Object.getOwnPropertyDescriptor(\n    Object.getPrototypeOf(\n      Object.getPrototypeOf(\n        new Int8Array()\n      )\n    ),\n    Symbol.toStringTag\n  ).get\n\nfunction isTypedArrayWithEntries (value) {\n  return typedArrayPrototypeGetSymbolToStringTag.call(value) !== undefined && value.length !== 0\n}\n\nfunction stringifyTypedArray (array, separator, maximumBreadth) {\n  if (array.length < maximumBreadth) {\n    maximumBreadth = array.length\n  }\n  const whitespace = separator === ',' ? '' : ' '\n  let res = `\"0\":${whitespace}${array[0]}`\n  for (let i = 1; i < maximumBreadth; i++) {\n    res += `${separator}\"${i}\":${whitespace}${array[i]}`\n  }\n  return res\n}\n\nfunction getCircularValueOption (options) {\n  if (hasOwnProperty.call(options, 'circularValue')) {\n    const circularValue = options.circularValue\n    if (typeof circularValue === 'string') {\n      return `\"${circularValue}\"`\n    }\n    if (circularValue == null) {\n      return circularValue\n    }\n    if (circularValue === Error || circularValue === TypeError) {\n      return {\n        toString () {\n          throw new TypeError('Converting circular structure to JSON')\n        }\n      }\n    }\n    throw new TypeError('The \"circularValue\" argument must be of type string or the value null or undefined')\n  }\n  return '\"[Circular]\"'\n}\n\nfunction getDeterministicOption (options) {\n  let value\n  if (hasOwnProperty.call(options, 'deterministic')) {\n    value = options.deterministic\n    if (typeof value !== 'boolean' && typeof value !== 'function') {\n      throw new TypeError('The \"deterministic\" argument must be of type boolean or comparator function')\n    }\n  }\n  return value === undefined ? true : value\n}\n\nfunction getBooleanOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'boolean') {\n      throw new TypeError(`The \"${key}\" argument must be of type boolean`)\n    }\n  }\n  return value === undefined ? true : value\n}\n\nfunction getPositiveIntegerOption (options, key) {\n  let value\n  if (hasOwnProperty.call(options, key)) {\n    value = options[key]\n    if (typeof value !== 'number') {\n      throw new TypeError(`The \"${key}\" argument must be of type number`)\n    }\n    if (!Number.isInteger(value)) {\n      throw new TypeError(`The \"${key}\" argument must be an integer`)\n    }\n    if (value < 1) {\n      throw new RangeError(`The \"${key}\" argument must be >= 1`)\n    }\n  }\n  return value === undefined ? Infinity : value\n}\n\nfunction getItemCount (number) {\n  if (number === 1) {\n    return '1 item'\n  }\n  return `${number} items`\n}\n\nfunction getUniqueReplacerSet (replacerArray) {\n  const replacerSet = new Set()\n  for (const value of replacerArray) {\n    if (typeof value === 'string' || typeof value === 'number') {\n      replacerSet.add(String(value))\n    }\n  }\n  return replacerSet\n}\n\nfunction getStrictOption (options) {\n  if (hasOwnProperty.call(options, 'strict')) {\n    const value = options.strict\n    if (typeof value !== 'boolean') {\n      throw new TypeError('The \"strict\" argument must be of type boolean')\n    }\n    if (value) {\n      return (value) => {\n        let message = `Object can not safely be stringified. Received type ${typeof value}`\n        if (typeof value !== 'function') message += ` (${value.toString()})`\n        throw new Error(message)\n      }\n    }\n  }\n}\n\nfunction configure (options) {\n  options = { ...options }\n  const fail = getStrictOption(options)\n  if (fail) {\n    if (options.bigint === undefined) {\n      options.bigint = false\n    }\n    if (!('circularValue' in options)) {\n      options.circularValue = Error\n    }\n  }\n  const circularValue = getCircularValueOption(options)\n  const bigint = getBooleanOption(options, 'bigint')\n  const deterministic = getDeterministicOption(options)\n  const comparator = typeof deterministic === 'function' ? deterministic : undefined\n  const maximumDepth = getPositiveIntegerOption(options, 'maximumDepth')\n  const maximumBreadth = getPositiveIntegerOption(options, 'maximumBreadth')\n\n  function stringifyFnReplacer (key, parent, stack, replacer, spacer, indentation) {\n    let value = parent[key]\n\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n    value = replacer.call(parent, key, value)\n\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n        let join = ','\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyFnReplacer(String(i), value, stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let whitespace = ''\n        let separator = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        const maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (deterministic && !isTypedArrayWithEntries(value)) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyFnReplacer(key, value, stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":${whitespace}\"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyArrayReplacer (key, value, stack, replacer, spacer, indentation) {\n    if (typeof value === 'object' && value !== null && typeof value.toJSON === 'function') {\n      value = value.toJSON(key)\n    }\n\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        const originalIndentation = indentation\n        let res = ''\n        let join = ','\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          if (spacer !== '') {\n            indentation += spacer\n            res += `\\n${indentation}`\n            join = `,\\n${indentation}`\n          }\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyArrayReplacer(String(i), value[i], stack, replacer, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          if (spacer !== '') {\n            res += `\\n${originalIndentation}`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n        stack.push(value)\n        let whitespace = ''\n        if (spacer !== '') {\n          indentation += spacer\n          join = `,\\n${indentation}`\n          whitespace = ' '\n        }\n        let separator = ''\n        for (const key of replacer) {\n          const tmp = stringifyArrayReplacer(key, value[key], stack, replacer, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${whitespace}${tmp}`\n            separator = join\n          }\n        }\n        if (spacer !== '' && separator.length > 1) {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifyIndent (key, value, stack, spacer, indentation) {\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again.\n          if (typeof value !== 'object') {\n            return stringifyIndent(key, value, stack, spacer, indentation)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n        const originalIndentation = indentation\n\n        if (Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          indentation += spacer\n          let res = `\\n${indentation}`\n          const join = `,\\n${indentation}`\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation)\n            res += tmp !== undefined ? tmp : 'null'\n            res += join\n          }\n          const tmp = stringifyIndent(String(i), value[i], stack, spacer, indentation)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `${join}\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          res += `\\n${originalIndentation}`\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        indentation += spacer\n        const join = `,\\n${indentation}`\n        let res = ''\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, join, maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = join\n        }\n        if (deterministic) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifyIndent(key, value[key], stack, spacer, indentation)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}: ${tmp}`\n            separator = join\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\": \"${getItemCount(removedKeys)} not stringified\"`\n          separator = join\n        }\n        if (separator !== '') {\n          res = `\\n${indentation}${res}\\n${originalIndentation}`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringifySimple (key, value, stack) {\n    switch (typeof value) {\n      case 'string':\n        return strEscape(value)\n      case 'object': {\n        if (value === null) {\n          return 'null'\n        }\n        if (typeof value.toJSON === 'function') {\n          value = value.toJSON(key)\n          // Prevent calling `toJSON` again\n          if (typeof value !== 'object') {\n            return stringifySimple(key, value, stack)\n          }\n          if (value === null) {\n            return 'null'\n          }\n        }\n        if (stack.indexOf(value) !== -1) {\n          return circularValue\n        }\n\n        let res = ''\n\n        const hasLength = value.length !== undefined\n        if (hasLength && Array.isArray(value)) {\n          if (value.length === 0) {\n            return '[]'\n          }\n          if (maximumDepth < stack.length + 1) {\n            return '\"[Array]\"'\n          }\n          stack.push(value)\n          const maximumValuesToStringify = Math.min(value.length, maximumBreadth)\n          let i = 0\n          for (; i < maximumValuesToStringify - 1; i++) {\n            const tmp = stringifySimple(String(i), value[i], stack)\n            res += tmp !== undefined ? tmp : 'null'\n            res += ','\n          }\n          const tmp = stringifySimple(String(i), value[i], stack)\n          res += tmp !== undefined ? tmp : 'null'\n          if (value.length - 1 > maximumBreadth) {\n            const removedKeys = value.length - maximumBreadth - 1\n            res += `,\"... ${getItemCount(removedKeys)} not stringified\"`\n          }\n          stack.pop()\n          return `[${res}]`\n        }\n\n        let keys = Object.keys(value)\n        const keyLength = keys.length\n        if (keyLength === 0) {\n          return '{}'\n        }\n        if (maximumDepth < stack.length + 1) {\n          return '\"[Object]\"'\n        }\n        let separator = ''\n        let maximumPropertiesToStringify = Math.min(keyLength, maximumBreadth)\n        if (hasLength && isTypedArrayWithEntries(value)) {\n          res += stringifyTypedArray(value, ',', maximumBreadth)\n          keys = keys.slice(value.length)\n          maximumPropertiesToStringify -= value.length\n          separator = ','\n        }\n        if (deterministic) {\n          keys = sort(keys, comparator)\n        }\n        stack.push(value)\n        for (let i = 0; i < maximumPropertiesToStringify; i++) {\n          const key = keys[i]\n          const tmp = stringifySimple(key, value[key], stack)\n          if (tmp !== undefined) {\n            res += `${separator}${strEscape(key)}:${tmp}`\n            separator = ','\n          }\n        }\n        if (keyLength > maximumBreadth) {\n          const removedKeys = keyLength - maximumBreadth\n          res += `${separator}\"...\":\"${getItemCount(removedKeys)} not stringified\"`\n        }\n        stack.pop()\n        return `{${res}}`\n      }\n      case 'number':\n        return isFinite(value) ? String(value) : fail ? fail(value) : 'null'\n      case 'boolean':\n        return value === true ? 'true' : 'false'\n      case 'undefined':\n        return undefined\n      case 'bigint':\n        if (bigint) {\n          return String(value)\n        }\n        // fallthrough\n      default:\n        return fail ? fail(value) : undefined\n    }\n  }\n\n  function stringify (value, replacer, space) {\n    if (arguments.length > 1) {\n      let spacer = ''\n      if (typeof space === 'number') {\n        spacer = ' '.repeat(Math.min(space, 10))\n      } else if (typeof space === 'string') {\n        spacer = space.slice(0, 10)\n      }\n      if (replacer != null) {\n        if (typeof replacer === 'function') {\n          return stringifyFnReplacer('', { '': value }, [], replacer, spacer, '')\n        }\n        if (Array.isArray(replacer)) {\n          return stringifyArrayReplacer('', value, [], getUniqueReplacerSet(replacer), spacer, '')\n        }\n      }\n      if (spacer.length !== 0) {\n        return stringifyIndent('', value, [], spacer, '')\n      }\n    }\n    return stringifySimple('', value, [])\n  }\n\n  return stringify\n}\n", "'use strict'\n\nconst metadata = Symbol.for('pino.metadata')\nconst { DEFAULT_LEVELS } = require('./constants')\n\nconst DEFAULT_INFO_LEVEL = DEFAULT_LEVELS.info\n\nfunction multistream (streamsArray, opts) {\n  let counter = 0\n  streamsArray = streamsArray || []\n  opts = opts || { dedupe: false }\n\n  const streamLevels = Object.create(DEFAULT_LEVELS)\n  streamLevels.silent = Infinity\n  if (opts.levels && typeof opts.levels === 'object') {\n    Object.keys(opts.levels).forEach(i => {\n      streamLevels[i] = opts.levels[i]\n    })\n  }\n\n  const res = {\n    write,\n    add,\n    emit,\n    flushSync,\n    end,\n    minLevel: 0,\n    streams: [],\n    clone,\n    [metadata]: true,\n    streamLevels\n  }\n\n  if (Array.isArray(streamsArray)) {\n    streamsArray.forEach(add, res)\n  } else {\n    add.call(res, streamsArray)\n  }\n\n  // clean this object up\n  // or it will stay allocated forever\n  // as it is closed on the following closures\n  streamsArray = null\n\n  return res\n\n  // we can exit early because the streams are ordered by level\n  function write (data) {\n    let dest\n    const level = this.lastLevel\n    const { streams } = this\n    // for handling situation when several streams has the same level\n    let recordedLevel = 0\n    let stream\n\n    // if dedupe set to true we send logs to the stream with the highest level\n    // therefore, we have to change sorting order\n    for (let i = initLoopVar(streams.length, opts.dedupe); checkLoopVar(i, streams.length, opts.dedupe); i = adjustLoopVar(i, opts.dedupe)) {\n      dest = streams[i]\n      if (dest.level <= level) {\n        if (recordedLevel !== 0 && recordedLevel !== dest.level) {\n          break\n        }\n        stream = dest.stream\n        if (stream[metadata]) {\n          const { lastTime, lastMsg, lastObj, lastLogger } = this\n          stream.lastLevel = level\n          stream.lastTime = lastTime\n          stream.lastMsg = lastMsg\n          stream.lastObj = lastObj\n          stream.lastLogger = lastLogger\n        }\n        stream.write(data)\n        if (opts.dedupe) {\n          recordedLevel = dest.level\n        }\n      } else if (!opts.dedupe) {\n        break\n      }\n    }\n  }\n\n  function emit (...args) {\n    for (const { stream } of this.streams) {\n      if (typeof stream.emit === 'function') {\n        stream.emit(...args)\n      }\n    }\n  }\n\n  function flushSync () {\n    for (const { stream } of this.streams) {\n      if (typeof stream.flushSync === 'function') {\n        stream.flushSync()\n      }\n    }\n  }\n\n  function add (dest) {\n    if (!dest) {\n      return res\n    }\n\n    // Check that dest implements either StreamEntry or DestinationStream\n    const isStream = typeof dest.write === 'function' || dest.stream\n    const stream_ = dest.write ? dest : dest.stream\n    // This is necessary to provide a meaningful error message, otherwise it throws somewhere inside write()\n    if (!isStream) {\n      throw Error('stream object needs to implement either StreamEntry or DestinationStream interface')\n    }\n\n    const { streams, streamLevels } = this\n\n    let level\n    if (typeof dest.levelVal === 'number') {\n      level = dest.levelVal\n    } else if (typeof dest.level === 'string') {\n      level = streamLevels[dest.level]\n    } else if (typeof dest.level === 'number') {\n      level = dest.level\n    } else {\n      level = DEFAULT_INFO_LEVEL\n    }\n\n    const dest_ = {\n      stream: stream_,\n      level,\n      levelVal: undefined,\n      id: counter++\n    }\n\n    streams.unshift(dest_)\n    streams.sort(compareByLevel)\n\n    this.minLevel = streams[0].level\n\n    return res\n  }\n\n  function end () {\n    for (const { stream } of this.streams) {\n      if (typeof stream.flushSync === 'function') {\n        stream.flushSync()\n      }\n      stream.end()\n    }\n  }\n\n  function clone (level) {\n    const streams = new Array(this.streams.length)\n\n    for (let i = 0; i < streams.length; i++) {\n      streams[i] = {\n        level,\n        stream: this.streams[i].stream\n      }\n    }\n\n    return {\n      write,\n      add,\n      minLevel: level,\n      streams,\n      clone,\n      emit,\n      flushSync,\n      [metadata]: true\n    }\n  }\n}\n\nfunction compareByLevel (a, b) {\n  return a.level - b.level\n}\n\nfunction initLoopVar (length, dedupe) {\n  return dedupe ? length - 1 : 0\n}\n\nfunction adjustLoopVar (i, dedupe) {\n  return dedupe ? i - 1 : i + 1\n}\n\nfunction checkLoopVar (i, length, dedupe) {\n  return dedupe ? i >= 0 : i < length\n}\n\nmodule.exports = multistream\n", "'use strict'\n\nconst os = require('node:os')\nconst stdSerializers = require('pino-std-serializers')\nconst caller = require('./lib/caller')\nconst redaction = require('./lib/redaction')\nconst time = require('./lib/time')\nconst proto = require('./lib/proto')\nconst symbols = require('./lib/symbols')\nconst { configure } = require('safe-stable-stringify')\nconst { assertDefaultLevelFound, mappings, genLsCache, genLevelComparison, assertLevelComparison } = require('./lib/levels')\nconst { DEFAULT_LEVELS, SORTING_ORDER } = require('./lib/constants')\nconst {\n  createArgsNormalizer,\n  asChindings,\n  buildSafeSonicBoom,\n  buildFormatters,\n  stringify,\n  normalizeDestFileDescriptor,\n  noop\n} = require('./lib/tools')\nconst { version } = require('./lib/meta')\nconst {\n  chindingsSym,\n  redactFmtSym,\n  serializersSym,\n  timeSym,\n  timeSliceIndexSym,\n  streamSym,\n  stringifySym,\n  stringifySafeSym,\n  stringifiersSym,\n  setLevelSym,\n  endSym,\n  formatOptsSym,\n  messageKeySym,\n  errorKeySym,\n  nestedKeySym,\n  mixinSym,\n  levelCompSym,\n  useOnlyCustomLevelsSym,\n  formattersSym,\n  hooksSym,\n  nestedKeyStrSym,\n  mixinMergeStrategySym,\n  msgPrefixSym\n} = symbols\nconst { epochTime, nullTime } = time\nconst { pid } = process\nconst hostname = os.hostname()\nconst defaultErrorSerializer = stdSerializers.err\nconst defaultOptions = {\n  level: 'info',\n  levelComparison: SORTING_ORDER.ASC,\n  levels: DEFAULT_LEVELS,\n  messageKey: 'msg',\n  errorKey: 'err',\n  nestedKey: null,\n  enabled: true,\n  base: { pid, hostname },\n  serializers: Object.assign(Object.create(null), {\n    err: defaultErrorSerializer\n  }),\n  formatters: Object.assign(Object.create(null), {\n    bindings (bindings) {\n      return bindings\n    },\n    level (label, number) {\n      return { level: number }\n    }\n  }),\n  hooks: {\n    logMethod: undefined,\n    streamWrite: undefined\n  },\n  timestamp: epochTime,\n  name: undefined,\n  redact: null,\n  customLevels: null,\n  useOnlyCustomLevels: false,\n  depthLimit: 5,\n  edgeLimit: 100\n}\n\nconst normalize = createArgsNormalizer(defaultOptions)\n\nconst serializers = Object.assign(Object.create(null), stdSerializers)\n\nfunction pino (...args) {\n  const instance = {}\n  const { opts, stream } = normalize(instance, caller(), ...args)\n\n  if (opts.level && typeof opts.level === 'string' && DEFAULT_LEVELS[opts.level.toLowerCase()] !== undefined) opts.level = opts.level.toLowerCase()\n\n  const {\n    redact,\n    crlf,\n    serializers,\n    timestamp,\n    messageKey,\n    errorKey,\n    nestedKey,\n    base,\n    name,\n    level,\n    customLevels,\n    levelComparison,\n    mixin,\n    mixinMergeStrategy,\n    useOnlyCustomLevels,\n    formatters,\n    hooks,\n    depthLimit,\n    edgeLimit,\n    onChild,\n    msgPrefix\n  } = opts\n\n  const stringifySafe = configure({\n    maximumDepth: depthLimit,\n    maximumBreadth: edgeLimit\n  })\n\n  const allFormatters = buildFormatters(\n    formatters.level,\n    formatters.bindings,\n    formatters.log\n  )\n\n  const stringifyFn = stringify.bind({\n    [stringifySafeSym]: stringifySafe\n  })\n  const stringifiers = redact ? redaction(redact, stringifyFn) : {}\n  const formatOpts = redact\n    ? { stringify: stringifiers[redactFmtSym] }\n    : { stringify: stringifyFn }\n  const end = '}' + (crlf ? '\\r\\n' : '\\n')\n  const coreChindings = asChindings.bind(null, {\n    [chindingsSym]: '',\n    [serializersSym]: serializers,\n    [stringifiersSym]: stringifiers,\n    [stringifySym]: stringify,\n    [stringifySafeSym]: stringifySafe,\n    [formattersSym]: allFormatters\n  })\n\n  let chindings = ''\n  if (base !== null) {\n    if (name === undefined) {\n      chindings = coreChindings(base)\n    } else {\n      chindings = coreChindings(Object.assign({}, base, { name }))\n    }\n  }\n\n  const time = (timestamp instanceof Function)\n    ? timestamp\n    : (timestamp ? epochTime : nullTime)\n  const timeSliceIndex = time().indexOf(':') + 1\n\n  if (useOnlyCustomLevels && !customLevels) throw Error('customLevels is required if useOnlyCustomLevels is set true')\n  if (mixin && typeof mixin !== 'function') throw Error(`Unknown mixin type \"${typeof mixin}\" - expected \"function\"`)\n  if (msgPrefix && typeof msgPrefix !== 'string') throw Error(`Unknown msgPrefix type \"${typeof msgPrefix}\" - expected \"string\"`)\n\n  assertDefaultLevelFound(level, customLevels, useOnlyCustomLevels)\n  const levels = mappings(customLevels, useOnlyCustomLevels)\n\n  if (typeof stream.emit === 'function') {\n    stream.emit('message', { code: 'PINO_CONFIG', config: { levels, messageKey, errorKey } })\n  }\n\n  assertLevelComparison(levelComparison)\n  const levelCompFunc = genLevelComparison(levelComparison)\n\n  Object.assign(instance, {\n    levels,\n    [levelCompSym]: levelCompFunc,\n    [useOnlyCustomLevelsSym]: useOnlyCustomLevels,\n    [streamSym]: stream,\n    [timeSym]: time,\n    [timeSliceIndexSym]: timeSliceIndex,\n    [stringifySym]: stringify,\n    [stringifySafeSym]: stringifySafe,\n    [stringifiersSym]: stringifiers,\n    [endSym]: end,\n    [formatOptsSym]: formatOpts,\n    [messageKeySym]: messageKey,\n    [errorKeySym]: errorKey,\n    [nestedKeySym]: nestedKey,\n    // protect against injection\n    [nestedKeyStrSym]: nestedKey ? `,${JSON.stringify(nestedKey)}:{` : '',\n    [serializersSym]: serializers,\n    [mixinSym]: mixin,\n    [mixinMergeStrategySym]: mixinMergeStrategy,\n    [chindingsSym]: chindings,\n    [formattersSym]: allFormatters,\n    [hooksSym]: hooks,\n    silent: noop,\n    onChild,\n    [msgPrefixSym]: msgPrefix\n  })\n\n  Object.setPrototypeOf(instance, proto())\n\n  genLsCache(instance)\n\n  instance[setLevelSym](level)\n\n  return instance\n}\n\nmodule.exports = pino\n\nmodule.exports.destination = (dest = process.stdout.fd) => {\n  if (typeof dest === 'object') {\n    dest.dest = normalizeDestFileDescriptor(dest.dest || process.stdout.fd)\n    return buildSafeSonicBoom(dest)\n  } else {\n    return buildSafeSonicBoom({ dest: normalizeDestFileDescriptor(dest), minLength: 0 })\n  }\n}\n\nmodule.exports.transport = require('./lib/transport')\nmodule.exports.multistream = require('./lib/multistream')\n\nmodule.exports.levels = mappings()\nmodule.exports.stdSerializers = serializers\nmodule.exports.stdTimeFunctions = Object.assign({}, time)\nmodule.exports.symbols = symbols\nmodule.exports.version = version\n\n// Enables default and name export with TypeScript and Babel\nmodule.exports.default = pino\nmodule.exports.pino = pino\n", null, null, "export * from './embedding-model/index';\nexport * from './errors/index';\nexport * from './image-model/index';\nexport * from './json-value/index';\nexport * from './language-model/index';\nexport * from './provider/index';\n\nexport type { JSONSchema7, JSONSchema7Definition } from 'json-schema';\n", "/**\n * Symbol used for identifying AI SDK Error instances.\n * Enables checking if an error is an instance of AISDKError across package versions.\n */\nconst marker = 'vercel.ai.error';\nconst symbol = Symbol.for(marker);\n\n/**\n * Custom error class for AI SDK related errors.\n * @extends Error\n */\nexport class AISDKError extends Error {\n  private readonly [symbol] = true; // used in isInstance\n\n  /**\n   * The underlying cause of the error, if any.\n   */\n  readonly cause?: unknown;\n\n  /**\n   * Creates an AI SDK Error.\n   *\n   * @param {Object} params - The parameters for creating the error.\n   * @param {string} params.name - The name of the error.\n   * @param {string} params.message - The error message.\n   * @param {unknown} [params.cause] - The underlying cause of the error.\n   */\n  constructor({\n    name,\n    message,\n    cause,\n  }: {\n    name: string;\n    message: string;\n    cause?: unknown;\n  }) {\n    super(message);\n\n    this.name = name;\n    this.cause = cause;\n  }\n\n  /**\n   * Checks if the given error is an AI SDK Error.\n   * @param {unknown} error - The error to check.\n   * @returns {boolean} True if the error is an AI SDK Error, false otherwise.\n   */\n  static isInstance(error: unknown): error is AISDKError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  protected static hasMarker(error: unknown, marker: string): boolean {\n    const markerSymbol = Symbol.for(marker);\n    return (\n      error != null &&\n      typeof error === 'object' &&\n      markerSymbol in error &&\n      typeof error[markerSymbol] === 'boolean' &&\n      error[markerSymbol] === true\n    );\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_APICallError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class APICallError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly url: string;\n  readonly requestBodyValues: unknown;\n  readonly statusCode?: number;\n\n  readonly responseHeaders?: Record<string, string>;\n  readonly responseBody?: string;\n\n  readonly isRetryable: boolean;\n  readonly data?: unknown;\n\n  constructor({\n    message,\n    url,\n    requestBodyValues,\n    statusCode,\n    responseHeaders,\n    responseBody,\n    cause,\n    isRetryable = statusCode != null &&\n      (statusCode === 408 || // request timeout\n        statusCode === 409 || // conflict\n        statusCode === 429 || // too many requests\n        statusCode >= 500), // server error\n    data,\n  }: {\n    message: string;\n    url: string;\n    requestBodyValues: unknown;\n    statusCode?: number;\n    responseHeaders?: Record<string, string>;\n    responseBody?: string;\n    cause?: unknown;\n    isRetryable?: boolean;\n    data?: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.url = url;\n    this.requestBodyValues = requestBodyValues;\n    this.statusCode = statusCode;\n    this.responseHeaders = responseHeaders;\n    this.responseBody = responseBody;\n    this.isRetryable = isRetryable;\n    this.data = data;\n  }\n\n  static isInstance(error: unknown): error is APICallError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_EmptyResponseBodyError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class EmptyResponseBodyError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message = 'Empty response body' }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is EmptyResponseBodyError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidArgumentError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * A function argument is invalid.\n */\nexport class InvalidArgumentError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly argument: string;\n\n  constructor({\n    message,\n    cause,\n    argument,\n  }: {\n    argument: string;\n    message: string;\n    cause?: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.argument = argument;\n  }\n\n  static isInstance(error: unknown): error is InvalidArgumentError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidPromptError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * A prompt is invalid. This error should be thrown by providers when they cannot\n * process a prompt.\n */\nexport class InvalidPromptError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly prompt: unknown;\n\n  constructor({\n    prompt,\n    message,\n    cause,\n  }: {\n    prompt: unknown;\n    message: string;\n    cause?: unknown;\n  }) {\n    super({ name, message: `Invalid prompt: ${message}`, cause });\n\n    this.prompt = prompt;\n  }\n\n  static isInstance(error: unknown): error is InvalidPromptError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidResponseDataError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * Server returned a response with invalid data content.\n * This should be thrown by providers when they cannot parse the response from the API.\n */\nexport class InvalidResponseDataError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly data: unknown;\n\n  constructor({\n    data,\n    message = `Invalid response data: ${JSON.stringify(data)}.`,\n  }: {\n    data: unknown;\n    message?: string;\n  }) {\n    super({ name, message });\n\n    this.data = data;\n  }\n\n  static isInstance(error: unknown): error is InvalidResponseDataError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\nimport { getErrorMessage } from './get-error-message';\n\nconst name = 'AI_JSONParseError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n// TODO v5: rename to ParseError\nexport class JSONParseError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly text: string;\n\n  constructor({ text, cause }: { text: string; cause: unknown }) {\n    super({\n      name,\n      message:\n        `JSON parsing failed: ` +\n        `Text: ${text}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n      cause,\n    });\n\n    this.text = text;\n  }\n\n  static isInstance(error: unknown): error is JSONParseError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_LoadAPIKeyError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class LoadAPIKeyError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message }: { message: string }) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is LoadAPIKeyError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_LoadSettingError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class LoadSettingError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message }: { message: string }) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is LoadSettingError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_NoContentGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when the AI provider fails to generate any content.\n */\nexport class NoContentGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({\n    message = 'No content generated.',\n  }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is NoContentGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_NoSuchModelError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class NoSuchModelError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly modelId: string;\n  readonly modelType: 'languageModel' | 'textEmbeddingModel' | 'imageModel';\n\n  constructor({\n    errorName = name,\n    modelId,\n    modelType,\n    message = `No such ${modelType}: ${modelId}`,\n  }: {\n    errorName?: string;\n    modelId: string;\n    modelType: 'languageModel' | 'textEmbeddingModel' | 'imageModel';\n    message?: string;\n  }) {\n    super({ name: errorName, message });\n\n    this.modelId = modelId;\n    this.modelType = modelType;\n  }\n\n  static isInstance(error: unknown): error is NoSuchModelError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_TooManyEmbeddingValuesForCallError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class TooManyEmbeddingValuesForCallError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly provider: string;\n  readonly modelId: string;\n  readonly maxEmbeddingsPerCall: number;\n  readonly values: Array<unknown>;\n\n  constructor(options: {\n    provider: string;\n    modelId: string;\n    maxEmbeddingsPerCall: number;\n    values: Array<unknown>;\n  }) {\n    super({\n      name,\n      message:\n        `Too many values for a single embedding call. ` +\n        `The ${options.provider} model \"${options.modelId}\" can only embed up to ` +\n        `${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`,\n    });\n\n    this.provider = options.provider;\n    this.modelId = options.modelId;\n    this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;\n    this.values = options.values;\n  }\n\n  static isInstance(\n    error: unknown,\n  ): error is TooManyEmbeddingValuesForCallError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\nimport { getErrorMessage } from './get-error-message';\n\nconst name = 'AI_TypeValidationError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class TypeValidationError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly value: unknown;\n\n  constructor({ value, cause }: { value: unknown; cause: unknown }) {\n    super({\n      name,\n      message:\n        `Type validation failed: ` +\n        `Value: ${JSON.stringify(value)}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n      cause,\n    });\n\n    this.value = value;\n  }\n\n  static isInstance(error: unknown): error is TypeValidationError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * Wraps an error into a TypeValidationError.\n   * If the cause is already a TypeValidationError with the same value, it returns the cause.\n   * Otherwise, it creates a new TypeValidationError.\n   *\n   * @param {Object} params - The parameters for wrapping the error.\n   * @param {unknown} params.value - The value that failed validation.\n   * @param {unknown} params.cause - The original error or cause of the validation failure.\n   * @returns {TypeValidationError} A TypeValidationError instance.\n   */\n  static wrap({\n    value,\n    cause,\n  }: {\n    value: unknown;\n    cause: unknown;\n  }): TypeValidationError {\n    return TypeValidationError.isInstance(cause) && cause.value === value\n      ? cause\n      : new TypeValidationError({ value, cause });\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_UnsupportedFunctionalityError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class UnsupportedFunctionalityError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly functionality: string;\n\n  constructor({\n    functionality,\n    message = `'${functionality}' functionality not supported.`,\n  }: {\n    functionality: string;\n    message?: string;\n  }) {\n    super({ name, message });\n    this.functionality = functionality;\n  }\n\n  static isInstance(error: unknown): error is UnsupportedFunctionalityError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { JSONArray, JSONObject, JSONValue } from './json-value';\n\nexport function isJSONValue(value: unknown): value is JSONValue {\n  if (\n    value === null ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  ) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(isJSONValue);\n  }\n\n  if (typeof value === 'object') {\n    return Object.entries(value).every(\n      ([key, val]) => typeof key === 'string' && isJSONValue(val),\n    );\n  }\n\n  return false;\n}\n\nexport function isJSONArray(value: unknown): value is JSONArray {\n  return Array.isArray(value) && value.every(isJSONValue);\n}\n\nexport function isJSONObject(value: unknown): value is JSONObject {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    Object.entries(value).every(\n      ([key, val]) => typeof key === 'string' && isJSONValue(val),\n    )\n  );\n}\n", "// This alphabet uses `A-Za-z0-9_-` symbols.\n// The order of characters is optimized for better gzip and brotli compression.\n// References to the same file (works both for gzip and brotli):\n// `'use`, `andom`, and `rict'`\n// References to the brotli default dictionary:\n// `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size | 0\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size | 0\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n\nmodule.exports = { nanoid, customAlphabet }\n", "'use strict'\n\nconst hasBuffer = typeof Buffer !== 'undefined'\nconst suspectProtoRx = /\"(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])(?:p|\\\\u0070)(?:r|\\\\u0072)(?:o|\\\\u006[Ff])(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])\"\\s*:/\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/\n\nfunction _parse (text, reviver, options) {\n  // Normalize arguments\n  if (options == null) {\n    if (reviver !== null && typeof reviver === 'object') {\n      options = reviver\n      reviver = undefined\n    }\n  }\n\n  if (hasBuffer && Buffer.isBuffer(text)) {\n    text = text.toString()\n  }\n\n  // BOM checker\n  if (text && text.charCodeAt(0) === 0xFEFF) {\n    text = text.slice(1)\n  }\n\n  // Parse normally, allowing exceptions\n  const obj = JSON.parse(text, reviver)\n\n  // Ignore null and non-objects\n  if (obj === null || typeof obj !== 'object') {\n    return obj\n  }\n\n  const protoAction = (options && options.protoAction) || 'error'\n  const constructorAction = (options && options.constructorAction) || 'error'\n\n  // options: 'error' (default) / 'remove' / 'ignore'\n  if (protoAction === 'ignore' && constructorAction === 'ignore') {\n    return obj\n  }\n\n  if (protoAction !== 'ignore' && constructorAction !== 'ignore') {\n    if (suspectProtoRx.test(text) === false && suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  } else if (protoAction !== 'ignore' && constructorAction === 'ignore') {\n    if (suspectProtoRx.test(text) === false) {\n      return obj\n    }\n  } else {\n    if (suspectConstructorRx.test(text) === false) {\n      return obj\n    }\n  }\n\n  // Scan result for proto keys\n  return filter(obj, { protoAction, constructorAction, safe: options && options.safe })\n}\n\nfunction filter (obj, { protoAction = 'error', constructorAction = 'error', safe } = {}) {\n  let next = [obj]\n\n  while (next.length) {\n    const nodes = next\n    next = []\n\n    for (const node of nodes) {\n      if (protoAction !== 'ignore' && Object.prototype.hasOwnProperty.call(node, '__proto__')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (protoAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.__proto__ // eslint-disable-line no-proto\n      }\n\n      if (constructorAction !== 'ignore' &&\n          Object.prototype.hasOwnProperty.call(node, 'constructor') &&\n          Object.prototype.hasOwnProperty.call(node.constructor, 'prototype')) { // Avoid calling node.hasOwnProperty directly\n        if (safe === true) {\n          return null\n        } else if (constructorAction === 'error') {\n          throw new SyntaxError('Object contains forbidden prototype property')\n        }\n\n        delete node.constructor\n      }\n\n      for (const key in node) {\n        const value = node[key]\n        if (value && typeof value === 'object') {\n          next.push(value)\n        }\n      }\n    }\n  }\n  return obj\n}\n\nfunction parse (text, reviver, options) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, options)\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nfunction safeParse (text, reviver) {\n  const stackTraceLimit = Error.stackTraceLimit\n  Error.stackTraceLimit = 0\n  try {\n    return _parse(text, reviver, { safe: true })\n  } catch (_e) {\n    return null\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit\n  }\n}\n\nmodule.exports = parse\nmodule.exports.default = parse\nmodule.exports.parse = parse\nmodule.exports.safeParse = safeParse\nmodule.exports.scan = filter\n", "/**\n * The type of error that occurred.\n * @public\n */\nexport type ErrorType = 'invalid-retry' | 'unknown-field'\n\n/**\n * Error thrown when encountering an issue during parsing.\n *\n * @public\n */\nexport class ParseError extends Error {\n  /**\n   * The type of error that occurred.\n   */\n  type: ErrorType\n\n  /**\n   * In the case of an unknown field encountered in the stream, this will be the field name.\n   */\n  field?: string\n\n  /**\n   * In the case of an unknown field encountered in the stream, this will be the value of the field.\n   */\n  value?: string\n\n  /**\n   * The line that caused the error, if available.\n   */\n  line?: string\n\n  constructor(\n    message: string,\n    options: {type: ErrorType; field?: string; value?: string; line?: string},\n  ) {\n    super(message)\n    this.name = 'ParseError'\n    this.type = options.type\n    this.field = options.field\n    this.value = options.value\n    this.line = options.line\n  }\n}\n", "/**\n * EventSource/Server-Sent Events parser\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html\n */\nimport {ParseError} from './errors.ts'\nimport type {EventSourceParser, ParserCallbacks} from './types.ts'\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction noop(_arg: unknown) {\n  // intentional noop\n}\n\n/**\n * Creates a new EventSource parser.\n *\n * @param callbacks - Callbacks to invoke on different parsing events:\n *   - `onEvent` when a new event is parsed\n *   - `onError` when an error occurs\n *   - `onRetry` when a new reconnection interval has been sent from the server\n *   - `onComment` when a comment is encountered in the stream\n *\n * @returns A new EventSource parser, with `parse` and `reset` methods.\n * @public\n */\nexport function createParser(callbacks: ParserCallbacks): EventSourceParser {\n  const {onEvent = noop, onError = noop, onRetry = noop, onComment} = callbacks\n\n  let incompleteLine = ''\n\n  let isFirstChunk = true\n  let id: string | undefined\n  let data = ''\n  let eventType = ''\n\n  function feed(newChunk: string) {\n    // Strip any UTF8 byte order mark (BOM) at the start of the stream\n    const chunk = isFirstChunk ? newChunk.replace(/^\\xEF\\xBB\\xBF/, '') : newChunk\n\n    // If there was a previous incomplete line, append it to the new chunk,\n    // so we may process it together as a new (hopefully complete) chunk.\n    const [complete, incomplete] = splitLines(`${incompleteLine}${chunk}`)\n\n    for (const line of complete) {\n      parseLine(line)\n    }\n\n    incompleteLine = incomplete\n    isFirstChunk = false\n  }\n\n  function parseLine(line: string) {\n    // If the line is empty (a blank line), dispatch the event\n    if (line === '') {\n      dispatchEvent()\n      return\n    }\n\n    // If the line starts with a U+003A COLON character (:), ignore the line.\n    if (line.startsWith(':')) {\n      if (onComment) {\n        onComment(line.slice(line.startsWith(': ') ? 2 : 1))\n      }\n      return\n    }\n\n    // If the line contains a U+003A COLON character (:)\n    const fieldSeparatorIndex = line.indexOf(':')\n    if (fieldSeparatorIndex !== -1) {\n      // Collect the characters on the line before the first U+003A COLON character (:),\n      // and let `field` be that string.\n      const field = line.slice(0, fieldSeparatorIndex)\n\n      // Collect the characters on the line after the first U+003A COLON character (:),\n      // and let `value` be that string. If value starts with a U+0020 SPACE character,\n      // remove it from value.\n      const offset = line[fieldSeparatorIndex + 1] === ' ' ? 2 : 1\n      const value = line.slice(fieldSeparatorIndex + offset)\n\n      processField(field, value, line)\n      return\n    }\n\n    // Otherwise, the string is not empty but does not contain a U+003A COLON character (:)\n    // Process the field using the whole line as the field name, and an empty string as the field value.\n    // 👆 This is according to spec. That means that a line that has the value `data` will result in\n    // a newline being added to the current `data` buffer, for instance.\n    processField(line, '', line)\n  }\n\n  function processField(field: string, value: string, line: string) {\n    // Field names must be compared literally, with no case folding performed.\n    switch (field) {\n      case 'event':\n        // Set the `event type` buffer to field value\n        eventType = value\n        break\n      case 'data':\n        // Append the field value to the `data` buffer, then append a single U+000A LINE FEED(LF)\n        // character to the `data` buffer.\n        data = `${data}${value}\\n`\n        break\n      case 'id':\n        // If the field value does not contain U+0000 NULL, then set the `ID` buffer to\n        // the field value. Otherwise, ignore the field.\n        id = value.includes('\\0') ? undefined : value\n        break\n      case 'retry':\n        // If the field value consists of only ASCII digits, then interpret the field value as an\n        // integer in base ten, and set the event stream's reconnection time to that integer.\n        // Otherwise, ignore the field.\n        if (/^\\d+$/.test(value)) {\n          onRetry(parseInt(value, 10))\n        } else {\n          onError(\n            new ParseError(`Invalid \\`retry\\` value: \"${value}\"`, {\n              type: 'invalid-retry',\n              value,\n              line,\n            }),\n          )\n        }\n        break\n      default:\n        // Otherwise, the field is ignored.\n        onError(\n          new ParseError(\n            `Unknown field \"${field.length > 20 ? `${field.slice(0, 20)}…` : field}\"`,\n            {type: 'unknown-field', field, value, line},\n          ),\n        )\n        break\n    }\n  }\n\n  function dispatchEvent() {\n    const shouldDispatch = data.length > 0\n    if (shouldDispatch) {\n      onEvent({\n        id,\n        event: eventType || undefined,\n        // If the data buffer's last character is a U+000A LINE FEED (LF) character,\n        // then remove the last character from the data buffer.\n        data: data.endsWith('\\n') ? data.slice(0, -1) : data,\n      })\n    }\n\n    // Reset for the next event\n    id = undefined\n    data = ''\n    eventType = ''\n  }\n\n  function reset(options: {consume?: boolean} = {}) {\n    if (incompleteLine && options.consume) {\n      parseLine(incompleteLine)\n    }\n\n    id = undefined\n    data = ''\n    eventType = ''\n    incompleteLine = ''\n  }\n\n  return {feed, reset}\n}\n\n/**\n * For the given `chunk`, split it into lines according to spec, and return any remaining incomplete line.\n *\n * @param chunk - The chunk to split into lines\n * @returns A tuple containing an array of complete lines, and any remaining incomplete line\n * @internal\n */\nfunction splitLines(chunk: string): [Array<string>, string] {\n  /**\n   * According to the spec, a line is terminated by either:\n   * - U+000D CARRIAGE RETURN U+000A LINE FEED (CRLF) character pair\n   * - a single U+000A LINE FEED(LF) character not preceded by a U+000D CARRIAGE RETURN(CR) character\n   * - a single U+000D CARRIAGE RETURN(CR) character not followed by a U+000A LINE FEED(LF) character\n   */\n\n  const lines: Array<string> = []\n  let incompleteLine = ''\n\n  const totalLength = chunk.length\n  for (let i = 0; i < totalLength; i++) {\n    const char = chunk[i]\n\n    if (char === '\\r' && chunk[i + 1] === '\\n') {\n      // CRLF\n      lines.push(incompleteLine)\n      incompleteLine = ''\n      i++ // Skip the LF character\n    } else if (char === '\\r') {\n      // Standalone CR\n      lines.push(incompleteLine)\n      incompleteLine = ''\n    } else if (char === '\\n') {\n      // Standalone LF\n      lines.push(incompleteLine)\n      incompleteLine = ''\n    } else {\n      incompleteLine += char\n    }\n  }\n\n  return [lines, incompleteLine]\n}\n", "import {createParser} from './parse.ts'\nimport type {EventSourceMessage, EventSourceParser} from './types.ts'\n\n/**\n * Options for the EventSourceParserStream.\n *\n * @public\n */\nexport interface StreamOptions {\n  /**\n   * Behavior when a parsing error occurs.\n   *\n   * - A custom function can be provided to handle the error.\n   * - `'terminate'` will error the stream and stop parsing.\n   * - Any other value will ignore the error and continue parsing.\n   *\n   * @defaultValue `undefined`\n   */\n  onError?: 'terminate' | ((error: Error) => void)\n\n  /**\n   * Callback for when a reconnection interval is sent from the server.\n   *\n   * @param retry - The number of milliseconds to wait before reconnecting.\n   */\n  onRetry?: (retry: number) => void\n\n  /**\n   * Callback for when a comment is encountered in the stream.\n   *\n   * @param comment - The comment encountered in the stream.\n   */\n  onComment?: (comment: string) => void\n}\n\n/**\n * A TransformStream that ingests a stream of strings and produces a stream of `EventSourceMessage`.\n *\n * @example Basic usage\n * ```\n * const eventStream =\n *   response.body\n *     .pipeThrough(new TextDecoderStream())\n *     .pipeThrough(new EventSourceParserStream())\n * ```\n *\n * @example Terminate stream on parsing errors\n * ```\n * const eventStream =\n *  response.body\n *   .pipeThrough(new TextDecoderStream())\n *   .pipeThrough(new EventSourceParserStream({terminateOnError: true}))\n * ```\n *\n * @public\n */\nexport class EventSourceParserStream extends TransformStream<string, EventSourceMessage> {\n  constructor({onError, onRetry, onComment}: StreamOptions = {}) {\n    let parser!: EventSourceParser\n\n    super({\n      start(controller) {\n        parser = createParser({\n          onEvent: (event) => {\n            controller.enqueue(event)\n          },\n          onError(error) {\n            if (onError === 'terminate') {\n              controller.error(error)\n            } else if (typeof onError === 'function') {\n              onError(error)\n            }\n\n            // Ignore by default\n          },\n          onRetry,\n          onComment,\n        })\n      },\n      transform(chunk) {\n        parser.feed(chunk)\n      },\n    })\n  }\n}\n\nexport {type ErrorType, ParseError} from './errors.ts'\nexport type {EventSourceMessage} from './types.ts'\n", "export * from './combine-headers';\nexport { convertAsyncIteratorToReadableStream } from './convert-async-iterator-to-readable-stream';\nexport * from './delay';\nexport * from './extract-response-headers';\nexport * from './fetch-function';\nexport { createIdGenerator, generateId } from './generate-id';\nexport * from './get-error-message';\nexport * from './get-from-api';\nexport * from './is-abort-error';\nexport * from './load-api-key';\nexport { loadOptionalSetting } from './load-optional-setting';\nexport { loadSetting } from './load-setting';\nexport * from './parse-json';\nexport * from './post-to-api';\nexport * from './remove-undefined-entries';\nexport * from './resolve';\nexport * from './response-handler';\nexport * from './uint8-utils';\nexport * from './validate-types';\nexport * from './validator';\nexport * from './without-trailing-slash';\n\nexport type { IDGenerator } from './generate-id';\nexport { parseProviderOptions } from './parse-provider-options';\nexport type { CoreToolCall, ToolCall } from './types/tool-call';\nexport type { CoreToolResult, ToolResult } from './types/tool-result';\n", "export function combineHeaders(\n  ...headers: Array<Record<string, string | undefined> | undefined>\n): Record<string, string | undefined> {\n  return headers.reduce(\n    (combinedHeaders, currentHeaders) => ({\n      ...combinedHeaders,\n      ...(currentHeaders ?? {}),\n    }),\n    {},\n  ) as Record<string, string | undefined>;\n}\n", "/**\n * Converts an AsyncIterator to a ReadableStream.\n *\n * @template T - The type of elements produced by the AsyncIterator.\n * @param { <T>} iterator - The AsyncIterator to convert.\n * @returns {ReadableStream<T>} - A ReadableStream that provides the same data as the AsyncIterator.\n */\nexport function convertAsyncIteratorToReadableStream<T>(\n  iterator: AsyncIterator<T>,\n): ReadableStream<T> {\n  return new ReadableStream<T>({\n    /**\n     * Called when the consumer wants to pull more data from the stream.\n     *\n     * @param {ReadableStreamDefaultController<T>} controller - The controller to enqueue data into the stream.\n     * @returns {Promise<void>}\n     */\n    async pull(controller) {\n      try {\n        const { value, done } = await iterator.next();\n        if (done) {\n          controller.close();\n        } else {\n          controller.enqueue(value);\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    /**\n     * Called when the consumer cancels the stream.\n     */\n    cancel() {},\n  });\n}\n", "/**\n * Creates a Promise that resolves after a specified delay\n * @param delayInMs - The delay duration in milliseconds. If null or undefined, resolves immediately.\n * @returns A Promise that resolves after the specified delay\n */\nexport async function delay(delayInMs?: number | null): Promise<void> {\n  return delayInMs == null\n    ? Promise.resolve()\n    : new Promise(resolve => setTimeout(resolve, delayInMs));\n}\n", "/**\nExtracts the headers from a response object and returns them as a key-value object.\n\n@param response - The response object to extract headers from.\n@returns The headers as a key-value object.\n*/\nexport function extractResponseHeaders(\n  response: Response,\n): Record<string, string> {\n  const headers: Record<string, string> = {};\n  response.headers.forEach((value, key) => {\n    headers[key] = value;\n  });\n  return headers;\n}\n", "import { InvalidArgumentError } from '@ai-sdk/provider';\nimport { customAlphabet } from 'nanoid/non-secure';\n\n/**\nCreates an ID generator.\nThe total length of the ID is the sum of the prefix, separator, and random part length.\nNon-secure.\n\n@param alphabet - The alphabet to use for the ID. Default: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.\n@param prefix - The prefix of the ID to generate. Default: ''.\n@param separator - The separator between the prefix and the random part of the ID. Default: '-'.\n@param size - The size of the random part of the ID to generate. Default: 16.\n */\n// TODO 5.0 breaking change: change the return type to IDGenerator\nexport const createIdGenerator = ({\n  prefix,\n  size: defaultSize = 16,\n  alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n  separator = '-',\n}: {\n  prefix?: string;\n  separator?: string;\n  size?: number;\n  alphabet?: string;\n} = {}): ((size?: number) => string) => {\n  const generator = customAlphabet(alphabet, defaultSize);\n\n  if (prefix == null) {\n    return generator;\n  }\n\n  // check that the prefix is not part of the alphabet (otherwise prefix checking can fail randomly)\n  if (alphabet.includes(separator)) {\n    throw new InvalidArgumentError({\n      argument: 'separator',\n      message: `The separator \"${separator}\" must not be part of the alphabet \"${alphabet}\".`,\n    });\n  }\n\n  return size => `${prefix}${separator}${generator(size)}`;\n};\n\n/**\nA function that generates an ID.\n */\nexport type IDGenerator = () => string;\n\n/**\nGenerates a 16-character random string to use for IDs. Not secure.\n\n@param size - The size of the ID to generate. Default: 16.\n */\nexport const generateId = createIdGenerator();\n", "export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n", "import { APICallError } from '@ai-sdk/provider';\nimport { FetchFunction } from './fetch-function';\nimport { removeUndefinedEntries } from './remove-undefined-entries';\nimport { ResponseHandler } from './response-handler';\nimport { isAbortError } from './is-abort-error';\nimport { extractResponseHeaders } from './extract-response-headers';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => globalThis.fetch;\n\nexport const getFromApi = async <T>({\n  url,\n  headers = {},\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch(),\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  failedResponseHandler: ResponseHandler<Error>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: removeUndefinedEntries(headers),\n      signal: abortSignal,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.ok) {\n      let errorInformation: {\n        value: Error;\n        responseHeaders?: Record<string, string> | undefined;\n      };\n\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: {},\n        });\n      } catch (error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n\n        throw new APICallError({\n          message: 'Failed to process error response',\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: {},\n        });\n      }\n\n      throw errorInformation.value;\n    }\n\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: {},\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n      }\n\n      throw new APICallError({\n        message: 'Failed to process successful response',\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: {},\n      });\n    }\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error;\n    }\n\n    if (error instanceof TypeError && error.message === 'fetch failed') {\n      const cause = (error as any).cause;\n      if (cause != null) {\n        throw new APICallError({\n          message: `Cannot connect to API: ${cause.message}`,\n          cause,\n          url,\n          isRetryable: true,\n          requestBodyValues: {},\n        });\n      }\n    }\n\n    throw error;\n  }\n};\n", "/**\n * Removes entries from a record where the value is null or undefined.\n * @param record - The input object whose entries may be null or undefined.\n * @returns A new object containing only entries with non-null and non-undefined values.\n */\nexport function removeUndefinedEntries<T>(\n  record: Record<string, T | undefined>,\n): Record<string, T> {\n  return Object.fromEntries(\n    Object.entries(record).filter(([_key, value]) => value != null),\n  ) as Record<string, T>;\n}\n", "export function isAbortError(error: unknown): error is Error {\n  return (\n    error instanceof Error &&\n    (error.name === 'AbortError' || error.name === 'TimeoutError')\n  );\n}\n", "import { LoadAPIKeyError } from '@ai-sdk/provider';\n\nexport function loadApiKey({\n  apiKey,\n  environmentVariableName,\n  apiKeyParameterName = 'apiKey',\n  description,\n}: {\n  apiKey: string | undefined;\n  environmentVariableName: string;\n  apiKeyParameterName?: string;\n  description: string;\n}): string {\n  if (typeof apiKey === 'string') {\n    return apiKey;\n  }\n\n  if (apiKey != null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter. Environment variables is not supported in this environment.`,\n    });\n  }\n\n  apiKey = process.env[environmentVariableName];\n\n  if (apiKey == null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof apiKey !== 'string') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string. The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return apiKey;\n}\n", "/**\n * Loads an optional `string` setting from the environment or a parameter.\n *\n * @param settingValue - The setting value.\n * @param environmentVariableName - The environment variable name.\n * @returns The setting value.\n */\nexport function loadOptionalSetting({\n  settingValue,\n  environmentVariableName,\n}: {\n  settingValue: string | undefined;\n  environmentVariableName: string;\n}): string | undefined {\n  if (typeof settingValue === 'string') {\n    return settingValue;\n  }\n\n  if (settingValue != null || typeof process === 'undefined') {\n    return undefined;\n  }\n\n  settingValue = process.env[environmentVariableName];\n\n  if (settingValue == null || typeof settingValue !== 'string') {\n    return undefined;\n  }\n\n  return settingValue;\n}\n", "import { LoadSettingError } from '@ai-sdk/provider';\n\n/**\n * Loads a `string` setting from the environment or a parameter.\n *\n * @param settingValue - The setting value.\n * @param environmentVariableName - The environment variable name.\n * @param settingName - The setting name.\n * @param description - The description of the setting.\n * @returns The setting value.\n */\nexport function loadSetting({\n  settingValue,\n  environmentVariableName,\n  settingName,\n  description,\n}: {\n  settingValue: string | undefined;\n  environmentVariableName: string;\n  settingName: string;\n  description: string;\n}): string {\n  if (typeof settingValue === 'string') {\n    return settingValue;\n  }\n\n  if (settingValue != null) {\n    throw new LoadSettingError({\n      message: `${description} setting must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadSettingError({\n      message:\n        `${description} setting is missing. ` +\n        `Pass it using the '${settingName}' parameter. ` +\n        `Environment variables is not supported in this environment.`,\n    });\n  }\n\n  settingValue = process.env[environmentVariableName];\n\n  if (settingValue == null) {\n    throw new LoadSettingError({\n      message:\n        `${description} setting is missing. ` +\n        `Pass it using the '${settingName}' parameter ` +\n        `or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof settingValue !== 'string') {\n    throw new LoadSettingError({\n      message:\n        `${description} setting must be a string. ` +\n        `The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return settingValue;\n}\n", "import {\n  JSONParseError,\n  JSONValue,\n  TypeValidationError,\n} from '@ai-sdk/provider';\nimport SecureJSON from 'secure-json-parse';\nimport { ZodSchema } from 'zod';\nimport { safeValidateTypes, validateTypes } from './validate-types';\nimport { Validator } from './validator';\n\n/**\n * Parses a JSON string into an unknown object.\n *\n * @param text - The JSON string to parse.\n * @returns {JSONValue} - The parsed JSON object.\n */\nexport function parseJSON(options: {\n  text: string;\n  schema?: undefined;\n}): JSONValue;\n/**\n * Parses a JSON string into a strongly-typed object using the provided schema.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Validator<T>} schema - The schema to use for parsing the JSON.\n * @returns {T} - The parsed object.\n */\nexport function parseJSON<T>(options: {\n  text: string;\n  schema: ZodSchema<T> | Validator<T>;\n}): T;\nexport function parseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: ZodSchema<T> | Validator<T>;\n}): T {\n  try {\n    const value = SecureJSON.parse(text);\n\n    if (schema == null) {\n      return value;\n    }\n\n    return validateTypes({ value, schema });\n  } catch (error) {\n    if (\n      JSONParseError.isInstance(error) ||\n      TypeValidationError.isInstance(error)\n    ) {\n      throw error;\n    }\n\n    throw new JSONParseError({ text, cause: error });\n  }\n}\n\nexport type ParseResult<T> =\n  | { success: true; value: T; rawValue: unknown }\n  | { success: false; error: JSONParseError | TypeValidationError };\n\n/**\n * Safely parses a JSON string and returns the result as an object of type `unknown`.\n *\n * @param text - The JSON string to parse.\n * @returns {object} Either an object with `success: true` and the parsed data, or an object with `success: false` and the error that occurred.\n */\nexport function safeParseJSON(options: {\n  text: string;\n  schema?: undefined;\n}): ParseResult<JSONValue>;\n/**\n * Safely parses a JSON string into a strongly-typed object, using a provided schema to validate the object.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Validator<T>} schema - The schema to use for parsing the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport function safeParseJSON<T>(options: {\n  text: string;\n  schema: ZodSchema<T> | Validator<T>;\n}): ParseResult<T>;\nexport function safeParseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: ZodSchema<T> | Validator<T>;\n}): ParseResult<T> {\n  try {\n    const value = SecureJSON.parse(text);\n\n    if (schema == null) {\n      return { success: true, value: value as T, rawValue: value };\n    }\n\n    const validationResult = safeValidateTypes({ value, schema });\n\n    return validationResult.success\n      ? { ...validationResult, rawValue: value }\n      : validationResult;\n  } catch (error) {\n    return {\n      success: false,\n      error: JSONParseError.isInstance(error)\n        ? error\n        : new JSONParseError({ text, cause: error }),\n    };\n  }\n}\n\nexport function isParsableJson(input: string): boolean {\n  try {\n    SecureJSON.parse(input);\n    return true;\n  } catch {\n    return false;\n  }\n}\n", "import { TypeValidationError } from '@ai-sdk/provider';\nimport { z } from 'zod';\nimport { Validator, asValidator } from './validator';\n\n/**\n * Validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The object to validate.\n * @param {Validator<T>} options.schema - The schema to use for validating the JSON.\n * @returns {T} - The typed object.\n */\nexport function validateTypes<T>({\n  value,\n  schema: inputSchema,\n}: {\n  value: unknown;\n  schema: z.Schema<T, z.ZodTypeDef, any> | Validator<T>;\n}): T {\n  const result = safeValidateTypes({ value, schema: inputSchema });\n\n  if (!result.success) {\n    throw TypeValidationError.wrap({ value, cause: result.error });\n  }\n\n  return result.value;\n}\n\n/**\n * Safely validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The JSON object to validate.\n * @param {Validator<T>} options.schema - The schema to use for validating the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport function safeValidateTypes<T>({\n  value,\n  schema,\n}: {\n  value: unknown;\n  schema: z.Schema<T, z.ZodTypeDef, any> | Validator<T>;\n}):\n  | { success: true; value: T }\n  | { success: false; error: TypeValidationError } {\n  const validator = asValidator(schema);\n\n  try {\n    if (validator.validate == null) {\n      return { success: true, value: value as T };\n    }\n\n    const result = validator.validate(value);\n\n    if (result.success) {\n      return result;\n    }\n\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: result.error }),\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: error }),\n    };\n  }\n}\n", "import { z } from 'zod';\n\n/**\n * Used to mark validator functions so we can support both Zod and custom schemas.\n */\nexport const validatorSymbol = Symbol.for('vercel.ai.validator');\n\nexport type ValidationResult<OBJECT> =\n  | { success: true; value: OBJECT }\n  | { success: false; error: Error };\n\nexport type Validator<OBJECT = unknown> = {\n  /**\n   * Used to mark validator functions so we can support both Zod and custom schemas.\n   */\n  [validatorSymbol]: true;\n\n  /**\n   * Optional. Validates that the structure of a value matches this schema,\n   * and returns a typed version of the value if it does.\n   */\n  readonly validate?: (value: unknown) => ValidationResult<OBJECT>;\n};\n\n/**\n * Create a validator.\n *\n * @param validate A validation function for the schema.\n */\nexport function validator<OBJECT>(\n  validate?: undefined | ((value: unknown) => ValidationResult<OBJECT>),\n): Validator<OBJECT> {\n  return { [validatorSymbol]: true, validate };\n}\n\nexport function isValidator(value: unknown): value is Validator {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    validatorSymbol in value &&\n    value[validatorSymbol] === true &&\n    'validate' in value\n  );\n}\n\nexport function asValidator<OBJECT>(\n  value: Validator<OBJECT> | z.Schema<OBJECT, z.ZodTypeDef, any>,\n): Validator<OBJECT> {\n  return isValidator(value) ? value : zodValidator(value);\n}\n\nexport function zodValidator<OBJECT>(\n  zodSchema: z.Schema<OBJECT, z.ZodTypeDef, any>,\n): Validator<OBJECT> {\n  return validator(value => {\n    const result = zodSchema.safeParse(value);\n    return result.success\n      ? { success: true, value: result.data }\n      : { success: false, error: result.error };\n  });\n}\n", "import { APICallError } from '@ai-sdk/provider';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { FetchFunction } from './fetch-function';\nimport { isAbortError } from './is-abort-error';\nimport { removeUndefinedEntries } from './remove-undefined-entries';\nimport { ResponseHandler } from './response-handler';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => globalThis.fetch;\n\nexport const postJsonToApi = async <T>({\n  url,\n  headers,\n  body,\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch,\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: unknown;\n  failedResponseHandler: ResponseHandler<APICallError>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) =>\n  postToApi({\n    url,\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    body: {\n      content: JSON.stringify(body),\n      values: body,\n    },\n    failedResponseHandler,\n    successfulResponseHandler,\n    abortSignal,\n    fetch,\n  });\n\nexport const postToApi = async <T>({\n  url,\n  headers = {},\n  body,\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch(),\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: {\n    content: string | FormData | Uint8Array;\n    values: unknown;\n  };\n  failedResponseHandler: ResponseHandler<Error>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: removeUndefinedEntries(headers),\n      body: body.content,\n      signal: abortSignal,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.ok) {\n      let errorInformation: {\n        value: Error;\n        responseHeaders?: Record<string, string> | undefined;\n      };\n\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: body.values,\n        });\n      } catch (error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n\n        throw new APICallError({\n          message: 'Failed to process error response',\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: body.values,\n        });\n      }\n\n      throw errorInformation.value;\n    }\n\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: body.values,\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n      }\n\n      throw new APICallError({\n        message: 'Failed to process successful response',\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: body.values,\n      });\n    }\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error;\n    }\n\n    // unwrap original error when fetch failed (for easier debugging):\n    if (error instanceof TypeError && error.message === 'fetch failed') {\n      const cause = (error as any).cause;\n\n      if (cause != null) {\n        // Failed to connect to server:\n        throw new APICallError({\n          message: `Cannot connect to API: ${cause.message}`,\n          cause,\n          url,\n          requestBodyValues: body.values,\n          isRetryable: true, // retry when network error\n        });\n      }\n    }\n\n    throw error;\n  }\n};\n", "export type Resolvable<T> =\n  | T // Raw value\n  | Promise<T> // Promise of value\n  | (() => T) // Function returning value\n  | (() => Promise<T>); // Function returning promise of value\n\n/**\n * Resolves a value that could be a raw value, a Promise, a function returning a value,\n * or a function returning a Promise.\n */\nexport async function resolve<T>(value: Resolvable<T>): Promise<T> {\n  // If it's a function, call it to get the value/promise\n  if (typeof value === 'function') {\n    value = (value as Function)();\n  }\n\n  // Otherwise just resolve whatever we got (value or promise)\n  return Promise.resolve(value as T);\n}\n", "import { APICallError, EmptyResponseBodyError } from '@ai-sdk/provider';\nimport {\n  EventSourceParserStream,\n  EventSourceMessage,\n} from 'eventsource-parser/stream';\nimport { ZodSchema } from 'zod';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { ParseResult, parseJSON, safeParseJSON } from './parse-json';\n\nexport type ResponseHandler<RETURN_TYPE> = (options: {\n  url: string;\n  requestBodyValues: unknown;\n  response: Response;\n}) => PromiseLike<{\n  value: RETURN_TYPE;\n  rawValue?: unknown;\n  responseHeaders?: Record<string, string>;\n}>;\n\nexport const createJsonErrorResponseHandler =\n  <T>({\n    errorSchema,\n    errorToMessage,\n    isRetryable,\n  }: {\n    errorSchema: ZodSchema<T>;\n    errorToMessage: (error: T) => string;\n    isRetryable?: (response: Response, error?: T) => boolean;\n  }): ResponseHandler<APICallError> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n    const responseHeaders = extractResponseHeaders(response);\n\n    // Some providers return an empty response body for some errors:\n    if (responseBody.trim() === '') {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n\n    // resilient parsing in case the response is not JSON or does not match the schema:\n    try {\n      const parsedError = parseJSON({\n        text: responseBody,\n        schema: errorSchema,\n      });\n\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: errorToMessage(parsedError),\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          data: parsedError,\n          isRetryable: isRetryable?.(response, parsedError),\n        }),\n      };\n    } catch (parseError) {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n  };\n\nexport const createEventSourceResponseHandler =\n  <T>(\n    chunkSchema: ZodSchema<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    return {\n      responseHeaders,\n      value: response.body\n        .pipeThrough(new TextDecoderStream())\n        .pipeThrough(new EventSourceParserStream())\n        .pipeThrough(\n          new TransformStream<EventSourceMessage, ParseResult<T>>({\n            transform({ data }, controller) {\n              // ignore the 'DONE' event that e.g. OpenAI sends:\n              if (data === '[DONE]') {\n                return;\n              }\n\n              controller.enqueue(\n                safeParseJSON({\n                  text: data,\n                  schema: chunkSchema,\n                }),\n              );\n            },\n          }),\n        ),\n    };\n  };\n\nexport const createJsonStreamResponseHandler =\n  <T>(\n    chunkSchema: ZodSchema<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    let buffer = '';\n\n    return {\n      responseHeaders,\n      value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(\n        new TransformStream<string, ParseResult<T>>({\n          transform(chunkText, controller) {\n            if (chunkText.endsWith('\\n')) {\n              controller.enqueue(\n                safeParseJSON({\n                  text: buffer + chunkText,\n                  schema: chunkSchema,\n                }),\n              );\n              buffer = '';\n            } else {\n              buffer += chunkText;\n            }\n          },\n        }),\n      ),\n    };\n  };\n\nexport const createJsonResponseHandler =\n  <T>(responseSchema: ZodSchema<T>): ResponseHandler<T> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n\n    const parsedResult = safeParseJSON({\n      text: responseBody,\n      schema: responseSchema,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!parsedResult.success) {\n      throw new APICallError({\n        message: 'Invalid JSON response',\n        cause: parsedResult.error,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        url,\n        requestBodyValues,\n      });\n    }\n\n    return {\n      responseHeaders,\n      value: parsedResult.value,\n      rawValue: parsedResult.rawValue,\n    };\n  };\n\nexport const createBinaryResponseHandler =\n  (): ResponseHandler<Uint8Array> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.body) {\n      throw new APICallError({\n        message: 'Response body is empty',\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody: undefined,\n      });\n    }\n\n    try {\n      const buffer = await response.arrayBuffer();\n      return {\n        responseHeaders,\n        value: new Uint8Array(buffer),\n      };\n    } catch (error) {\n      throw new APICallError({\n        message: 'Failed to read response as array buffer',\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody: undefined,\n        cause: error,\n      });\n    }\n  };\n\nexport const createStatusCodeErrorResponseHandler =\n  (): ResponseHandler<APICallError> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseHeaders = extractResponseHeaders(response);\n    const responseBody = await response.text();\n\n    return {\n      responseHeaders,\n      value: new APICallError({\n        message: response.statusText,\n        url,\n        requestBodyValues: requestBodyValues as Record<string, unknown>,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n      }),\n    };\n  };\n", "// btoa and atob need to be invoked as a function call, not as a method call.\n// Otherwise CloudFlare will throw a\n// \"TypeError: Illegal invocation: function called with incorrect this reference\"\nconst { btoa, atob } = globalThis;\n\nexport function convertBase64ToUint8Array(base64String: string) {\n  const base64Url = base64String.replace(/-/g, '+').replace(/_/g, '/');\n  const latin1string = atob(base64Url);\n  return Uint8Array.from(latin1string, byte => byte.codePointAt(0)!);\n}\n\nexport function convertUint8ArrayToBase64(array: Uint8Array): string {\n  let latin1string = '';\n\n  // Note: regular for loop to support older JavaScript versions that\n  // do not support for..of on Uint8Array\n  for (let i = 0; i < array.length; i++) {\n    latin1string += String.fromCodePoint(array[i]);\n  }\n\n  return btoa(latin1string);\n}\n", "export function withoutTrailingSlash(url: string | undefined) {\n  return url?.replace(/\\/$/, '');\n}\n", "import { InvalidArgumentError } from '@ai-sdk/provider';\nimport { safeValidateTypes } from './validate-types';\nimport { z } from 'zod';\n\nexport function parseProviderOptions<T>({\n  provider,\n  providerOptions,\n  schema,\n}: {\n  provider: string;\n  providerOptions: Record<string, unknown> | undefined;\n  schema: z.ZodSchema<T>;\n}): T | undefined {\n  if (providerOptions?.[provider] == null) {\n    return undefined;\n  }\n\n  const parsedProviderOptions = safeValidateTypes({\n    value: providerOptions[provider],\n    schema,\n  });\n\n  if (!parsedProviderOptions.success) {\n    throw new InvalidArgumentError({\n      argument: 'providerOptions',\n      message: `invalid ${provider} provider options`,\n      cause: parsedProviderOptions.error,\n    });\n  }\n\n  return parsedProviderOptions.value;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParsedType = exports.ZodParsedType = exports.objectUtil = exports.util = void 0;\nvar util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (exports.util = util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (exports.objectUtil = objectUtil = {}));\nexports.ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return exports.ZodParsedType.undefined;\n        case \"string\":\n            return exports.ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\n        case \"boolean\":\n            return exports.ZodParsedType.boolean;\n        case \"function\":\n            return exports.ZodParsedType.function;\n        case \"bigint\":\n            return exports.ZodParsedType.bigint;\n        case \"symbol\":\n            return exports.ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return exports.ZodParsedType.array;\n            }\n            if (data === null) {\n                return exports.ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return exports.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return exports.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return exports.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return exports.ZodParsedType.date;\n            }\n            return exports.ZodParsedType.object;\n        default:\n            return exports.ZodParsedType.unknown;\n    }\n};\nexports.getParsedType = getParsedType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_1 = require(\"./helpers/util\");\nexports.ZodIssueCode = util_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util_1.util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../helpers/util\");\nconst ZodError_1 = require(\"../ZodError\");\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodError_1.ZodIssueCode.invalid_type:\n            if (issue.received === util_1.ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodError_1.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util_1.util.jsonStringifyReplacer)}`;\n            break;\n        case ZodError_1.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_1.util.joinValues(issue.options)}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util_1.util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodError_1.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodError_1.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodError_1.ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util_1.util.assertNever(issue);\n    }\n    return { message };\n};\nexports.default = errorMap;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorMap = exports.setErrorMap = exports.defaultErrorMap = void 0;\nconst en_1 = __importDefault(require(\"./locales/en\"));\nexports.defaultErrorMap = en_1.default;\nlet overrideErrorMap = en_1.default;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexports.setErrorMap = setErrorMap;\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\nexports.getErrorMap = getErrorMap;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\nconst errors_1 = require(\"../errors\");\nconst en_1 = __importDefault(require(\"../locales/en\"));\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexports.makeIssue = makeIssue;\nexports.EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = (0, errors_1.getErrorMap)();\n    const issue = (0, exports.makeIssue)({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === en_1.default ? undefined : en_1.default, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexports.addIssueToContext = addIssueToContext;\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return exports.INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return exports.INVALID;\n            if (value.status === \"aborted\")\n                return exports.INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexports.ParseStatus = ParseStatus;\nexports.INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nexports.DIRTY = DIRTY;\nconst OK = (value) => ({ status: \"valid\", value });\nexports.OK = OK;\nconst isAborted = (x) => x.status === \"aborted\";\nexports.isAborted = isAborted;\nconst isDirty = (x) => x.status === \"dirty\";\nexports.isDirty = isDirty;\nconst isValid = (x) => x.status === \"valid\";\nexports.isValid = isValid;\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\nexports.isAsync = isAsync;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorUtil = void 0;\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (exports.errorUtil = errorUtil = {}));\n", "\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boolean = exports.bigint = exports.array = exports.any = exports.coerce = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.custom = exports.ZodReadonly = exports.ZodPipeline = exports.ZodBranded = exports.BRAND = exports.ZodNaN = exports.ZodCatch = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodSymbol = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.datetimeRegex = exports.ZodType = void 0;\nexports.NEVER = exports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.symbol = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.pipeline = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = exports.intersection = exports.instanceof = exports.function = exports.enum = exports.effect = exports.discriminatedUnion = exports.date = void 0;\nconst errors_1 = require(\"./errors\");\nconst errorUtil_1 = require(\"./helpers/errorUtil\");\nconst parseUtil_1 = require(\"./helpers/parseUtil\");\nconst util_1 = require(\"./helpers/util\");\nconst ZodError_1 = require(\"./ZodError\");\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if ((0, parseUtil_1.isValid)(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError_1.ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return (0, util_1.getParsedType)(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: (0, util_1.getParsedType)(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new parseUtil_1.ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: (0, util_1.getParsedType)(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if ((0, parseUtil_1.isAsync)(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return (0, parseUtil_1.isValid)(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => (0, parseUtil_1.isValid)(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await ((0, parseUtil_1.isAsync)(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodError_1.ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nexports.ZodType = ZodType;\nexports.Schema = ZodType;\nexports.ZodSchema = ZodType;\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nexports.datetimeRegex = datetimeRegex;\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"email\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"emoji\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"uuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ulid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"url\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"regex\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"duration\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ip\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"jwt\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cidr\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"base64\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"base64url\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_1.ZodIssueCode.invalid_string,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil_1.errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil_1.errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil_1.errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil_1.errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodString = ZodString;\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util_1.util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util_1.util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nexports.ZodNumber = ZodNumber;\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        (0, parseUtil_1.addIssueToContext)(ctx, {\n            code: ZodError_1.ZodIssueCode.invalid_type,\n            expected: util_1.ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return parseUtil_1.INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodBigInt = ZodBigInt;\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodBoolean = ZodBoolean;\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_date,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nexports.ZodDate = ZodDate;\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodSymbol = ZodSymbol;\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUndefined = ZodUndefined;\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodNull = ZodNull;\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodAny = ZodAny;\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUnknown = ZodUnknown;\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        (0, parseUtil_1.addIssueToContext)(ctx, {\n            code: ZodError_1.ZodIssueCode.invalid_type,\n            expected: util_1.ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return parseUtil_1.INVALID;\n    }\n}\nexports.ZodNever = ZodNever;\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodVoid = ZodVoid;\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: tooBig ? ZodError_1.ZodIssueCode.too_big : ZodError_1.ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return parseUtil_1.ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodArray = ZodArray;\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util_1.util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return parseUtil_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil_1.errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil_1.errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util_1.util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util_1.util.objectKeys(this.shape));\n    }\n}\nexports.ZodObject = ZodObject;\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError_1.ZodError(result.ctx.common.issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError_1.ZodError(issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nexports.ZodUnion = ZodUnion;\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util_1.util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\nfunction mergeValues(a, b) {\n    const aType = (0, util_1.getParsedType)(a);\n    const bType = (0, util_1.getParsedType)(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === util_1.ZodParsedType.object && bType === util_1.ZodParsedType.object) {\n        const bKeys = util_1.util.objectKeys(b);\n        const sharedKeys = util_1.util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === util_1.ZodParsedType.array && bType === util_1.ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === util_1.ZodParsedType.date &&\n        bType === util_1.ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if ((0, parseUtil_1.isAborted)(parsedLeft) || (0, parseUtil_1.isAborted)(parsedRight)) {\n                return parseUtil_1.INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.invalid_intersection_types,\n                });\n                return parseUtil_1.INVALID;\n            }\n            if ((0, parseUtil_1.isDirty)(parsedLeft) || (0, parseUtil_1.isDirty)(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nexports.ZodIntersection = ZodIntersection;\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return parseUtil_1.INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nexports.ZodTuple = ZodTuple;\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return parseUtil_1.ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexports.ZodRecord = ZodRecord;\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.map) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return parseUtil_1.INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return parseUtil_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nexports.ZodMap = ZodMap;\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.set) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodSet = ZodSet;\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.function) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return (0, parseUtil_1.OK)(async function (...args) {\n                const error = new ZodError_1.ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return (0, parseUtil_1.OK)(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodFunction = ZodFunction;\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nexports.ZodLazy = ZodLazy;\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nexports.ZodLiteral = ZodLiteral;\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\nexports.ZodEnum = ZodEnum;\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util_1.util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.string &&\n            ctx.parsedType !== util_1.ZodParsedType.number) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util_1.util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nexports.ZodNativeEnum = ZodNativeEnum;\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.promise &&\n            ctx.common.async === false) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const promisified = ctx.parsedType === util_1.ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return (0, parseUtil_1.OK)(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nexports.ZodPromise = ZodPromise;\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                (0, parseUtil_1.addIssueToContext)(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (result.status === \"dirty\")\n                        return (0, parseUtil_1.DIRTY)(result.value);\n                    if (status.value === \"dirty\")\n                        return (0, parseUtil_1.DIRTY)(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return parseUtil_1.INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (result.status === \"dirty\")\n                    return (0, parseUtil_1.DIRTY)(result.value);\n                if (status.value === \"dirty\")\n                    return (0, parseUtil_1.DIRTY)(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!(0, parseUtil_1.isValid)(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!(0, parseUtil_1.isValid)(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util_1.util.assertNever(effect);\n    }\n}\nexports.ZodEffects = ZodEffects;\nexports.ZodTransformer = ZodEffects;\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.undefined) {\n            return (0, parseUtil_1.OK)(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodOptional = ZodOptional;\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.null) {\n            return (0, parseUtil_1.OK)(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodNullable = ZodNullable;\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === util_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nexports.ZodDefault = ZodDefault;\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if ((0, parseUtil_1.isAsync)(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError_1.ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError_1.ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nexports.ZodCatch = ZodCatch;\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nexports.ZodNaN = ZodNaN;\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexports.BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexports.ZodBranded = ZodBranded;\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return (0, parseUtil_1.DIRTY)(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return parseUtil_1.INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexports.ZodPipeline = ZodPipeline;\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if ((0, parseUtil_1.isValid)(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return (0, parseUtil_1.isAsync)(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodReadonly = ZodReadonly;\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\"\n        ? params(data)\n        : typeof params === \"string\"\n            ? { message: params }\n            : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nfunction custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    var _a, _b;\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexports.custom = custom;\nexports.late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nexports.instanceof = instanceOfType;\nconst stringType = ZodString.create;\nexports.string = stringType;\nconst numberType = ZodNumber.create;\nexports.number = numberType;\nconst nanType = ZodNaN.create;\nexports.nan = nanType;\nconst bigIntType = ZodBigInt.create;\nexports.bigint = bigIntType;\nconst booleanType = ZodBoolean.create;\nexports.boolean = booleanType;\nconst dateType = ZodDate.create;\nexports.date = dateType;\nconst symbolType = ZodSymbol.create;\nexports.symbol = symbolType;\nconst undefinedType = ZodUndefined.create;\nexports.undefined = undefinedType;\nconst nullType = ZodNull.create;\nexports.null = nullType;\nconst anyType = ZodAny.create;\nexports.any = anyType;\nconst unknownType = ZodUnknown.create;\nexports.unknown = unknownType;\nconst neverType = ZodNever.create;\nexports.never = neverType;\nconst voidType = ZodVoid.create;\nexports.void = voidType;\nconst arrayType = ZodArray.create;\nexports.array = arrayType;\nconst objectType = ZodObject.create;\nexports.object = objectType;\nconst strictObjectType = ZodObject.strictCreate;\nexports.strictObject = strictObjectType;\nconst unionType = ZodUnion.create;\nexports.union = unionType;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nexports.discriminatedUnion = discriminatedUnionType;\nconst intersectionType = ZodIntersection.create;\nexports.intersection = intersectionType;\nconst tupleType = ZodTuple.create;\nexports.tuple = tupleType;\nconst recordType = ZodRecord.create;\nexports.record = recordType;\nconst mapType = ZodMap.create;\nexports.map = mapType;\nconst setType = ZodSet.create;\nexports.set = setType;\nconst functionType = ZodFunction.create;\nexports.function = functionType;\nconst lazyType = ZodLazy.create;\nexports.lazy = lazyType;\nconst literalType = ZodLiteral.create;\nexports.literal = literalType;\nconst enumType = ZodEnum.create;\nexports.enum = enumType;\nconst nativeEnumType = ZodNativeEnum.create;\nexports.nativeEnum = nativeEnumType;\nconst promiseType = ZodPromise.create;\nexports.promise = promiseType;\nconst effectsType = ZodEffects.create;\nexports.effect = effectsType;\nexports.transformer = effectsType;\nconst optionalType = ZodOptional.create;\nexports.optional = optionalType;\nconst nullableType = ZodNullable.create;\nexports.nullable = nullableType;\nconst preprocessType = ZodEffects.createWithPreprocess;\nexports.preprocess = preprocessType;\nconst pipelineType = ZodPipeline.create;\nexports.pipeline = pipelineType;\nconst ostring = () => stringType().optional();\nexports.ostring = ostring;\nconst onumber = () => numberType().optional();\nexports.onumber = onumber;\nconst oboolean = () => booleanType().optional();\nexports.oboolean = oboolean;\nexports.coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexports.NEVER = parseUtil_1.INVALID;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./helpers/parseUtil\"), exports);\n__exportStar(require(\"./helpers/typeAliases\"), exports);\n__exportStar(require(\"./helpers/util\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./ZodError\"), exports);\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.z = void 0;\nconst z = __importStar(require(\"./external\"));\nexports.z = z;\n__exportStar(require(\"./external\"), exports);\nexports.default = z;\n", "export { anthropic, createAnthropic } from './anthropic-provider';\nexport type {\n  AnthropicProvider,\n  AnthropicProviderSettings,\n} from './anthropic-provider';\n", "import {\n  LanguageModelV1,\n  NoSuchModelError,\n  ProviderV1,\n} from '@ai-sdk/provider';\nimport {\n  FetchFunction,\n  loadApiKey,\n  withoutTrailingSlash,\n} from '@ai-sdk/provider-utils';\nimport { AnthropicMessagesLanguageModel } from './anthropic-messages-language-model';\nimport {\n  AnthropicMessagesModelId,\n  AnthropicMessagesSettings,\n} from './anthropic-messages-settings';\nimport { anthropicTools } from './anthropic-tools';\n\nexport interface AnthropicProvider extends ProviderV1 {\n  /**\nCreates a model for text generation.\n*/\n  (\n    modelId: AnthropicMessagesModelId,\n    settings?: AnthropicMessagesSettings,\n  ): LanguageModelV1;\n\n  /**\nCreates a model for text generation.\n*/\n  languageModel(\n    modelId: AnthropicMessagesModelId,\n    settings?: AnthropicMessagesSettings,\n  ): LanguageModelV1;\n\n  /**\n@deprecated Use `.languageModel()` instead.\n*/\n  chat(\n    modelId: AnthropicMessagesModelId,\n    settings?: AnthropicMessagesSettings,\n  ): LanguageModelV1;\n\n  /**\n@deprecated Use `.languageModel()` instead.\n   */\n  messages(\n    modelId: AnthropicMessagesModelId,\n    settings?: AnthropicMessagesSettings,\n  ): LanguageModelV1;\n\n  /**\nAnthropic-specific computer use tool.\n   */\n  tools: typeof anthropicTools;\n}\n\nexport interface AnthropicProviderSettings {\n  /**\nUse a different URL prefix for API calls, e.g. to use proxy servers.\nThe default prefix is `https://api.anthropic.com/v1`.\n   */\n  baseURL?: string;\n\n  /**\nAPI key that is being send using the `x-api-key` header.\nIt defaults to the `ANTHROPIC_API_KEY` environment variable.\n   */\n  apiKey?: string;\n\n  /**\nCustom headers to include in the requests.\n     */\n  headers?: Record<string, string>;\n\n  /**\nCustom fetch implementation. You can use it as a middleware to intercept requests,\nor to provide a custom fetch implementation for e.g. testing.\n    */\n  fetch?: FetchFunction;\n\n  generateId?: () => string;\n}\n\n/**\nCreate an Anthropic provider instance.\n */\nexport function createAnthropic(\n  options: AnthropicProviderSettings = {},\n): AnthropicProvider {\n  const baseURL =\n    withoutTrailingSlash(options.baseURL) ?? 'https://api.anthropic.com/v1';\n\n  const getHeaders = () => ({\n    'anthropic-version': '2023-06-01',\n    'x-api-key': loadApiKey({\n      apiKey: options.apiKey,\n      environmentVariableName: 'ANTHROPIC_API_KEY',\n      description: 'Anthropic',\n    }),\n    ...options.headers,\n  });\n\n  const createChatModel = (\n    modelId: AnthropicMessagesModelId,\n    settings: AnthropicMessagesSettings = {},\n  ) =>\n    new AnthropicMessagesLanguageModel(modelId, settings, {\n      provider: 'anthropic.messages',\n      baseURL,\n      headers: getHeaders,\n      fetch: options.fetch,\n    });\n\n  const provider = function (\n    modelId: AnthropicMessagesModelId,\n    settings?: AnthropicMessagesSettings,\n  ) {\n    if (new.target) {\n      throw new Error(\n        'The Anthropic model function cannot be called with the new keyword.',\n      );\n    }\n\n    return createChatModel(modelId, settings);\n  };\n\n  provider.languageModel = createChatModel;\n  provider.chat = createChatModel;\n  provider.messages = createChatModel;\n  provider.textEmbeddingModel = (modelId: string) => {\n    throw new NoSuchModelError({ modelId, modelType: 'textEmbeddingModel' });\n  };\n\n  provider.tools = anthropicTools;\n\n  return provider;\n}\n\n/**\nDefault Anthropic provider instance.\n */\nexport const anthropic = createAnthropic();\n", "import {\n  InvalidArgumentError,\n  LanguageModelV1,\n  LanguageModelV1CallWarning,\n  LanguageModelV1FinishReason,\n  LanguageModelV1FunctionToolCall,\n  LanguageModelV1ProviderMetadata,\n  LanguageModelV1StreamPart,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport {\n  FetchFunction,\n  ParseResult,\n  Resolvable,\n  combineHeaders,\n  createEventSourceResponseHandler,\n  createJsonResponseHandler,\n  postJsonToApi,\n  resolve,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { anthropicFailedResponseHandler } from './anthropic-error';\nimport {\n  AnthropicMessagesModelId,\n  AnthropicMessagesSettings,\n} from './anthropic-messages-settings';\nimport { prepareTools } from './anthropic-prepare-tools';\nimport { convertToAnthropicMessagesPrompt } from './convert-to-anthropic-messages-prompt';\nimport { mapAnthropicStopReason } from './map-anthropic-stop-reason';\n\ntype AnthropicMessagesConfig = {\n  provider: string;\n  baseURL: string;\n  headers: Resolvable<Record<string, string | undefined>>;\n  fetch?: FetchFunction;\n  buildRequestUrl?: (baseURL: string, isStreaming: boolean) => string;\n  transformRequestBody?: (args: Record<string, any>) => Record<string, any>;\n};\n\nexport class AnthropicMessagesLanguageModel implements LanguageModelV1 {\n  readonly specificationVersion = 'v1';\n  readonly defaultObjectGenerationMode = 'tool';\n  readonly supportsImageUrls = true;\n\n  readonly modelId: AnthropicMessagesModelId;\n  readonly settings: AnthropicMessagesSettings;\n\n  private readonly config: AnthropicMessagesConfig;\n\n  constructor(\n    modelId: AnthropicMessagesModelId,\n    settings: AnthropicMessagesSettings,\n    config: AnthropicMessagesConfig,\n  ) {\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  private async getArgs({\n    mode,\n    prompt,\n    maxTokens = 4096, // 4096: max model output tokens TODO update default in v5\n    temperature,\n    topP,\n    topK,\n    frequencyPenalty,\n    presencePenalty,\n    stopSequences,\n    responseFormat,\n    seed,\n    providerMetadata: providerOptions,\n  }: Parameters<LanguageModelV1['doGenerate']>[0]) {\n    const type = mode.type;\n\n    const warnings: LanguageModelV1CallWarning[] = [];\n\n    if (frequencyPenalty != null) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'frequencyPenalty',\n      });\n    }\n\n    if (presencePenalty != null) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'presencePenalty',\n      });\n    }\n\n    if (seed != null) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'seed',\n      });\n    }\n\n    if (responseFormat != null && responseFormat.type !== 'text') {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'responseFormat',\n        details: 'JSON response format is not supported.',\n      });\n    }\n\n    const { prompt: messagesPrompt, betas: messagesBetas } =\n      convertToAnthropicMessagesPrompt({\n        prompt,\n        sendReasoning: this.settings.sendReasoning ?? true,\n        warnings,\n      });\n\n    const thinkingOptions = thinkingOptionsSchema.safeParse(\n      providerOptions?.anthropic?.thinking,\n    );\n\n    if (!thinkingOptions.success) {\n      throw new InvalidArgumentError({\n        argument: 'providerOptions.anthropic.thinking',\n        message: 'invalid thinking options',\n        cause: thinkingOptions.error,\n      });\n    }\n\n    const isThinking = thinkingOptions.data?.type === 'enabled';\n    const thinkingBudget = thinkingOptions.data?.budgetTokens;\n\n    const baseArgs = {\n      // model id:\n      model: this.modelId,\n\n      // standardized settings:\n      max_tokens: maxTokens,\n      temperature,\n      top_k: topK,\n      top_p: topP,\n      stop_sequences: stopSequences,\n\n      // provider specific settings:\n      ...(isThinking && {\n        thinking: { type: 'enabled', budget_tokens: thinkingBudget },\n      }),\n\n      // prompt:\n      system: messagesPrompt.system,\n      messages: messagesPrompt.messages,\n    };\n\n    if (isThinking) {\n      if (thinkingBudget == null) {\n        throw new UnsupportedFunctionalityError({\n          functionality: 'thinking requires a budget',\n        });\n      }\n\n      if (baseArgs.temperature != null) {\n        baseArgs.temperature = undefined;\n        warnings.push({\n          type: 'unsupported-setting',\n          setting: 'temperature',\n          details: 'temperature is not supported when thinking is enabled',\n        });\n      }\n\n      if (topK != null) {\n        baseArgs.top_k = undefined;\n        warnings.push({\n          type: 'unsupported-setting',\n          setting: 'topK',\n          details: 'topK is not supported when thinking is enabled',\n        });\n      }\n\n      if (topP != null) {\n        baseArgs.top_p = undefined;\n        warnings.push({\n          type: 'unsupported-setting',\n          setting: 'topP',\n          details: 'topP is not supported when thinking is enabled',\n        });\n      }\n\n      // adjust max tokens to account for thinking:\n      baseArgs.max_tokens = maxTokens + thinkingBudget;\n    }\n\n    switch (type) {\n      case 'regular': {\n        const {\n          tools,\n          tool_choice,\n          toolWarnings,\n          betas: toolsBetas,\n        } = prepareTools(mode);\n\n        return {\n          args: { ...baseArgs, tools, tool_choice },\n          warnings: [...warnings, ...toolWarnings],\n          betas: new Set([...messagesBetas, ...toolsBetas]),\n        };\n      }\n\n      case 'object-json': {\n        throw new UnsupportedFunctionalityError({\n          functionality: 'json-mode object generation',\n        });\n      }\n\n      case 'object-tool': {\n        const { name, description, parameters } = mode.tool;\n\n        return {\n          args: {\n            ...baseArgs,\n            tools: [{ name, description, input_schema: parameters }],\n            tool_choice: { type: 'tool', name },\n          },\n          warnings,\n          betas: messagesBetas,\n        };\n      }\n\n      default: {\n        const _exhaustiveCheck: never = type;\n        throw new Error(`Unsupported type: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  private async getHeaders({\n    betas,\n    headers,\n  }: {\n    betas: Set<string>;\n    headers: Record<string, string | undefined> | undefined;\n  }) {\n    return combineHeaders(\n      await resolve(this.config.headers),\n      betas.size > 0 ? { 'anthropic-beta': Array.from(betas).join(',') } : {},\n      headers,\n    );\n  }\n\n  private buildRequestUrl(isStreaming: boolean): string {\n    return (\n      this.config.buildRequestUrl?.(this.config.baseURL, isStreaming) ??\n      `${this.config.baseURL}/messages`\n    );\n  }\n\n  private transformRequestBody(args: Record<string, any>): Record<string, any> {\n    return this.config.transformRequestBody?.(args) ?? args;\n  }\n\n  async doGenerate(\n    options: Parameters<LanguageModelV1['doGenerate']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doGenerate']>>> {\n    const { args, warnings, betas } = await this.getArgs(options);\n\n    const {\n      responseHeaders,\n      value: response,\n      rawValue: rawResponse,\n    } = await postJsonToApi({\n      url: this.buildRequestUrl(false),\n      headers: await this.getHeaders({ betas, headers: options.headers }),\n      body: this.transformRequestBody(args),\n      failedResponseHandler: anthropicFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        anthropicMessagesResponseSchema,\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { messages: rawPrompt, ...rawSettings } = args;\n\n    // extract text\n    let text = '';\n    for (const content of response.content) {\n      if (content.type === 'text') {\n        text += content.text;\n      }\n    }\n\n    // extract tool calls\n    let toolCalls: LanguageModelV1FunctionToolCall[] | undefined = undefined;\n    if (response.content.some(content => content.type === 'tool_use')) {\n      toolCalls = [];\n      for (const content of response.content) {\n        if (content.type === 'tool_use') {\n          toolCalls.push({\n            toolCallType: 'function',\n            toolCallId: content.id,\n            toolName: content.name,\n            args: JSON.stringify(content.input),\n          });\n        }\n      }\n    }\n\n    const reasoning = response.content\n      .filter(\n        content =>\n          content.type === 'redacted_thinking' || content.type === 'thinking',\n      )\n      .map(content =>\n        content.type === 'thinking'\n          ? {\n              type: 'text' as const,\n              text: content.thinking,\n              signature: content.signature,\n            }\n          : {\n              type: 'redacted' as const,\n              data: content.data,\n            },\n      );\n\n    return {\n      text,\n      reasoning: reasoning.length > 0 ? reasoning : undefined,\n      toolCalls,\n      finishReason: mapAnthropicStopReason(response.stop_reason),\n      usage: {\n        promptTokens: response.usage.input_tokens,\n        completionTokens: response.usage.output_tokens,\n      },\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: {\n        headers: responseHeaders,\n        body: rawResponse,\n      },\n      response: {\n        id: response.id ?? undefined,\n        modelId: response.model ?? undefined,\n      },\n      warnings,\n      providerMetadata: {\n        anthropic: {\n          cacheCreationInputTokens:\n            response.usage.cache_creation_input_tokens ?? null,\n          cacheReadInputTokens: response.usage.cache_read_input_tokens ?? null,\n        },\n      },\n      request: { body: JSON.stringify(args) },\n    };\n  }\n\n  async doStream(\n    options: Parameters<LanguageModelV1['doStream']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doStream']>>> {\n    const { args, warnings, betas } = await this.getArgs(options);\n    const body = { ...args, stream: true };\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.buildRequestUrl(true),\n      headers: await this.getHeaders({ betas, headers: options.headers }),\n      body: this.transformRequestBody(body),\n      failedResponseHandler: anthropicFailedResponseHandler,\n      successfulResponseHandler: createEventSourceResponseHandler(\n        anthropicMessagesChunkSchema,\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { messages: rawPrompt, ...rawSettings } = args;\n\n    let finishReason: LanguageModelV1FinishReason = 'unknown';\n    const usage: { promptTokens: number; completionTokens: number } = {\n      promptTokens: Number.NaN,\n      completionTokens: Number.NaN,\n    };\n\n    const toolCallContentBlocks: Record<\n      number,\n      {\n        toolCallId: string;\n        toolName: string;\n        jsonText: string;\n      }\n    > = {};\n\n    let providerMetadata: LanguageModelV1ProviderMetadata | undefined =\n      undefined;\n\n    let blockType:\n      | 'text'\n      | 'thinking'\n      | 'tool_use'\n      | 'redacted_thinking'\n      | undefined = undefined;\n\n    return {\n      stream: response.pipeThrough(\n        new TransformStream<\n          ParseResult<z.infer<typeof anthropicMessagesChunkSchema>>,\n          LanguageModelV1StreamPart\n        >({\n          transform(chunk, controller) {\n            if (!chunk.success) {\n              controller.enqueue({ type: 'error', error: chunk.error });\n              return;\n            }\n\n            const value = chunk.value;\n\n            switch (value.type) {\n              case 'ping': {\n                return; // ignored\n              }\n\n              case 'content_block_start': {\n                const contentBlockType = value.content_block.type;\n\n                blockType = contentBlockType;\n\n                switch (contentBlockType) {\n                  case 'text':\n                  case 'thinking': {\n                    return; // ignored\n                  }\n\n                  case 'redacted_thinking': {\n                    controller.enqueue({\n                      type: 'redacted-reasoning',\n                      data: value.content_block.data,\n                    });\n                    return;\n                  }\n\n                  case 'tool_use': {\n                    toolCallContentBlocks[value.index] = {\n                      toolCallId: value.content_block.id,\n                      toolName: value.content_block.name,\n                      jsonText: '',\n                    };\n                    return;\n                  }\n\n                  default: {\n                    const _exhaustiveCheck: never = contentBlockType;\n                    throw new Error(\n                      `Unsupported content block type: ${_exhaustiveCheck}`,\n                    );\n                  }\n                }\n              }\n\n              case 'content_block_stop': {\n                // when finishing a tool call block, send the full tool call:\n                if (toolCallContentBlocks[value.index] != null) {\n                  const contentBlock = toolCallContentBlocks[value.index];\n\n                  controller.enqueue({\n                    type: 'tool-call',\n                    toolCallType: 'function',\n                    toolCallId: contentBlock.toolCallId,\n                    toolName: contentBlock.toolName,\n                    args: contentBlock.jsonText,\n                  });\n\n                  delete toolCallContentBlocks[value.index];\n                }\n\n                blockType = undefined; // reset block type\n\n                return;\n              }\n\n              case 'content_block_delta': {\n                const deltaType = value.delta.type;\n                switch (deltaType) {\n                  case 'text_delta': {\n                    controller.enqueue({\n                      type: 'text-delta',\n                      textDelta: value.delta.text,\n                    });\n\n                    return;\n                  }\n\n                  case 'thinking_delta': {\n                    controller.enqueue({\n                      type: 'reasoning',\n                      textDelta: value.delta.thinking,\n                    });\n\n                    return;\n                  }\n\n                  case 'signature_delta': {\n                    // signature are only supported on thinking blocks:\n                    if (blockType === 'thinking') {\n                      controller.enqueue({\n                        type: 'reasoning-signature',\n                        signature: value.delta.signature,\n                      });\n                    }\n\n                    return;\n                  }\n\n                  case 'input_json_delta': {\n                    const contentBlock = toolCallContentBlocks[value.index];\n\n                    controller.enqueue({\n                      type: 'tool-call-delta',\n                      toolCallType: 'function',\n                      toolCallId: contentBlock.toolCallId,\n                      toolName: contentBlock.toolName,\n                      argsTextDelta: value.delta.partial_json,\n                    });\n\n                    contentBlock.jsonText += value.delta.partial_json;\n\n                    return;\n                  }\n\n                  default: {\n                    const _exhaustiveCheck: never = deltaType;\n                    throw new Error(\n                      `Unsupported delta type: ${_exhaustiveCheck}`,\n                    );\n                  }\n                }\n              }\n\n              case 'message_start': {\n                usage.promptTokens = value.message.usage.input_tokens;\n                usage.completionTokens = value.message.usage.output_tokens;\n\n                providerMetadata = {\n                  anthropic: {\n                    cacheCreationInputTokens:\n                      value.message.usage.cache_creation_input_tokens ?? null,\n                    cacheReadInputTokens:\n                      value.message.usage.cache_read_input_tokens ?? null,\n                  },\n                };\n\n                controller.enqueue({\n                  type: 'response-metadata',\n                  id: value.message.id ?? undefined,\n                  modelId: value.message.model ?? undefined,\n                });\n\n                return;\n              }\n\n              case 'message_delta': {\n                usage.completionTokens = value.usage.output_tokens;\n                finishReason = mapAnthropicStopReason(value.delta.stop_reason);\n                return;\n              }\n\n              case 'message_stop': {\n                controller.enqueue({\n                  type: 'finish',\n                  finishReason,\n                  usage,\n                  providerMetadata,\n                });\n                return;\n              }\n\n              case 'error': {\n                controller.enqueue({ type: 'error', error: value.error });\n                return;\n              }\n\n              default: {\n                const _exhaustiveCheck: never = value;\n                throw new Error(`Unsupported chunk type: ${_exhaustiveCheck}`);\n              }\n            }\n          },\n        }),\n      ),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      warnings,\n      request: { body: JSON.stringify(body) },\n    };\n  }\n}\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst anthropicMessagesResponseSchema = z.object({\n  type: z.literal('message'),\n  id: z.string().nullish(),\n  model: z.string().nullish(),\n  content: z.array(\n    z.discriminatedUnion('type', [\n      z.object({\n        type: z.literal('text'),\n        text: z.string(),\n      }),\n      z.object({\n        type: z.literal('thinking'),\n        thinking: z.string(),\n        signature: z.string(),\n      }),\n      z.object({\n        type: z.literal('redacted_thinking'),\n        data: z.string(),\n      }),\n      z.object({\n        type: z.literal('tool_use'),\n        id: z.string(),\n        name: z.string(),\n        input: z.unknown(),\n      }),\n    ]),\n  ),\n  stop_reason: z.string().nullish(),\n  usage: z.object({\n    input_tokens: z.number(),\n    output_tokens: z.number(),\n    cache_creation_input_tokens: z.number().nullish(),\n    cache_read_input_tokens: z.number().nullish(),\n  }),\n});\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst anthropicMessagesChunkSchema = z.discriminatedUnion('type', [\n  z.object({\n    type: z.literal('message_start'),\n    message: z.object({\n      id: z.string().nullish(),\n      model: z.string().nullish(),\n      usage: z.object({\n        input_tokens: z.number(),\n        output_tokens: z.number(),\n        cache_creation_input_tokens: z.number().nullish(),\n        cache_read_input_tokens: z.number().nullish(),\n      }),\n    }),\n  }),\n  z.object({\n    type: z.literal('content_block_start'),\n    index: z.number(),\n    content_block: z.discriminatedUnion('type', [\n      z.object({\n        type: z.literal('text'),\n        text: z.string(),\n      }),\n      z.object({\n        type: z.literal('thinking'),\n        thinking: z.string(),\n      }),\n      z.object({\n        type: z.literal('tool_use'),\n        id: z.string(),\n        name: z.string(),\n      }),\n      z.object({\n        type: z.literal('redacted_thinking'),\n        data: z.string(),\n      }),\n    ]),\n  }),\n  z.object({\n    type: z.literal('content_block_delta'),\n    index: z.number(),\n    delta: z.discriminatedUnion('type', [\n      z.object({\n        type: z.literal('input_json_delta'),\n        partial_json: z.string(),\n      }),\n      z.object({\n        type: z.literal('text_delta'),\n        text: z.string(),\n      }),\n      z.object({\n        type: z.literal('thinking_delta'),\n        thinking: z.string(),\n      }),\n      z.object({\n        type: z.literal('signature_delta'),\n        signature: z.string(),\n      }),\n    ]),\n  }),\n  z.object({\n    type: z.literal('content_block_stop'),\n    index: z.number(),\n  }),\n  z.object({\n    type: z.literal('error'),\n    error: z.object({\n      type: z.string(),\n      message: z.string(),\n    }),\n  }),\n  z.object({\n    type: z.literal('message_delta'),\n    delta: z.object({ stop_reason: z.string().nullish() }),\n    usage: z.object({ output_tokens: z.number() }),\n  }),\n  z.object({\n    type: z.literal('message_stop'),\n  }),\n  z.object({\n    type: z.literal('ping'),\n  }),\n]);\n\nconst thinkingOptionsSchema = z\n  .object({\n    type: z.union([z.literal('enabled'), z.literal('disabled')]),\n    budgetTokens: z.number().optional(),\n  })\n  .optional();\n", "import { createJsonErrorResponseHandler } from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\n\nconst anthropicErrorDataSchema = z.object({\n  type: z.literal('error'),\n  error: z.object({\n    type: z.string(),\n    message: z.string(),\n  }),\n});\n\nexport type AnthropicErrorData = z.infer<typeof anthropicErrorDataSchema>;\n\nexport const anthropicFailedResponseHandler = createJsonErrorResponseHandler({\n  errorSchema: anthropicErrorDataSchema,\n  errorToMessage: data => data.error.message,\n});\n", "import {\n  LanguageModelV1,\n  LanguageModelV1CallWarning,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport { AnthropicTool, AnthropicToolChoice } from './anthropic-api-types';\n\nexport function prepareTools(\n  mode: Parameters<LanguageModelV1['doGenerate']>[0]['mode'] & {\n    type: 'regular';\n  },\n): {\n  tools: Array<AnthropicTool> | undefined;\n  tool_choice: AnthropicToolChoice | undefined;\n  toolWarnings: LanguageModelV1CallWarning[];\n  betas: Set<string>;\n} {\n  // when the tools array is empty, change it to undefined to prevent errors:\n  const tools = mode.tools?.length ? mode.tools : undefined;\n\n  const toolWarnings: LanguageModelV1CallWarning[] = [];\n  const betas = new Set<string>();\n\n  if (tools == null) {\n    return { tools: undefined, tool_choice: undefined, toolWarnings, betas };\n  }\n\n  const anthropicTools: AnthropicTool[] = [];\n\n  for (const tool of tools) {\n    switch (tool.type) {\n      case 'function':\n        anthropicTools.push({\n          name: tool.name,\n          description: tool.description,\n          input_schema: tool.parameters,\n        });\n        break;\n      case 'provider-defined':\n        switch (tool.id) {\n          case 'anthropic.computer_20250124':\n            betas.add('computer-use-2025-01-24');\n            anthropicTools.push({\n              name: tool.name,\n              type: 'computer_20250124',\n              display_width_px: tool.args.displayWidthPx as number,\n              display_height_px: tool.args.displayHeightPx as number,\n              display_number: tool.args.displayNumber as number,\n            });\n            break;\n          case 'anthropic.computer_20241022':\n            betas.add('computer-use-2024-10-22');\n            anthropicTools.push({\n              name: tool.name,\n              type: 'computer_20241022',\n              display_width_px: tool.args.displayWidthPx as number,\n              display_height_px: tool.args.displayHeightPx as number,\n              display_number: tool.args.displayNumber as number,\n            });\n            break;\n          case 'anthropic.text_editor_20250124':\n            betas.add('computer-use-2025-01-24');\n            anthropicTools.push({\n              name: tool.name,\n              type: 'text_editor_20250124',\n            });\n            break;\n          case 'anthropic.text_editor_20241022':\n            betas.add('computer-use-2024-10-22');\n            anthropicTools.push({\n              name: tool.name,\n              type: 'text_editor_20241022',\n            });\n            break;\n          case 'anthropic.bash_20250124':\n            betas.add('computer-use-2025-01-24');\n            anthropicTools.push({\n              name: tool.name,\n              type: 'bash_20250124',\n            });\n            break;\n          case 'anthropic.bash_20241022':\n            betas.add('computer-use-2024-10-22');\n            anthropicTools.push({\n              name: tool.name,\n              type: 'bash_20241022',\n            });\n            break;\n          default:\n            toolWarnings.push({ type: 'unsupported-tool', tool });\n            break;\n        }\n        break;\n      default:\n        toolWarnings.push({ type: 'unsupported-tool', tool });\n        break;\n    }\n  }\n\n  const toolChoice = mode.toolChoice;\n\n  if (toolChoice == null) {\n    return {\n      tools: anthropicTools,\n      tool_choice: undefined,\n      toolWarnings,\n      betas,\n    };\n  }\n\n  const type = toolChoice.type;\n\n  switch (type) {\n    case 'auto':\n      return {\n        tools: anthropicTools,\n        tool_choice: { type: 'auto' },\n        toolWarnings,\n        betas,\n      };\n    case 'required':\n      return {\n        tools: anthropicTools,\n        tool_choice: { type: 'any' },\n        toolWarnings,\n        betas,\n      };\n    case 'none':\n      // Anthropic does not support 'none' tool choice, so we remove the tools:\n      return { tools: undefined, tool_choice: undefined, toolWarnings, betas };\n    case 'tool':\n      return {\n        tools: anthropicTools,\n        tool_choice: { type: 'tool', name: toolChoice.toolName },\n        toolWarnings,\n        betas,\n      };\n    default: {\n      const _exhaustiveCheck: never = type;\n      throw new UnsupportedFunctionalityError({\n        functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`,\n      });\n    }\n  }\n}\n", "import {\n  LanguageModelV1CallWarning,\n  LanguageModelV1Message,\n  LanguageModelV1Prompt,\n  LanguageModelV1ProviderMetadata,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport { convertUint8ArrayToBase64 } from '@ai-sdk/provider-utils';\nimport {\n  AnthropicAssistantMessage,\n  AnthropicCacheControl,\n  AnthropicMessagesPrompt,\n  AnthropicUserMessage,\n} from './anthropic-api-types';\n\nexport function convertToAnthropicMessagesPrompt({\n  prompt,\n  sendReasoning,\n  warnings,\n}: {\n  prompt: LanguageModelV1Prompt;\n  sendReasoning: boolean;\n  warnings: LanguageModelV1CallWarning[];\n}): {\n  prompt: AnthropicMessagesPrompt;\n  betas: Set<string>;\n} {\n  const betas = new Set<string>();\n  const blocks = groupIntoBlocks(prompt);\n\n  let system: AnthropicMessagesPrompt['system'] = undefined;\n  const messages: AnthropicMessagesPrompt['messages'] = [];\n\n  function getCacheControl(\n    providerMetadata: LanguageModelV1ProviderMetadata | undefined,\n  ): AnthropicCacheControl | undefined {\n    const anthropic = providerMetadata?.anthropic;\n\n    // allow both cacheControl and cache_control:\n    const cacheControlValue =\n      anthropic?.cacheControl ?? anthropic?.cache_control;\n\n    // Pass through value assuming it is of the correct type.\n    // The Anthropic API will validate the value.\n    return cacheControlValue as AnthropicCacheControl | undefined;\n  }\n\n  for (let i = 0; i < blocks.length; i++) {\n    const block = blocks[i];\n    const isLastBlock = i === blocks.length - 1;\n    const type = block.type;\n\n    switch (type) {\n      case 'system': {\n        if (system != null) {\n          throw new UnsupportedFunctionalityError({\n            functionality:\n              'Multiple system messages that are separated by user/assistant messages',\n          });\n        }\n\n        system = block.messages.map(({ content, providerMetadata }) => ({\n          type: 'text',\n          text: content,\n          cache_control: getCacheControl(providerMetadata),\n        }));\n\n        break;\n      }\n\n      case 'user': {\n        // combines all user and tool messages in this block into a single message:\n        const anthropicContent: AnthropicUserMessage['content'] = [];\n\n        for (const message of block.messages) {\n          const { role, content } = message;\n          switch (role) {\n            case 'user': {\n              for (let j = 0; j < content.length; j++) {\n                const part = content[j];\n\n                // cache control: first add cache control from part.\n                // for the last part of a message,\n                // check also if the message has cache control.\n                const isLastPart = j === content.length - 1;\n\n                const cacheControl =\n                  getCacheControl(part.providerMetadata) ??\n                  (isLastPart\n                    ? getCacheControl(message.providerMetadata)\n                    : undefined);\n\n                switch (part.type) {\n                  case 'text': {\n                    anthropicContent.push({\n                      type: 'text',\n                      text: part.text,\n                      cache_control: cacheControl,\n                    });\n                    break;\n                  }\n\n                  case 'image': {\n                    anthropicContent.push({\n                      type: 'image',\n                      source:\n                        part.image instanceof URL\n                          ? {\n                              type: 'url',\n                              url: part.image.toString(),\n                            }\n                          : {\n                              type: 'base64',\n                              media_type: part.mimeType ?? 'image/jpeg',\n                              data: convertUint8ArrayToBase64(part.image),\n                            },\n                      cache_control: cacheControl,\n                    });\n\n                    break;\n                  }\n\n                  case 'file': {\n                    if (part.data instanceof URL) {\n                      // The AI SDK automatically downloads files for user file parts with URLs\n                      throw new UnsupportedFunctionalityError({\n                        functionality: 'Image URLs in user messages',\n                      });\n                    }\n\n                    if (part.mimeType !== 'application/pdf') {\n                      throw new UnsupportedFunctionalityError({\n                        functionality: 'Non-PDF files in user messages',\n                      });\n                    }\n\n                    betas.add('pdfs-2024-09-25');\n\n                    anthropicContent.push({\n                      type: 'document',\n                      source: {\n                        type: 'base64',\n                        media_type: 'application/pdf',\n                        data: part.data,\n                      },\n                      cache_control: cacheControl,\n                    });\n\n                    break;\n                  }\n                }\n              }\n\n              break;\n            }\n            case 'tool': {\n              for (let i = 0; i < content.length; i++) {\n                const part = content[i];\n\n                // cache control: first add cache control from part.\n                // for the last part of a message,\n                // check also if the message has cache control.\n                const isLastPart = i === content.length - 1;\n\n                const cacheControl =\n                  getCacheControl(part.providerMetadata) ??\n                  (isLastPart\n                    ? getCacheControl(message.providerMetadata)\n                    : undefined);\n\n                const toolResultContent =\n                  part.content != null\n                    ? part.content.map(part => {\n                        switch (part.type) {\n                          case 'text':\n                            return {\n                              type: 'text' as const,\n                              text: part.text,\n                              cache_control: undefined,\n                            };\n                          case 'image':\n                            return {\n                              type: 'image' as const,\n                              source: {\n                                type: 'base64' as const,\n                                media_type: part.mimeType ?? 'image/jpeg',\n                                data: part.data,\n                              },\n                              cache_control: undefined,\n                            };\n                        }\n                      })\n                    : JSON.stringify(part.result);\n\n                anthropicContent.push({\n                  type: 'tool_result',\n                  tool_use_id: part.toolCallId,\n                  content: toolResultContent,\n                  is_error: part.isError,\n                  cache_control: cacheControl,\n                });\n              }\n\n              break;\n            }\n            default: {\n              const _exhaustiveCheck: never = role;\n              throw new Error(`Unsupported role: ${_exhaustiveCheck}`);\n            }\n          }\n        }\n\n        messages.push({ role: 'user', content: anthropicContent });\n\n        break;\n      }\n\n      case 'assistant': {\n        // combines multiple assistant messages in this block into a single message:\n        const anthropicContent: AnthropicAssistantMessage['content'] = [];\n\n        for (let j = 0; j < block.messages.length; j++) {\n          const message = block.messages[j];\n          const isLastMessage = j === block.messages.length - 1;\n          const { content } = message;\n\n          for (let k = 0; k < content.length; k++) {\n            const part = content[k];\n            const isLastContentPart = k === content.length - 1;\n\n            // cache control: first add cache control from part.\n            // for the last part of a message,\n            // check also if the message has cache control.\n            const cacheControl =\n              getCacheControl(part.providerMetadata) ??\n              (isLastContentPart\n                ? getCacheControl(message.providerMetadata)\n                : undefined);\n\n            switch (part.type) {\n              case 'text': {\n                anthropicContent.push({\n                  type: 'text',\n                  text:\n                    // trim the last text part if it's the last message in the block\n                    // because Anthropic does not allow trailing whitespace\n                    // in pre-filled assistant responses\n                    isLastBlock && isLastMessage && isLastContentPart\n                      ? part.text.trim()\n                      : part.text,\n\n                  cache_control: cacheControl,\n                });\n                break;\n              }\n\n              case 'reasoning': {\n                if (sendReasoning) {\n                  anthropicContent.push({\n                    type: 'thinking',\n                    thinking: part.text,\n                    signature: part.signature!,\n                    cache_control: cacheControl,\n                  });\n                } else {\n                  warnings.push({\n                    type: 'other',\n                    message:\n                      'sending reasoning content is disabled for this model',\n                  });\n                }\n                break;\n              }\n\n              case 'redacted-reasoning': {\n                anthropicContent.push({\n                  type: 'redacted_thinking',\n                  data: part.data,\n                  cache_control: cacheControl,\n                });\n                break;\n              }\n\n              case 'tool-call': {\n                anthropicContent.push({\n                  type: 'tool_use',\n                  id: part.toolCallId,\n                  name: part.toolName,\n                  input: part.args,\n                  cache_control: cacheControl,\n                });\n                break;\n              }\n            }\n          }\n        }\n\n        messages.push({ role: 'assistant', content: anthropicContent });\n\n        break;\n      }\n\n      default: {\n        const _exhaustiveCheck: never = type;\n        throw new Error(`Unsupported type: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  return {\n    prompt: { system, messages },\n    betas,\n  };\n}\n\ntype SystemBlock = {\n  type: 'system';\n  messages: Array<LanguageModelV1Message & { role: 'system' }>;\n};\ntype AssistantBlock = {\n  type: 'assistant';\n  messages: Array<LanguageModelV1Message & { role: 'assistant' }>;\n};\ntype UserBlock = {\n  type: 'user';\n  messages: Array<LanguageModelV1Message & { role: 'user' | 'tool' }>;\n};\n\nfunction groupIntoBlocks(\n  prompt: LanguageModelV1Prompt,\n): Array<SystemBlock | AssistantBlock | UserBlock> {\n  const blocks: Array<SystemBlock | AssistantBlock | UserBlock> = [];\n  let currentBlock: SystemBlock | AssistantBlock | UserBlock | undefined =\n    undefined;\n\n  for (const message of prompt) {\n    const { role } = message;\n    switch (role) {\n      case 'system': {\n        if (currentBlock?.type !== 'system') {\n          currentBlock = { type: 'system', messages: [] };\n          blocks.push(currentBlock);\n        }\n\n        currentBlock.messages.push(message);\n        break;\n      }\n      case 'assistant': {\n        if (currentBlock?.type !== 'assistant') {\n          currentBlock = { type: 'assistant', messages: [] };\n          blocks.push(currentBlock);\n        }\n\n        currentBlock.messages.push(message);\n        break;\n      }\n      case 'user': {\n        if (currentBlock?.type !== 'user') {\n          currentBlock = { type: 'user', messages: [] };\n          blocks.push(currentBlock);\n        }\n\n        currentBlock.messages.push(message);\n        break;\n      }\n      case 'tool': {\n        if (currentBlock?.type !== 'user') {\n          currentBlock = { type: 'user', messages: [] };\n          blocks.push(currentBlock);\n        }\n\n        currentBlock.messages.push(message);\n        break;\n      }\n      default: {\n        const _exhaustiveCheck: never = role;\n        throw new Error(`Unsupported role: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  return blocks;\n}\n", "import { LanguageModelV1FinishReason } from '@ai-sdk/provider';\n\nexport function mapAnthropicStopReason(\n  finishReason: string | null | undefined,\n): LanguageModelV1FinishReason {\n  switch (finishReason) {\n    case 'end_turn':\n    case 'stop_sequence':\n      return 'stop';\n    case 'tool_use':\n      return 'tool-calls';\n    case 'max_tokens':\n      return 'length';\n    default:\n      return 'unknown';\n  }\n}\n", "import { z } from 'zod';\n\n// Copied from ai package\ntype ExecuteFunction<PARAMETERS, RESULT> =\n  | undefined\n  | ((\n      args: PARAMETERS,\n      options: { abortSignal?: AbortSignal },\n    ) => Promise<RESULT>);\n\n// Copied from ai package\nexport type ToolResultContent = Array<\n  | {\n      type: 'text';\n      text: string;\n    }\n  | {\n      type: 'image';\n      data: string; // base64 encoded png image, e.g. screenshot\n      mimeType?: string; // e.g. 'image/png';\n    }\n>;\n\nconst Bash20241022Parameters = z.object({\n  command: z.string(),\n  restart: z.boolean().optional(),\n});\n\n/**\n * Creates a tool for running a bash command. Must have name \"bash\".\n *\n * Image results are supported.\n *\n * @param execute - The function to execute the tool. Optional.\n */\nfunction bashTool_20241022<RESULT>(\n  options: {\n    execute?: ExecuteFunction<\n      {\n        /**\n         * The bash command to run. Required unless the tool is being restarted.\n         */\n        command: string;\n\n        /**\n         * Specifying true will restart this tool. Otherwise, leave this unspecified.\n         */\n        restart?: boolean;\n      },\n      RESULT\n    >;\n    experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n  } = {},\n): {\n  type: 'provider-defined';\n  id: 'anthropic.bash_20241022';\n  args: {};\n  parameters: typeof Bash20241022Parameters;\n  execute: ExecuteFunction<z.infer<typeof Bash20241022Parameters>, RESULT>;\n  experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n} {\n  return {\n    type: 'provider-defined',\n    id: 'anthropic.bash_20241022',\n    args: {},\n    parameters: Bash20241022Parameters,\n    execute: options.execute,\n    experimental_toToolResultContent: options.experimental_toToolResultContent,\n  };\n}\n\nconst Bash20250124Parameters = z.object({\n  command: z.string(),\n  restart: z.boolean().optional(),\n});\n\n/**\n * Creates a tool for running a bash command. Must have name \"bash\".\n *\n * Image results are supported.\n *\n * @param execute - The function to execute the tool. Optional.\n */\nfunction bashTool_20250124<RESULT>(\n  options: {\n    execute?: ExecuteFunction<\n      {\n        /**\n         * The bash command to run. Required unless the tool is being restarted.\n         */\n        command: string;\n\n        /**\n         * Specifying true will restart this tool. Otherwise, leave this unspecified.\n         */\n        restart?: boolean;\n      },\n      RESULT\n    >;\n    experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n  } = {},\n): {\n  type: 'provider-defined';\n  id: 'anthropic.bash_20250124';\n  args: {};\n  parameters: typeof Bash20250124Parameters;\n  execute: ExecuteFunction<z.infer<typeof Bash20250124Parameters>, RESULT>;\n  experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n} {\n  return {\n    type: 'provider-defined',\n    id: 'anthropic.bash_20250124',\n    args: {},\n    parameters: Bash20250124Parameters,\n    execute: options.execute,\n    experimental_toToolResultContent: options.experimental_toToolResultContent,\n  };\n}\n\nconst TextEditor20241022Parameters = z.object({\n  command: z.enum(['view', 'create', 'str_replace', 'insert', 'undo_edit']),\n  path: z.string(),\n  file_text: z.string().optional(),\n  insert_line: z.number().int().optional(),\n  new_str: z.string().optional(),\n  old_str: z.string().optional(),\n  view_range: z.array(z.number().int()).optional(),\n});\n\n/**\n * Creates a tool for editing text. Must have name \"str_replace_editor\".\n *\n * Image results are supported.\n *\n * @param execute - The function to execute the tool. Optional.\n */\nfunction textEditorTool_20241022<RESULT>(\n  options: {\n    execute?: ExecuteFunction<\n      {\n        /**\n         * The commands to run. Allowed options are: `view`, `create`, `str_replace`, `insert`, `undo_edit`.\n         */\n        command: 'view' | 'create' | 'str_replace' | 'insert' | 'undo_edit';\n\n        /**\n         * Absolute path to file or directory, e.g. `/repo/file.py` or `/repo`.\n         */\n        path: string;\n\n        /**\n         * Required parameter of `create` command, with the content of the file to be created.\n         */\n        file_text?: string;\n\n        /**\n         * Required parameter of `insert` command. The `new_str` will be inserted AFTER the line `insert_line` of `path`.\n         */\n        insert_line?: number;\n\n        /**\n         * Optional parameter of `str_replace` command containing the new string (if not given, no string will be added). Required parameter of `insert` command containing the string to insert.\n         */\n        new_str?: string;\n\n        /**\n         * Required parameter of `str_replace` command containing the string in `path` to replace.\n         */\n        old_str?: string;\n\n        /**\n         * Optional parameter of `view` command when `path` points to a file. If none is given, the full file is shown. If provided, the file will be shown in the indicated line number range, e.g. [11, 12] will show lines 11 and 12. Indexing at 1 to start. Setting `[start_line, -1]` shows all lines from `start_line` to the end of the file.\n         */\n        view_range?: number[];\n      },\n      RESULT\n    >;\n    experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n  } = {},\n): {\n  type: 'provider-defined';\n  id: 'anthropic.text_editor_20241022';\n  args: {};\n  parameters: typeof TextEditor20241022Parameters;\n  execute: ExecuteFunction<\n    z.infer<typeof TextEditor20241022Parameters>,\n    RESULT\n  >;\n  experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n} {\n  return {\n    type: 'provider-defined',\n    id: 'anthropic.text_editor_20241022',\n    args: {},\n    parameters: TextEditor20241022Parameters,\n    execute: options.execute,\n    experimental_toToolResultContent: options.experimental_toToolResultContent,\n  };\n}\n\nconst TextEditor20250124Parameters = z.object({\n  command: z.enum(['view', 'create', 'str_replace', 'insert', 'undo_edit']),\n  path: z.string(),\n  file_text: z.string().optional(),\n  insert_line: z.number().int().optional(),\n  new_str: z.string().optional(),\n  old_str: z.string().optional(),\n  view_range: z.array(z.number().int()).optional(),\n});\n\n/**\n * Creates a tool for editing text. Must have name \"str_replace_editor\".\n *\n * Image results are supported.\n *\n * @param execute - The function to execute the tool. Optional.\n */\nfunction textEditorTool_20250124<RESULT>(\n  options: {\n    execute?: ExecuteFunction<\n      {\n        /**\n         * The commands to run. Allowed options are: `view`, `create`, `str_replace`, `insert`, `undo_edit`.\n         */\n        command: 'view' | 'create' | 'str_replace' | 'insert' | 'undo_edit';\n\n        /**\n         * Absolute path to file or directory, e.g. `/repo/file.py` or `/repo`.\n         */\n        path: string;\n\n        /**\n         * Required parameter of `create` command, with the content of the file to be created.\n         */\n        file_text?: string;\n\n        /**\n         * Required parameter of `insert` command. The `new_str` will be inserted AFTER the line `insert_line` of `path`.\n         */\n        insert_line?: number;\n\n        /**\n         * Optional parameter of `str_replace` command containing the new string (if not given, no string will be added). Required parameter of `insert` command containing the string to insert.\n         */\n        new_str?: string;\n\n        /**\n         * Required parameter of `str_replace` command containing the string in `path` to replace.\n         */\n        old_str?: string;\n\n        /**\n         * Optional parameter of `view` command when `path` points to a file. If none is given, the full file is shown. If provided, the file will be shown in the indicated line number range, e.g. [11, 12] will show lines 11 and 12. Indexing at 1 to start. Setting `[start_line, -1]` shows all lines from `start_line` to the end of the file.\n         */\n        view_range?: number[];\n      },\n      RESULT\n    >;\n    experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n  } = {},\n): {\n  type: 'provider-defined';\n  id: 'anthropic.text_editor_20250124';\n  args: {};\n  parameters: typeof TextEditor20250124Parameters;\n  execute: ExecuteFunction<\n    z.infer<typeof TextEditor20250124Parameters>,\n    RESULT\n  >;\n  experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n} {\n  return {\n    type: 'provider-defined',\n    id: 'anthropic.text_editor_20250124',\n    args: {},\n    parameters: TextEditor20250124Parameters,\n    execute: options.execute,\n    experimental_toToolResultContent: options.experimental_toToolResultContent,\n  };\n}\n\nconst Computer20241022Parameters = z.object({\n  action: z.enum([\n    'key',\n    'type',\n    'mouse_move',\n    'left_click',\n    'left_click_drag',\n    'right_click',\n    'middle_click',\n    'double_click',\n    'screenshot',\n    'cursor_position',\n  ]),\n  coordinate: z.array(z.number().int()).optional(),\n  text: z.string().optional(),\n});\n\n/**\n * Creates a tool for executing actions on a computer. Must have name \"computer\".\n *\n * Image results are supported.\n *\n * @param displayWidthPx - The width of the display being controlled by the model in pixels.\n * @param displayHeightPx - The height of the display being controlled by the model in pixels.\n * @param displayNumber - The display number to control (only relevant for X11 environments). If specified, the tool will be provided a display number in the tool definition.\n * @param execute - The function to execute the tool. Optional.\n */\nfunction computerTool_20241022<RESULT>(options: {\n  displayWidthPx: number;\n  displayHeightPx: number;\n  displayNumber?: number;\n  execute?: ExecuteFunction<\n    {\n      /**\n       * The action to perform. The available actions are:\n       * - `key`: Press a key or key-combination on the keyboard.\n       *   - This supports xdotool's `key` syntax.\n       *   - Examples: \"a\", \"Return\", \"alt+Tab\", \"ctrl+s\", \"Up\", \"KP_0\" (for the numpad 0 key).\n       * - `type`: Type a string of text on the keyboard.\n       * - `cursor_position`: Get the current (x, y) pixel coordinate of the cursor on the screen.\n       * - `mouse_move`: Move the cursor to a specified (x, y) pixel coordinate on the screen.\n       * - `left_click`: Click the left mouse button.\n       * - `left_click_drag`: Click and drag the cursor to a specified (x, y) pixel coordinate on the screen.\n       * - `right_click`: Click the right mouse button.\n       * - `middle_click`: Click the middle mouse button.\n       * - `double_click`: Double-click the left mouse button.\n       * - `screenshot`: Take a screenshot of the screen.\n       */\n      action:\n        | 'key'\n        | 'type'\n        | 'mouse_move'\n        | 'left_click'\n        | 'left_click_drag'\n        | 'right_click'\n        | 'middle_click'\n        | 'double_click'\n        | 'screenshot'\n        | 'cursor_position';\n\n      /**\n       * (x, y): The x (pixels from the left edge) and y (pixels from the top edge) coordinates to move the mouse to. Required only by `action=mouse_move` and `action=left_click_drag`.\n       */\n      coordinate?: number[];\n\n      /**\n       * Required only by `action=type` and `action=key`.\n       */\n      text?: string;\n    },\n    RESULT\n  >;\n  experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n}): {\n  type: 'provider-defined';\n  id: 'anthropic.computer_20241022';\n  args: {};\n  parameters: typeof Computer20241022Parameters;\n  execute: ExecuteFunction<z.infer<typeof Computer20241022Parameters>, RESULT>;\n  experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n} {\n  return {\n    type: 'provider-defined',\n    id: 'anthropic.computer_20241022',\n    args: {\n      displayWidthPx: options.displayWidthPx,\n      displayHeightPx: options.displayHeightPx,\n      displayNumber: options.displayNumber,\n    },\n    parameters: Computer20241022Parameters,\n    execute: options.execute,\n    experimental_toToolResultContent: options.experimental_toToolResultContent,\n  };\n}\n\nconst Computer20250124Parameters = z.object({\n  action: z.enum([\n    'key',\n    'hold_key',\n    'type',\n    'cursor_position',\n    'mouse_move',\n    'left_mouse_down',\n    'left_mouse_up',\n    'left_click',\n    'left_click_drag',\n    'right_click',\n    'middle_click',\n    'double_click',\n    'triple_click',\n    'scroll',\n    'wait',\n    'screenshot',\n  ]),\n  coordinate: z.tuple([z.number().int(), z.number().int()]).optional(),\n  duration: z.number().optional(),\n  scroll_amount: z.number().optional(),\n  scroll_direction: z.enum(['up', 'down', 'left', 'right']).optional(),\n  start_coordinate: z.tuple([z.number().int(), z.number().int()]).optional(),\n  text: z.string().optional(),\n});\n\n/**\n * Creates a tool for executing actions on a computer. Must have name \"computer\".\n *\n * Image results are supported.\n *\n * @param displayWidthPx - The width of the display being controlled by the model in pixels.\n * @param displayHeightPx - The height of the display being controlled by the model in pixels.\n * @param displayNumber - The display number to control (only relevant for X11 environments). If specified, the tool will be provided a display number in the tool definition.\n * @param execute - The function to execute the tool. Optional.\n */\nfunction computerTool_20250124<RESULT>(options: {\n  displayWidthPx: number;\n  displayHeightPx: number;\n  displayNumber?: number;\n  execute?: ExecuteFunction<\n    {\n      /**\n       * - `key`: Press a key or key-combination on the keyboard.\n       *   - This supports xdotool's `key` syntax.\n       *   - Examples: \"a\", \"Return\", \"alt+Tab\", \"ctrl+s\", \"Up\", \"KP_0\" (for the numpad 0 key).\n       * - `hold_key`: Hold down a key or multiple keys for a specified duration (in seconds). Supports the same syntax as `key`.\n       * - `type`: Type a string of text on the keyboard.\n       * - `cursor_position`: Get the current (x, y) pixel coordinate of the cursor on the screen.\n       * - `mouse_move`: Move the cursor to a specified (x, y) pixel coordinate on the screen.\n       * - `left_mouse_down`: Press the left mouse button.\n       * - `left_mouse_up`: Release the left mouse button.\n       * - `left_click`: Click the left mouse button at the specified (x, y) pixel coordinate on the screen. You can also include a key combination to hold down while clicking using the `text` parameter.\n       * - `left_click_drag`: Click and drag the cursor from `start_coordinate` to a specified (x, y) pixel coordinate on the screen.\n       * - `right_click`: Click the right mouse button at the specified (x, y) pixel coordinate on the screen.\n       * - `middle_click`: Click the middle mouse button at the specified (x, y) pixel coordinate on the screen.\n       * - `double_click`: Double-click the left mouse button at the specified (x, y) pixel coordinate on the screen.\n       * - `triple_click`: Triple-click the left mouse button at the specified (x, y) pixel coordinate on the screen.\n       * - `scroll`: Scroll the screen in a specified direction by a specified amount of clicks of the scroll wheel, at the specified (x, y) pixel coordinate. DO NOT use PageUp/PageDown to scroll.\n       * - `wait`: Wait for a specified duration (in seconds).\n       * - `screenshot`: Take a screenshot of the screen.\n       */\n      action:\n        | 'key'\n        | 'hold_key'\n        | 'type'\n        | 'cursor_position'\n        | 'mouse_move'\n        | 'left_mouse_down'\n        | 'left_mouse_up'\n        | 'left_click'\n        | 'left_click_drag'\n        | 'right_click'\n        | 'middle_click'\n        | 'double_click'\n        | 'triple_click'\n        | 'scroll'\n        | 'wait'\n        | 'screenshot';\n\n      /**\n       * (x, y): The x (pixels from the left edge) and y (pixels from the top edge) coordinates to move the mouse to. Required only by `action=mouse_move` and `action=left_click_drag`.\n       */\n      coordinate?: [number, number];\n\n      /**\n       * The duration to hold the key down for. Required only by `action=hold_key` and `action=wait`.\n       */\n      duration?: number;\n\n      /**\n       * The number of 'clicks' to scroll. Required only by `action=scroll`.\n       */\n      scroll_amount?: number;\n\n      /**\n       * The direction to scroll the screen. Required only by `action=scroll`.\n       */\n      scroll_direction?: 'up' | 'down' | 'left' | 'right';\n\n      /**\n       * (x, y): The x (pixels from the left edge) and y (pixels from the top edge) coordinates to start the drag from. Required only by `action=left_click_drag`.\n       */\n      start_coordinate?: [number, number];\n\n      /**\n       * Required only by `action=type`, `action=key`, and `action=hold_key`. Can also be used by click or scroll actions to hold down keys while clicking or scrolling.\n       */\n      text?: string;\n    },\n    RESULT\n  >;\n  experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n}): {\n  type: 'provider-defined';\n  id: 'anthropic.computer_20250124';\n  args: {};\n  parameters: typeof Computer20250124Parameters;\n  execute: ExecuteFunction<z.infer<typeof Computer20250124Parameters>, RESULT>;\n  experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n} {\n  return {\n    type: 'provider-defined',\n    id: 'anthropic.computer_20250124',\n    args: {\n      displayWidthPx: options.displayWidthPx,\n      displayHeightPx: options.displayHeightPx,\n      displayNumber: options.displayNumber,\n    },\n    parameters: Computer20250124Parameters,\n    execute: options.execute,\n    experimental_toToolResultContent: options.experimental_toToolResultContent,\n  };\n}\n\nexport const anthropicTools = {\n  bash_20241022: bashTool_20241022,\n  bash_20250124: bashTool_20250124,\n  textEditor_20241022: textEditorTool_20241022,\n  textEditor_20250124: textEditorTool_20250124,\n  computer_20241022: computerTool_20241022,\n  computer_20250124: computerTool_20250124,\n};\n", "export { createGoogleGenerativeAI, google } from './google-provider';\nexport type { GoogleErrorData } from './google-error';\nexport type { GoogleGenerativeAIProviderMetadata } from './google-generative-ai-prompt';\nexport type {\n  GoogleGenerativeAIProvider,\n  GoogleGenerativeAIProviderSettings,\n} from './google-provider';\n", "import {\n  FetchFunction,\n  generateId,\n  loadApiKey,\n  withoutTrailingSlash,\n} from '@ai-sdk/provider-utils';\nimport { GoogleGenerativeAILanguageModel } from './google-generative-ai-language-model';\nimport {\n  GoogleGenerativeAIModelId,\n  GoogleGenerativeAISettings,\n} from './google-generative-ai-settings';\nimport { GoogleGenerativeAIEmbeddingModel } from './google-generative-ai-embedding-model';\nimport {\n  GoogleGenerativeAIEmbeddingModelId,\n  GoogleGenerativeAIEmbeddingSettings,\n} from './google-generative-ai-embedding-settings';\nimport {\n  EmbeddingModelV1,\n  LanguageModelV1,\n  ProviderV1,\n} from '@ai-sdk/provider';\nimport { isSupportedFileUrl } from './google-supported-file-url';\n\nexport interface GoogleGenerativeAIProvider extends ProviderV1 {\n  (\n    modelId: GoogleGenerativeAIModelId,\n    settings?: GoogleGenerativeAISettings,\n  ): LanguageModelV1;\n\n  languageModel(\n    modelId: GoogleGenerativeAIModelId,\n    settings?: GoogleGenerativeAISettings,\n  ): LanguageModelV1;\n\n  chat(\n    modelId: GoogleGenerativeAIModelId,\n    settings?: GoogleGenerativeAISettings,\n  ): LanguageModelV1;\n\n  /**\n   * @deprecated Use `chat()` instead.\n   */\n  generativeAI(\n    modelId: GoogleGenerativeAIModelId,\n    settings?: GoogleGenerativeAISettings,\n  ): LanguageModelV1;\n\n  /**\n@deprecated Use `textEmbeddingModel()` instead.\n   */\n  embedding(\n    modelId: GoogleGenerativeAIEmbeddingModelId,\n    settings?: GoogleGenerativeAIEmbeddingSettings,\n  ): EmbeddingModelV1<string>;\n\n  /**\n@deprecated Use `textEmbeddingModel()` instead.\n */\n  textEmbedding(\n    modelId: GoogleGenerativeAIEmbeddingModelId,\n    settings?: GoogleGenerativeAIEmbeddingSettings,\n  ): EmbeddingModelV1<string>;\n\n  textEmbeddingModel(\n    modelId: GoogleGenerativeAIEmbeddingModelId,\n    settings?: GoogleGenerativeAIEmbeddingSettings,\n  ): EmbeddingModelV1<string>;\n}\n\nexport interface GoogleGenerativeAIProviderSettings {\n  /**\nUse a different URL prefix for API calls, e.g. to use proxy servers.\nThe default prefix is `https://generativelanguage.googleapis.com/v1beta`.\n   */\n  baseURL?: string;\n\n  /**\nAPI key that is being send using the `x-goog-api-key` header.\nIt defaults to the `GOOGLE_GENERATIVE_AI_API_KEY` environment variable.\n   */\n  apiKey?: string;\n\n  /**\nCustom headers to include in the requests.\n     */\n  headers?: Record<string, string | undefined>;\n\n  /**\nCustom fetch implementation. You can use it as a middleware to intercept requests,\nor to provide a custom fetch implementation for e.g. testing.\n    */\n  fetch?: FetchFunction;\n\n  /**\nOptional function to generate a unique ID for each request.\n     */\n  generateId?: () => string;\n}\n\n/**\nCreate a Google Generative AI provider instance.\n */\nexport function createGoogleGenerativeAI(\n  options: GoogleGenerativeAIProviderSettings = {},\n): GoogleGenerativeAIProvider {\n  const baseURL =\n    withoutTrailingSlash(options.baseURL) ??\n    'https://generativelanguage.googleapis.com/v1beta';\n\n  const getHeaders = () => ({\n    'x-goog-api-key': loadApiKey({\n      apiKey: options.apiKey,\n      environmentVariableName: 'GOOGLE_GENERATIVE_AI_API_KEY',\n      description: 'Google Generative AI',\n    }),\n    ...options.headers,\n  });\n\n  const createChatModel = (\n    modelId: GoogleGenerativeAIModelId,\n    settings: GoogleGenerativeAISettings = {},\n  ) =>\n    new GoogleGenerativeAILanguageModel(modelId, settings, {\n      provider: 'google.generative-ai',\n      baseURL,\n      headers: getHeaders,\n      generateId: options.generateId ?? generateId,\n      isSupportedUrl: isSupportedFileUrl,\n      fetch: options.fetch,\n    });\n\n  const createEmbeddingModel = (\n    modelId: GoogleGenerativeAIEmbeddingModelId,\n    settings: GoogleGenerativeAIEmbeddingSettings = {},\n  ) =>\n    new GoogleGenerativeAIEmbeddingModel(modelId, settings, {\n      provider: 'google.generative-ai',\n      baseURL,\n      headers: getHeaders,\n      fetch: options.fetch,\n    });\n\n  const provider = function (\n    modelId: GoogleGenerativeAIModelId,\n    settings?: GoogleGenerativeAISettings,\n  ) {\n    if (new.target) {\n      throw new Error(\n        'The Google Generative AI model function cannot be called with the new keyword.',\n      );\n    }\n\n    return createChatModel(modelId, settings);\n  };\n\n  provider.languageModel = createChatModel;\n  provider.chat = createChatModel;\n  provider.generativeAI = createChatModel;\n  provider.embedding = createEmbeddingModel;\n  provider.textEmbedding = createEmbeddingModel;\n  provider.textEmbeddingModel = createEmbeddingModel;\n\n  return provider;\n}\n\n/**\nDefault Google Generative AI provider instance.\n */\nexport const google = createGoogleGenerativeAI();\n", "import {\n  LanguageModelV1,\n  LanguageModelV1CallWarning,\n  LanguageModelV1FinishReason,\n  LanguageModelV1ProviderMetadata,\n  LanguageModelV1Source,\n  LanguageModelV1StreamPart,\n} from '@ai-sdk/provider';\nimport {\n  FetchFunction,\n  ParseResult,\n  Resolvable,\n  combineHeaders,\n  createEventSourceResponseHandler,\n  createJsonResponseHandler,\n  parseProviderOptions,\n  postJsonToApi,\n  resolve,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { convertJSONSchemaToOpenAPISchema } from './convert-json-schema-to-openapi-schema';\nimport { convertToGoogleGenerativeAIMessages } from './convert-to-google-generative-ai-messages';\nimport { getModelPath } from './get-model-path';\nimport { googleFailedResponseHandler } from './google-error';\nimport { GoogleGenerativeAIContentPart } from './google-generative-ai-prompt';\nimport {\n  GoogleGenerativeAIModelId,\n  InternalGoogleGenerativeAISettings,\n} from './google-generative-ai-settings';\nimport { prepareTools } from './google-prepare-tools';\nimport { mapGoogleGenerativeAIFinishReason } from './map-google-generative-ai-finish-reason';\n\ntype GoogleGenerativeAIConfig = {\n  provider: string;\n  baseURL: string;\n  headers: Resolvable<Record<string, string | undefined>>;\n  fetch?: FetchFunction;\n  generateId: () => string;\n  isSupportedUrl: (url: URL) => boolean;\n};\n\nexport class GoogleGenerativeAILanguageModel implements LanguageModelV1 {\n  readonly specificationVersion = 'v1';\n  readonly defaultObjectGenerationMode = 'json';\n  readonly supportsImageUrls = false;\n\n  get supportsStructuredOutputs() {\n    return this.settings.structuredOutputs ?? true;\n  }\n\n  readonly modelId: GoogleGenerativeAIModelId;\n  readonly settings: InternalGoogleGenerativeAISettings;\n\n  private readonly config: GoogleGenerativeAIConfig;\n\n  constructor(\n    modelId: GoogleGenerativeAIModelId,\n    settings: InternalGoogleGenerativeAISettings,\n    config: GoogleGenerativeAIConfig,\n  ) {\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  private async getArgs({\n    mode,\n    prompt,\n    maxTokens,\n    temperature,\n    topP,\n    topK,\n    frequencyPenalty,\n    presencePenalty,\n    stopSequences,\n    responseFormat,\n    seed,\n    providerMetadata,\n  }: Parameters<LanguageModelV1['doGenerate']>[0]) {\n    const type = mode.type;\n\n    const warnings: LanguageModelV1CallWarning[] = [];\n\n    const googleOptions = parseProviderOptions({\n      provider: 'google',\n      providerOptions: providerMetadata,\n      schema: z.object({\n        responseModalities: z.array(z.enum(['TEXT', 'IMAGE'])).nullish(),\n      }),\n    });\n\n    const generationConfig = {\n      // standardized settings:\n      maxOutputTokens: maxTokens,\n      temperature,\n      topK,\n      topP,\n      frequencyPenalty,\n      presencePenalty,\n      stopSequences,\n      seed,\n\n      // response format:\n      responseMimeType:\n        responseFormat?.type === 'json' ? 'application/json' : undefined,\n      responseSchema:\n        responseFormat?.type === 'json' &&\n        responseFormat.schema != null &&\n        // Google GenAI does not support all OpenAPI Schema features,\n        // so this is needed as an escape hatch:\n        this.supportsStructuredOutputs\n          ? convertJSONSchemaToOpenAPISchema(responseFormat.schema)\n          : undefined,\n      ...(this.settings.audioTimestamp && {\n        audioTimestamp: this.settings.audioTimestamp,\n      }),\n\n      // provider options:\n      responseModalities: googleOptions?.responseModalities,\n    };\n\n    const { contents, systemInstruction } =\n      convertToGoogleGenerativeAIMessages(prompt);\n\n    switch (type) {\n      case 'regular': {\n        const { tools, toolConfig, toolWarnings } = prepareTools(\n          mode,\n          this.settings.useSearchGrounding ?? false,\n          this.settings.dynamicRetrievalConfig,\n          this.modelId,\n        );\n\n        return {\n          args: {\n            generationConfig,\n            contents,\n            systemInstruction,\n            safetySettings: this.settings.safetySettings,\n            tools,\n            toolConfig,\n            cachedContent: this.settings.cachedContent,\n          },\n          warnings: [...warnings, ...toolWarnings],\n        };\n      }\n\n      case 'object-json': {\n        return {\n          args: {\n            generationConfig: {\n              ...generationConfig,\n              responseMimeType: 'application/json',\n              responseSchema:\n                mode.schema != null &&\n                // Google GenAI does not support all OpenAPI Schema features,\n                // so this is needed as an escape hatch:\n                this.supportsStructuredOutputs\n                  ? convertJSONSchemaToOpenAPISchema(mode.schema)\n                  : undefined,\n            },\n            contents,\n            systemInstruction,\n            safetySettings: this.settings.safetySettings,\n            cachedContent: this.settings.cachedContent,\n          },\n          warnings,\n        };\n      }\n\n      case 'object-tool': {\n        return {\n          args: {\n            generationConfig,\n            contents,\n            tools: {\n              functionDeclarations: [\n                {\n                  name: mode.tool.name,\n                  description: mode.tool.description ?? '',\n                  parameters: convertJSONSchemaToOpenAPISchema(\n                    mode.tool.parameters,\n                  ),\n                },\n              ],\n            },\n            toolConfig: { functionCallingConfig: { mode: 'ANY' } },\n            safetySettings: this.settings.safetySettings,\n            cachedContent: this.settings.cachedContent,\n          },\n          warnings,\n        };\n      }\n\n      default: {\n        const _exhaustiveCheck: never = type;\n        throw new Error(`Unsupported type: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  supportsUrl(url: URL): boolean {\n    return this.config.isSupportedUrl(url);\n  }\n\n  async doGenerate(\n    options: Parameters<LanguageModelV1['doGenerate']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doGenerate']>>> {\n    const { args, warnings } = await this.getArgs(options);\n    const body = JSON.stringify(args);\n\n    const mergedHeaders = combineHeaders(\n      await resolve(this.config.headers),\n      options.headers,\n    );\n\n    const {\n      responseHeaders,\n      value: response,\n      rawValue: rawResponse,\n    } = await postJsonToApi({\n      url: `${this.config.baseURL}/${getModelPath(\n        this.modelId,\n      )}:generateContent`,\n      headers: mergedHeaders,\n      body: args,\n      failedResponseHandler: googleFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(responseSchema),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { contents: rawPrompt, ...rawSettings } = args;\n    const candidate = response.candidates[0];\n\n    const parts =\n      candidate.content == null ||\n      typeof candidate.content !== 'object' ||\n      !('parts' in candidate.content)\n        ? []\n        : candidate.content.parts;\n\n    const toolCalls = getToolCallsFromParts({\n      parts,\n      generateId: this.config.generateId,\n    });\n\n    const usageMetadata = response.usageMetadata;\n\n    return {\n      text: getTextFromParts(parts),\n      files: getInlineDataParts(parts)?.map(part => ({\n        data: part.inlineData.data,\n        mimeType: part.inlineData.mimeType,\n      })),\n      toolCalls,\n      finishReason: mapGoogleGenerativeAIFinishReason({\n        finishReason: candidate.finishReason,\n        hasToolCalls: toolCalls != null && toolCalls.length > 0,\n      }),\n      usage: {\n        promptTokens: usageMetadata?.promptTokenCount ?? NaN,\n        completionTokens: usageMetadata?.candidatesTokenCount ?? NaN,\n      },\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders, body: rawResponse },\n      warnings,\n      providerMetadata: {\n        google: {\n          groundingMetadata: candidate.groundingMetadata ?? null,\n          safetyRatings: candidate.safetyRatings ?? null,\n        },\n      },\n      sources: extractSources({\n        groundingMetadata: candidate.groundingMetadata,\n        generateId: this.config.generateId,\n      }),\n      request: { body },\n    };\n  }\n\n  async doStream(\n    options: Parameters<LanguageModelV1['doStream']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doStream']>>> {\n    const { args, warnings } = await this.getArgs(options);\n\n    const body = JSON.stringify(args);\n    const headers = combineHeaders(\n      await resolve(this.config.headers),\n      options.headers,\n    );\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: `${this.config.baseURL}/${getModelPath(\n        this.modelId,\n      )}:streamGenerateContent?alt=sse`,\n      headers,\n      body: args,\n      failedResponseHandler: googleFailedResponseHandler,\n      successfulResponseHandler: createEventSourceResponseHandler(chunkSchema),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { contents: rawPrompt, ...rawSettings } = args;\n\n    let finishReason: LanguageModelV1FinishReason = 'unknown';\n    let usage: { promptTokens: number; completionTokens: number } = {\n      promptTokens: Number.NaN,\n      completionTokens: Number.NaN,\n    };\n    let providerMetadata: LanguageModelV1ProviderMetadata | undefined =\n      undefined;\n\n    const generateId = this.config.generateId;\n    let hasToolCalls = false;\n\n    return {\n      stream: response.pipeThrough(\n        new TransformStream<\n          ParseResult<z.infer<typeof chunkSchema>>,\n          LanguageModelV1StreamPart\n        >({\n          transform(chunk, controller) {\n            if (!chunk.success) {\n              controller.enqueue({ type: 'error', error: chunk.error });\n              return;\n            }\n\n            const value = chunk.value;\n\n            const usageMetadata = value.usageMetadata;\n\n            if (usageMetadata != null) {\n              usage = {\n                promptTokens: usageMetadata.promptTokenCount ?? NaN,\n                completionTokens: usageMetadata.candidatesTokenCount ?? NaN,\n              };\n            }\n\n            const candidate = value.candidates?.[0];\n\n            // sometimes the API returns an empty candidates array\n            if (candidate == null) {\n              return;\n            }\n\n            const content = candidate.content;\n\n            // Process tool call's parts before determining finishReason to ensure hasToolCalls is properly set\n            if (content != null) {\n              const deltaText = getTextFromParts(content.parts);\n              if (deltaText != null) {\n                controller.enqueue({\n                  type: 'text-delta',\n                  textDelta: deltaText,\n                });\n              }\n\n              const inlineDataParts = getInlineDataParts(content.parts);\n              if (inlineDataParts != null) {\n                for (const part of inlineDataParts) {\n                  controller.enqueue({\n                    type: 'file',\n                    mimeType: part.inlineData.mimeType,\n                    data: part.inlineData.data,\n                  });\n                }\n              }\n\n              const toolCallDeltas = getToolCallsFromParts({\n                parts: content.parts,\n                generateId,\n              });\n\n              if (toolCallDeltas != null) {\n                for (const toolCall of toolCallDeltas) {\n                  controller.enqueue({\n                    type: 'tool-call-delta',\n                    toolCallType: 'function',\n                    toolCallId: toolCall.toolCallId,\n                    toolName: toolCall.toolName,\n                    argsTextDelta: toolCall.args,\n                  });\n\n                  controller.enqueue({\n                    type: 'tool-call',\n                    toolCallType: 'function',\n                    toolCallId: toolCall.toolCallId,\n                    toolName: toolCall.toolName,\n                    args: toolCall.args,\n                  });\n\n                  hasToolCalls = true;\n                }\n              }\n            }\n\n            if (candidate.finishReason != null) {\n              finishReason = mapGoogleGenerativeAIFinishReason({\n                finishReason: candidate.finishReason,\n                hasToolCalls,\n              });\n\n              const sources =\n                extractSources({\n                  groundingMetadata: candidate.groundingMetadata,\n                  generateId,\n                }) ?? [];\n\n              for (const source of sources) {\n                controller.enqueue({ type: 'source', source });\n              }\n\n              providerMetadata = {\n                google: {\n                  groundingMetadata: candidate.groundingMetadata ?? null,\n                  safetyRatings: candidate.safetyRatings ?? null,\n                },\n              };\n            }\n          },\n\n          flush(controller) {\n            controller.enqueue({\n              type: 'finish',\n              finishReason,\n              usage,\n              providerMetadata,\n            });\n          },\n        }),\n      ),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      warnings,\n      request: { body },\n    };\n  }\n}\n\nfunction getToolCallsFromParts({\n  parts,\n  generateId,\n}: {\n  parts: z.infer<typeof contentSchema>['parts'];\n  generateId: () => string;\n}) {\n  const functionCallParts = parts?.filter(\n    part => 'functionCall' in part,\n  ) as Array<\n    GoogleGenerativeAIContentPart & {\n      functionCall: { name: string; args: unknown };\n    }\n  >;\n\n  return functionCallParts == null || functionCallParts.length === 0\n    ? undefined\n    : functionCallParts.map(part => ({\n        toolCallType: 'function' as const,\n        toolCallId: generateId(),\n        toolName: part.functionCall.name,\n        args: JSON.stringify(part.functionCall.args),\n      }));\n}\n\nfunction getTextFromParts(parts: z.infer<typeof contentSchema>['parts']) {\n  const textParts = parts?.filter(part => 'text' in part) as Array<\n    GoogleGenerativeAIContentPart & { text: string }\n  >;\n\n  return textParts == null || textParts.length === 0\n    ? undefined\n    : textParts.map(part => part.text).join('');\n}\n\nfunction getInlineDataParts(parts: z.infer<typeof contentSchema>['parts']) {\n  return parts?.filter(\n    (\n      part,\n    ): part is {\n      inlineData: { mimeType: string; data: string };\n    } => 'inlineData' in part,\n  );\n}\n\nfunction extractSources({\n  groundingMetadata,\n  generateId,\n}: {\n  groundingMetadata: z.infer<typeof groundingMetadataSchema> | undefined | null;\n  generateId: () => string;\n}): undefined | LanguageModelV1Source[] {\n  return groundingMetadata?.groundingChunks\n    ?.filter(\n      (\n        chunk,\n      ): chunk is z.infer<typeof groundingChunkSchema> & {\n        web: { uri: string; title?: string };\n      } => chunk.web != null,\n    )\n    .map(chunk => ({\n      sourceType: 'url',\n      id: generateId(),\n      url: chunk.web.uri,\n      title: chunk.web.title,\n    }));\n}\n\nconst contentSchema = z.object({\n  role: z.string(),\n  parts: z\n    .array(\n      z.union([\n        z.object({\n          text: z.string(),\n        }),\n        z.object({\n          functionCall: z.object({\n            name: z.string(),\n            args: z.unknown(),\n          }),\n        }),\n        z.object({\n          inlineData: z.object({\n            mimeType: z.string(),\n            data: z.string(),\n          }),\n        }),\n      ]),\n    )\n    .nullish(),\n});\n\n// https://ai.google.dev/gemini-api/docs/grounding\n// https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/ground-gemini#ground-to-search\nconst groundingChunkSchema = z.object({\n  web: z.object({ uri: z.string(), title: z.string() }).nullish(),\n  retrievedContext: z.object({ uri: z.string(), title: z.string() }).nullish(),\n});\n\nexport const groundingMetadataSchema = z.object({\n  webSearchQueries: z.array(z.string()).nullish(),\n  retrievalQueries: z.array(z.string()).nullish(),\n  searchEntryPoint: z.object({ renderedContent: z.string() }).nullish(),\n  groundingChunks: z.array(groundingChunkSchema).nullish(),\n  groundingSupports: z\n    .array(\n      z.object({\n        segment: z.object({\n          startIndex: z.number().nullish(),\n          endIndex: z.number().nullish(),\n          text: z.string().nullish(),\n        }),\n        segment_text: z.string().nullish(),\n        groundingChunkIndices: z.array(z.number()).nullish(),\n        supportChunkIndices: z.array(z.number()).nullish(),\n        confidenceScores: z.array(z.number()).nullish(),\n        confidenceScore: z.array(z.number()).nullish(),\n      }),\n    )\n    .nullish(),\n  retrievalMetadata: z\n    .union([\n      z.object({\n        webDynamicRetrievalScore: z.number(),\n      }),\n      z.object({}),\n    ])\n    .nullish(),\n});\n\n// https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/configure-safety-filters\nexport const safetyRatingSchema = z.object({\n  category: z.string(),\n  probability: z.string(),\n  probabilityScore: z.number().nullish(),\n  severity: z.string().nullish(),\n  severityScore: z.number().nullish(),\n  blocked: z.boolean().nullish(),\n});\n\nconst responseSchema = z.object({\n  candidates: z.array(\n    z.object({\n      content: contentSchema.nullish().or(z.object({}).strict()),\n      finishReason: z.string().nullish(),\n      safetyRatings: z.array(safetyRatingSchema).nullish(),\n      groundingMetadata: groundingMetadataSchema.nullish(),\n    }),\n  ),\n  usageMetadata: z\n    .object({\n      promptTokenCount: z.number().nullish(),\n      candidatesTokenCount: z.number().nullish(),\n      totalTokenCount: z.number().nullish(),\n    })\n    .nullish(),\n});\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst chunkSchema = z.object({\n  candidates: z\n    .array(\n      z.object({\n        content: contentSchema.nullish(),\n        finishReason: z.string().nullish(),\n        safetyRatings: z.array(safetyRatingSchema).nullish(),\n        groundingMetadata: groundingMetadataSchema.nullish(),\n      }),\n    )\n    .nullish(),\n  usageMetadata: z\n    .object({\n      promptTokenCount: z.number().nullish(),\n      candidatesTokenCount: z.number().nullish(),\n      totalTokenCount: z.number().nullish(),\n    })\n    .nullish(),\n});\n", "import { JSONSchema7Definition } from '@ai-sdk/provider';\n\n/**\n * Converts JSON Schema 7 to OpenAPI Schema 3.0\n */\nexport function convertJSONSchemaToOpenAPISchema(\n  jsonSchema: JSONSchema7Definition,\n): unknown {\n  // parameters need to be undefined if they are empty objects:\n  if (isEmptyObjectSchema(jsonSchema)) {\n    return undefined;\n  }\n\n  if (typeof jsonSchema === 'boolean') {\n    return { type: 'boolean', properties: {} };\n  }\n\n  const {\n    type,\n    description,\n    required,\n    properties,\n    items,\n    allOf,\n    anyOf,\n    oneOf,\n    format,\n    const: constValue,\n    minLength,\n    enum: enumValues,\n  } = jsonSchema;\n\n  const result: Record<string, unknown> = {};\n\n  if (description) result.description = description;\n  if (required) result.required = required;\n  if (format) result.format = format;\n\n  if (constValue !== undefined) {\n    result.enum = [constValue];\n  }\n\n  // Handle type\n  if (type) {\n    if (Array.isArray(type)) {\n      if (type.includes('null')) {\n        result.type = type.filter(t => t !== 'null')[0];\n        result.nullable = true;\n      } else {\n        result.type = type;\n      }\n    } else if (type === 'null') {\n      result.type = 'null';\n    } else {\n      result.type = type;\n    }\n  }\n\n  // Handle enum\n  if (enumValues !== undefined) {\n    result.enum = enumValues;\n  }\n\n  if (properties != null) {\n    result.properties = Object.entries(properties).reduce(\n      (acc, [key, value]) => {\n        acc[key] = convertJSONSchemaToOpenAPISchema(value);\n        return acc;\n      },\n      {} as Record<string, unknown>,\n    );\n  }\n\n  if (items) {\n    result.items = Array.isArray(items)\n      ? items.map(convertJSONSchemaToOpenAPISchema)\n      : convertJSONSchemaToOpenAPISchema(items);\n  }\n\n  if (allOf) {\n    result.allOf = allOf.map(convertJSONSchemaToOpenAPISchema);\n  }\n  if (anyOf) {\n    // Handle cases where anyOf includes a null type\n    if (\n      anyOf.some(\n        schema => typeof schema === 'object' && schema?.type === 'null',\n      )\n    ) {\n      const nonNullSchemas = anyOf.filter(\n        schema => !(typeof schema === 'object' && schema?.type === 'null'),\n      );\n\n      if (nonNullSchemas.length === 1) {\n        // If there's only one non-null schema, convert it and make it nullable\n        const converted = convertJSONSchemaToOpenAPISchema(nonNullSchemas[0]);\n        if (typeof converted === 'object') {\n          result.nullable = true;\n          Object.assign(result, converted);\n        }\n      } else {\n        // If there are multiple non-null schemas, keep them in anyOf\n        result.anyOf = nonNullSchemas.map(convertJSONSchemaToOpenAPISchema);\n        result.nullable = true;\n      }\n    } else {\n      result.anyOf = anyOf.map(convertJSONSchemaToOpenAPISchema);\n    }\n  }\n  if (oneOf) {\n    result.oneOf = oneOf.map(convertJSONSchemaToOpenAPISchema);\n  }\n\n  if (minLength !== undefined) {\n    result.minLength = minLength;\n  }\n\n  return result;\n}\n\nfunction isEmptyObjectSchema(jsonSchema: JSONSchema7Definition): boolean {\n  return (\n    jsonSchema != null &&\n    typeof jsonSchema === 'object' &&\n    jsonSchema.type === 'object' &&\n    (jsonSchema.properties == null ||\n      Object.keys(jsonSchema.properties).length === 0)\n  );\n}\n", "import {\n  LanguageModelV1Prompt,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport { convertUint8ArrayToBase64 } from '@ai-sdk/provider-utils';\nimport {\n  GoogleGenerativeAIContent,\n  GoogleGenerativeAIContentPart,\n  GoogleGenerativeAIPrompt,\n} from './google-generative-ai-prompt';\n\nexport function convertToGoogleGenerativeAIMessages(\n  prompt: LanguageModelV1Prompt,\n): GoogleGenerativeAIPrompt {\n  const systemInstructionParts: Array<{ text: string }> = [];\n  const contents: Array<GoogleGenerativeAIContent> = [];\n  let systemMessagesAllowed = true;\n\n  for (const { role, content } of prompt) {\n    switch (role) {\n      case 'system': {\n        if (!systemMessagesAllowed) {\n          throw new UnsupportedFunctionalityError({\n            functionality:\n              'system messages are only supported at the beginning of the conversation',\n          });\n        }\n\n        systemInstructionParts.push({ text: content });\n        break;\n      }\n\n      case 'user': {\n        systemMessagesAllowed = false;\n\n        const parts: GoogleGenerativeAIContentPart[] = [];\n\n        for (const part of content) {\n          switch (part.type) {\n            case 'text': {\n              parts.push({ text: part.text });\n              break;\n            }\n\n            case 'image': {\n              parts.push(\n                part.image instanceof URL\n                  ? {\n                      fileData: {\n                        mimeType: part.mimeType ?? 'image/jpeg',\n                        fileUri: part.image.toString(),\n                      },\n                    }\n                  : {\n                      inlineData: {\n                        mimeType: part.mimeType ?? 'image/jpeg',\n                        data: convertUint8ArrayToBase64(part.image),\n                      },\n                    },\n              );\n\n              break;\n            }\n\n            case 'file': {\n              parts.push(\n                part.data instanceof URL\n                  ? {\n                      fileData: {\n                        mimeType: part.mimeType,\n                        fileUri: part.data.toString(),\n                      },\n                    }\n                  : {\n                      inlineData: {\n                        mimeType: part.mimeType,\n                        data: part.data,\n                      },\n                    },\n              );\n\n              break;\n            }\n          }\n        }\n\n        contents.push({ role: 'user', parts });\n        break;\n      }\n\n      case 'assistant': {\n        systemMessagesAllowed = false;\n\n        contents.push({\n          role: 'model',\n          parts: content\n            .map(part => {\n              switch (part.type) {\n                case 'text': {\n                  return part.text.length === 0\n                    ? undefined\n                    : { text: part.text };\n                }\n\n                case 'file': {\n                  if (part.mimeType !== 'image/png') {\n                    throw new UnsupportedFunctionalityError({\n                      functionality:\n                        'Only PNG images are supported in assistant messages',\n                    });\n                  }\n\n                  if (part.data instanceof URL) {\n                    throw new UnsupportedFunctionalityError({\n                      functionality:\n                        'File data URLs in assistant messages are not supported',\n                    });\n                  }\n\n                  return {\n                    inlineData: {\n                      mimeType: part.mimeType,\n                      data: part.data,\n                    },\n                  };\n                }\n\n                case 'tool-call': {\n                  return {\n                    functionCall: {\n                      name: part.toolName,\n                      args: part.args,\n                    },\n                  };\n                }\n              }\n            })\n            .filter(part => part !== undefined),\n        });\n        break;\n      }\n\n      case 'tool': {\n        systemMessagesAllowed = false;\n\n        contents.push({\n          role: 'user',\n          parts: content.map(part => ({\n            functionResponse: {\n              name: part.toolName,\n              response: {\n                name: part.toolName,\n                content: part.result,\n              },\n            },\n          })),\n        });\n        break;\n      }\n    }\n  }\n\n  return {\n    systemInstruction:\n      systemInstructionParts.length > 0\n        ? { parts: systemInstructionParts }\n        : undefined,\n    contents,\n  };\n}\n", "export function getModelPath(modelId: string): string {\n  return modelId.includes('/') ? modelId : `models/${modelId}`;\n}\n", "import { createJsonErrorResponseHandler } from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\n\nconst googleErrorDataSchema = z.object({\n  error: z.object({\n    code: z.number().nullable(),\n    message: z.string(),\n    status: z.string(),\n  }),\n});\n\nexport type GoogleErrorData = z.infer<typeof googleErrorDataSchema>;\n\nexport const googleFailedResponseHandler = createJsonErrorResponseHandler({\n  errorSchema: googleErrorDataSchema,\n  errorToMessage: data => data.error.message,\n});\n", "import {\n  LanguageModelV1,\n  LanguageModelV1CallWarning,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport { convertJSONSchemaToOpenAPISchema } from './convert-json-schema-to-openapi-schema';\nimport {\n  DynamicRetrievalConfig,\n  GoogleGenerativeAIModelId,\n} from './google-generative-ai-settings';\n\nexport function prepareTools(\n  mode: Parameters<LanguageModelV1['doGenerate']>[0]['mode'] & {\n    type: 'regular';\n  },\n  useSearchGrounding: boolean,\n  dynamicRetrievalConfig: DynamicRetrievalConfig | undefined,\n  modelId: GoogleGenerativeAIModelId,\n): {\n  tools:\n    | undefined\n    | {\n        functionDeclarations: Array<{\n          name: string;\n          description: string | undefined;\n          parameters: unknown;\n        }>;\n      }\n    | {\n        googleSearchRetrieval:\n          | Record<string, never>\n          | { dynamicRetrievalConfig: DynamicRetrievalConfig };\n      }\n    | { googleSearch: Record<string, never> };\n  toolConfig:\n    | undefined\n    | {\n        functionCallingConfig: {\n          mode: 'AUTO' | 'NONE' | 'ANY';\n          allowedFunctionNames?: string[];\n        };\n      };\n  toolWarnings: LanguageModelV1CallWarning[];\n} {\n  const tools = mode.tools?.length ? mode.tools : undefined;\n  const toolWarnings: LanguageModelV1CallWarning[] = [];\n\n  const isGemini2 = modelId.includes('gemini-2');\n  const supportsDynamicRetrieval =\n    modelId.includes('gemini-1.5-flash') && !modelId.includes('-8b');\n\n  if (useSearchGrounding) {\n    return {\n      tools: isGemini2\n        ? { googleSearch: {} }\n        : {\n            googleSearchRetrieval:\n              !supportsDynamicRetrieval || !dynamicRetrievalConfig\n                ? {}\n                : { dynamicRetrievalConfig },\n          },\n      toolConfig: undefined,\n      toolWarnings,\n    };\n  }\n\n  if (tools == null) {\n    return { tools: undefined, toolConfig: undefined, toolWarnings };\n  }\n\n  const functionDeclarations = [];\n  for (const tool of tools) {\n    if (tool.type === 'provider-defined') {\n      toolWarnings.push({ type: 'unsupported-tool', tool });\n    } else {\n      functionDeclarations.push({\n        name: tool.name,\n        description: tool.description ?? '',\n        parameters: convertJSONSchemaToOpenAPISchema(tool.parameters),\n      });\n    }\n  }\n\n  const toolChoice = mode.toolChoice;\n\n  if (toolChoice == null) {\n    return {\n      tools: { functionDeclarations },\n      toolConfig: undefined,\n      toolWarnings,\n    };\n  }\n\n  const type = toolChoice.type;\n\n  switch (type) {\n    case 'auto':\n      return {\n        tools: { functionDeclarations },\n        toolConfig: { functionCallingConfig: { mode: 'AUTO' } },\n        toolWarnings,\n      };\n    case 'none':\n      return {\n        tools: { functionDeclarations },\n        toolConfig: { functionCallingConfig: { mode: 'NONE' } },\n        toolWarnings,\n      };\n    case 'required':\n      return {\n        tools: { functionDeclarations },\n        toolConfig: { functionCallingConfig: { mode: 'ANY' } },\n        toolWarnings,\n      };\n    case 'tool':\n      return {\n        tools: { functionDeclarations },\n        toolConfig: {\n          functionCallingConfig: {\n            mode: 'ANY',\n            allowedFunctionNames: [toolChoice.toolName],\n          },\n        },\n        toolWarnings,\n      };\n    default: {\n      const _exhaustiveCheck: never = type;\n      throw new UnsupportedFunctionalityError({\n        functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`,\n      });\n    }\n  }\n}\n", "import { LanguageModelV1FinishReason } from '@ai-sdk/provider';\n\nexport function mapGoogleGenerativeAIFinishReason({\n  finishReason,\n  hasToolCalls,\n}: {\n  finishReason: string | null | undefined;\n  hasToolCalls: boolean;\n}): LanguageModelV1FinishReason {\n  switch (finishReason) {\n    case 'STOP':\n      return hasToolCalls ? 'tool-calls' : 'stop';\n    case 'MAX_TOKENS':\n      return 'length';\n    case 'IMAGE_SAFETY':\n    case 'RECITATION':\n    case 'SAFETY':\n    case 'BLOCKLIST':\n    case 'PROHIBITED_CONTENT':\n    case 'SPII':\n      return 'content-filter';\n    case 'FINISH_REASON_UNSPECIFIED':\n    case 'OTHER':\n      return 'other';\n    case 'MALFORMED_FUNCTION_CALL':\n      return 'error';\n    default:\n      return 'unknown';\n  }\n}\n", "import {\n  EmbeddingModelV1,\n  TooManyEmbeddingValuesForCallError,\n} from '@ai-sdk/provider';\nimport {\n  combineHeaders,\n  createJsonResponseHandler,\n  FetchFunction,\n  postJsonToApi,\n  resolve,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { googleFailedResponseHandler } from './google-error';\nimport {\n  GoogleGenerativeAIEmbeddingModelId,\n  GoogleGenerativeAIEmbeddingSettings,\n} from './google-generative-ai-embedding-settings';\n\ntype GoogleGenerativeAIEmbeddingConfig = {\n  provider: string;\n  baseURL: string;\n  headers: () => Record<string, string | undefined>;\n  fetch?: FetchFunction;\n};\n\nexport class GoogleGenerativeAIEmbeddingModel\n  implements EmbeddingModelV1<string>\n{\n  readonly specificationVersion = 'v1';\n  readonly modelId: GoogleGenerativeAIEmbeddingModelId;\n\n  private readonly config: GoogleGenerativeAIEmbeddingConfig;\n  private readonly settings: GoogleGenerativeAIEmbeddingSettings;\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  get maxEmbeddingsPerCall(): number {\n    return 2048;\n  }\n\n  get supportsParallelCalls(): boolean {\n    return true;\n  }\n\n  constructor(\n    modelId: GoogleGenerativeAIEmbeddingModelId,\n    settings: GoogleGenerativeAIEmbeddingSettings,\n    config: GoogleGenerativeAIEmbeddingConfig,\n  ) {\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n\n  async doEmbed({\n    values,\n    headers,\n    abortSignal,\n  }: Parameters<EmbeddingModelV1<string>['doEmbed']>[0]): Promise<\n    Awaited<ReturnType<EmbeddingModelV1<string>['doEmbed']>>\n  > {\n    if (values.length > this.maxEmbeddingsPerCall) {\n      throw new TooManyEmbeddingValuesForCallError({\n        provider: this.provider,\n        modelId: this.modelId,\n        maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n        values,\n      });\n    }\n\n    const mergedHeaders = combineHeaders(\n      await resolve(this.config.headers),\n      headers,\n    );\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: `${this.config.baseURL}/models/${this.modelId}:batchEmbedContents`,\n      headers: mergedHeaders,\n      body: {\n        requests: values.map(value => ({\n          model: `models/${this.modelId}`,\n          content: { role: 'user', parts: [{ text: value }] },\n          outputDimensionality: this.settings.outputDimensionality,\n        })),\n      },\n      failedResponseHandler: googleFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        googleGenerativeAITextEmbeddingResponseSchema,\n      ),\n      abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    return {\n      embeddings: response.embeddings.map(item => item.values),\n      usage: undefined,\n      rawResponse: { headers: responseHeaders },\n    };\n  }\n}\n\n// minimal version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst googleGenerativeAITextEmbeddingResponseSchema = z.object({\n  embeddings: z.array(z.object({ values: z.array(z.number()) })),\n});\n", "export function isSupportedFileUrl(url: URL): boolean {\n  return url\n    .toString()\n    .startsWith('https://generativelanguage.googleapis.com/v1beta/files/');\n}\n", "export { createOpenAI, openai } from './openai-provider';\nexport type { OpenAIProvider, OpenAIProviderSettings } from './openai-provider';\n", "import {\n  EmbeddingModelV1,\n  ImageModelV1,\n  LanguageModelV1,\n  ProviderV1,\n} from '@ai-sdk/provider';\nimport {\n  FetchFunction,\n  loadApiKey,\n  withoutTrailingSlash,\n} from '@ai-sdk/provider-utils';\nimport { OpenAIChatLanguageModel } from './openai-chat-language-model';\nimport { OpenAIChatModelId, OpenAIChatSettings } from './openai-chat-settings';\nimport { OpenAICompletionLanguageModel } from './openai-completion-language-model';\nimport {\n  OpenAICompletionModelId,\n  OpenAICompletionSettings,\n} from './openai-completion-settings';\nimport { OpenAIEmbeddingModel } from './openai-embedding-model';\nimport {\n  OpenAIEmbeddingModelId,\n  OpenAIEmbeddingSettings,\n} from './openai-embedding-settings';\nimport { OpenAIImageModel } from './openai-image-model';\nimport {\n  OpenAIImageModelId,\n  OpenAIImageSettings,\n} from './openai-image-settings';\nimport { OpenAIResponsesLanguageModel } from './responses/openai-responses-language-model';\nimport { OpenAIResponsesModelId } from './responses/openai-responses-settings';\nimport { openaiTools } from './openai-tools';\n\nexport interface OpenAIProvider extends ProviderV1 {\n  (\n    modelId: 'gpt-3.5-turbo-instruct',\n    settings?: OpenAICompletionSettings,\n  ): OpenAICompletionLanguageModel;\n  (modelId: OpenAIChatModelId, settings?: OpenAIChatSettings): LanguageModelV1;\n\n  /**\nCreates an OpenAI model for text generation.\n   */\n  languageModel(\n    modelId: 'gpt-3.5-turbo-instruct',\n    settings?: OpenAICompletionSettings,\n  ): OpenAICompletionLanguageModel;\n  languageModel(\n    modelId: OpenAIChatModelId,\n    settings?: OpenAIChatSettings,\n  ): LanguageModelV1;\n\n  /**\nCreates an OpenAI chat model for text generation.\n   */\n  chat(\n    modelId: OpenAIChatModelId,\n    settings?: OpenAIChatSettings,\n  ): LanguageModelV1;\n\n  /**\nCreates an OpenAI responses API model for text generation.\n   */\n  responses(modelId: OpenAIResponsesModelId): LanguageModelV1;\n\n  /**\nCreates an OpenAI completion model for text generation.\n   */\n  completion(\n    modelId: OpenAICompletionModelId,\n    settings?: OpenAICompletionSettings,\n  ): LanguageModelV1;\n\n  /**\nCreates a model for text embeddings.\n   */\n  embedding(\n    modelId: OpenAIEmbeddingModelId,\n    settings?: OpenAIEmbeddingSettings,\n  ): EmbeddingModelV1<string>;\n\n  /**\nCreates a model for text embeddings.\n\n@deprecated Use `textEmbeddingModel` instead.\n   */\n  textEmbedding(\n    modelId: OpenAIEmbeddingModelId,\n    settings?: OpenAIEmbeddingSettings,\n  ): EmbeddingModelV1<string>;\n\n  /**\nCreates a model for text embeddings.\n   */\n  textEmbeddingModel(\n    modelId: OpenAIEmbeddingModelId,\n    settings?: OpenAIEmbeddingSettings,\n  ): EmbeddingModelV1<string>;\n\n  /**\nCreates a model for image generation.\n   */\n  image(\n    modelId: OpenAIImageModelId,\n    settings?: OpenAIImageSettings,\n  ): ImageModelV1;\n\n  /**\nCreates a model for image generation.\n   */\n  imageModel(\n    modelId: OpenAIImageModelId,\n    settings?: OpenAIImageSettings,\n  ): ImageModelV1;\n\n  /**\nOpenAI-specific tools.\n   */\n  tools: typeof openaiTools;\n}\n\nexport interface OpenAIProviderSettings {\n  /**\nBase URL for the OpenAI API calls.\n     */\n  baseURL?: string;\n\n  /**\nAPI key for authenticating requests.\n     */\n  apiKey?: string;\n\n  /**\nOpenAI Organization.\n     */\n  organization?: string;\n\n  /**\nOpenAI project.\n     */\n  project?: string;\n\n  /**\nCustom headers to include in the requests.\n     */\n  headers?: Record<string, string>;\n\n  /**\nOpenAI compatibility mode. Should be set to `strict` when using the OpenAI API,\nand `compatible` when using 3rd party providers. In `compatible` mode, newer\ninformation such as streamOptions are not being sent. Defaults to 'compatible'.\n   */\n  compatibility?: 'strict' | 'compatible';\n\n  /**\nProvider name. Overrides the `openai` default name for 3rd party providers.\n   */\n  name?: string;\n\n  /**\nCustom fetch implementation. You can use it as a middleware to intercept requests,\nor to provide a custom fetch implementation for e.g. testing.\n    */\n  fetch?: FetchFunction;\n}\n\n/**\nCreate an OpenAI provider instance.\n */\nexport function createOpenAI(\n  options: OpenAIProviderSettings = {},\n): OpenAIProvider {\n  const baseURL =\n    withoutTrailingSlash(options.baseURL) ?? 'https://api.openai.com/v1';\n\n  // we default to compatible, because strict breaks providers like Groq:\n  const compatibility = options.compatibility ?? 'compatible';\n\n  const providerName = options.name ?? 'openai';\n\n  const getHeaders = () => ({\n    Authorization: `Bearer ${loadApiKey({\n      apiKey: options.apiKey,\n      environmentVariableName: 'OPENAI_API_KEY',\n      description: 'OpenAI',\n    })}`,\n    'OpenAI-Organization': options.organization,\n    'OpenAI-Project': options.project,\n    ...options.headers,\n  });\n\n  const createChatModel = (\n    modelId: OpenAIChatModelId,\n    settings: OpenAIChatSettings = {},\n  ) =>\n    new OpenAIChatLanguageModel(modelId, settings, {\n      provider: `${providerName}.chat`,\n      url: ({ path }) => `${baseURL}${path}`,\n      headers: getHeaders,\n      compatibility,\n      fetch: options.fetch,\n    });\n\n  const createCompletionModel = (\n    modelId: OpenAICompletionModelId,\n    settings: OpenAICompletionSettings = {},\n  ) =>\n    new OpenAICompletionLanguageModel(modelId, settings, {\n      provider: `${providerName}.completion`,\n      url: ({ path }) => `${baseURL}${path}`,\n      headers: getHeaders,\n      compatibility,\n      fetch: options.fetch,\n    });\n\n  const createEmbeddingModel = (\n    modelId: OpenAIEmbeddingModelId,\n    settings: OpenAIEmbeddingSettings = {},\n  ) =>\n    new OpenAIEmbeddingModel(modelId, settings, {\n      provider: `${providerName}.embedding`,\n      url: ({ path }) => `${baseURL}${path}`,\n      headers: getHeaders,\n      fetch: options.fetch,\n    });\n\n  const createImageModel = (\n    modelId: OpenAIImageModelId,\n    settings: OpenAIImageSettings = {},\n  ) =>\n    new OpenAIImageModel(modelId, settings, {\n      provider: `${providerName}.image`,\n      url: ({ path }) => `${baseURL}${path}`,\n      headers: getHeaders,\n      fetch: options.fetch,\n    });\n\n  const createLanguageModel = (\n    modelId: OpenAIChatModelId | OpenAICompletionModelId,\n    settings?: OpenAIChatSettings | OpenAICompletionSettings,\n  ) => {\n    if (new.target) {\n      throw new Error(\n        'The OpenAI model function cannot be called with the new keyword.',\n      );\n    }\n\n    if (modelId === 'gpt-3.5-turbo-instruct') {\n      return createCompletionModel(\n        modelId,\n        settings as OpenAICompletionSettings,\n      );\n    }\n\n    return createChatModel(modelId, settings as OpenAIChatSettings);\n  };\n\n  const createResponsesModel = (modelId: OpenAIResponsesModelId) => {\n    return new OpenAIResponsesLanguageModel(modelId, {\n      provider: `${providerName}.responses`,\n      url: ({ path }) => `${baseURL}${path}`,\n      headers: getHeaders,\n      fetch: options.fetch,\n    });\n  };\n\n  const provider = function (\n    modelId: OpenAIChatModelId | OpenAICompletionModelId,\n    settings?: OpenAIChatSettings | OpenAICompletionSettings,\n  ) {\n    return createLanguageModel(modelId, settings);\n  };\n\n  provider.languageModel = createLanguageModel;\n  provider.chat = createChatModel;\n  provider.completion = createCompletionModel;\n  provider.responses = createResponsesModel;\n  provider.embedding = createEmbeddingModel;\n  provider.textEmbedding = createEmbeddingModel;\n  provider.textEmbeddingModel = createEmbeddingModel;\n\n  provider.image = createImageModel;\n  provider.imageModel = createImageModel;\n\n  provider.tools = openaiTools;\n\n  return provider as OpenAIProvider;\n}\n\n/**\nDefault OpenAI provider instance. It uses 'strict' compatibility mode.\n */\nexport const openai = createOpenAI({\n  compatibility: 'strict', // strict for OpenAI API\n});\n", "import {\n  InvalidResponseDataError,\n  LanguageModelV1,\n  LanguageModelV1CallWarning,\n  LanguageModelV1FinishReason,\n  LanguageModelV1LogProbs,\n  LanguageModelV1ProviderMetadata,\n  LanguageModelV1StreamPart,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport {\n  FetchFunction,\n  ParseResult,\n  combineHeaders,\n  createEventSourceResponseHandler,\n  createJsonResponseHandler,\n  generateId,\n  isParsableJson,\n  postJsonToApi,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { convertToOpenAIChatMessages } from './convert-to-openai-chat-messages';\nimport { mapOpenAIChatLogProbsOutput } from './map-openai-chat-logprobs';\nimport { mapOpenAIFinishReason } from './map-openai-finish-reason';\nimport { OpenAIChatModelId, OpenAIChatSettings } from './openai-chat-settings';\nimport {\n  openaiErrorDataSchema,\n  openaiFailedResponseHandler,\n} from './openai-error';\nimport { getResponseMetadata } from './get-response-metadata';\nimport { prepareTools } from './openai-prepare-tools';\n\ntype OpenAIChatConfig = {\n  provider: string;\n  compatibility: 'strict' | 'compatible';\n  headers: () => Record<string, string | undefined>;\n  url: (options: { modelId: string; path: string }) => string;\n  fetch?: FetchFunction;\n};\n\nexport class OpenAIChatLanguageModel implements LanguageModelV1 {\n  readonly specificationVersion = 'v1';\n\n  readonly modelId: OpenAIChatModelId;\n  readonly settings: OpenAIChatSettings;\n\n  private readonly config: OpenAIChatConfig;\n\n  constructor(\n    modelId: OpenAIChatModelId,\n    settings: OpenAIChatSettings,\n    config: OpenAIChatConfig,\n  ) {\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n\n  get supportsStructuredOutputs(): boolean {\n    // enable structured outputs for reasoning models by default:\n    // TODO in the next major version, remove this and always use json mode for models\n    // that support structured outputs (blacklist other models)\n    return this.settings.structuredOutputs ?? isReasoningModel(this.modelId);\n  }\n\n  get defaultObjectGenerationMode() {\n    // audio models don't support structured outputs:\n    if (isAudioModel(this.modelId)) {\n      return 'tool';\n    }\n\n    return this.supportsStructuredOutputs ? 'json' : 'tool';\n  }\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  get supportsImageUrls(): boolean {\n    // image urls can be sent if downloadImages is disabled (default):\n    return !this.settings.downloadImages;\n  }\n\n  private getArgs({\n    mode,\n    prompt,\n    maxTokens,\n    temperature,\n    topP,\n    topK,\n    frequencyPenalty,\n    presencePenalty,\n    stopSequences,\n    responseFormat,\n    seed,\n    providerMetadata,\n  }: Parameters<LanguageModelV1['doGenerate']>[0]) {\n    const type = mode.type;\n\n    const warnings: LanguageModelV1CallWarning[] = [];\n\n    if (topK != null) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'topK',\n      });\n    }\n\n    if (\n      responseFormat?.type === 'json' &&\n      responseFormat.schema != null &&\n      !this.supportsStructuredOutputs\n    ) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'responseFormat',\n        details:\n          'JSON response format schema is only supported with structuredOutputs',\n      });\n    }\n\n    const useLegacyFunctionCalling = this.settings.useLegacyFunctionCalling;\n\n    if (useLegacyFunctionCalling && this.settings.parallelToolCalls === true) {\n      throw new UnsupportedFunctionalityError({\n        functionality: 'useLegacyFunctionCalling with parallelToolCalls',\n      });\n    }\n\n    if (useLegacyFunctionCalling && this.supportsStructuredOutputs) {\n      throw new UnsupportedFunctionalityError({\n        functionality: 'structuredOutputs with useLegacyFunctionCalling',\n      });\n    }\n\n    const { messages, warnings: messageWarnings } = convertToOpenAIChatMessages(\n      {\n        prompt,\n        useLegacyFunctionCalling,\n        systemMessageMode: getSystemMessageMode(this.modelId),\n      },\n    );\n\n    warnings.push(...messageWarnings);\n\n    const baseArgs = {\n      // model id:\n      model: this.modelId,\n\n      // model specific settings:\n      logit_bias: this.settings.logitBias,\n      logprobs:\n        this.settings.logprobs === true ||\n        typeof this.settings.logprobs === 'number'\n          ? true\n          : undefined,\n      top_logprobs:\n        typeof this.settings.logprobs === 'number'\n          ? this.settings.logprobs\n          : typeof this.settings.logprobs === 'boolean'\n            ? this.settings.logprobs\n              ? 0\n              : undefined\n            : undefined,\n      user: this.settings.user,\n      parallel_tool_calls: this.settings.parallelToolCalls,\n\n      // standardized settings:\n      max_tokens: maxTokens,\n      temperature,\n      top_p: topP,\n      frequency_penalty: frequencyPenalty,\n      presence_penalty: presencePenalty,\n      response_format:\n        responseFormat?.type === 'json'\n          ? this.supportsStructuredOutputs && responseFormat.schema != null\n            ? {\n                type: 'json_schema',\n                json_schema: {\n                  schema: responseFormat.schema,\n                  strict: true,\n                  name: responseFormat.name ?? 'response',\n                  description: responseFormat.description,\n                },\n              }\n            : { type: 'json_object' }\n          : undefined,\n      stop: stopSequences,\n      seed,\n\n      // openai specific settings:\n      // TODO remove in next major version; we auto-map maxTokens now\n      max_completion_tokens: providerMetadata?.openai?.maxCompletionTokens,\n      store: providerMetadata?.openai?.store,\n      metadata: providerMetadata?.openai?.metadata,\n      prediction: providerMetadata?.openai?.prediction,\n      reasoning_effort:\n        providerMetadata?.openai?.reasoningEffort ??\n        this.settings.reasoningEffort,\n\n      // messages:\n      messages,\n    };\n\n    if (isReasoningModel(this.modelId)) {\n      // remove unsupported settings for reasoning models\n      // see https://platform.openai.com/docs/guides/reasoning#limitations\n      if (baseArgs.temperature != null) {\n        baseArgs.temperature = undefined;\n        warnings.push({\n          type: 'unsupported-setting',\n          setting: 'temperature',\n          details: 'temperature is not supported for reasoning models',\n        });\n      }\n      if (baseArgs.top_p != null) {\n        baseArgs.top_p = undefined;\n        warnings.push({\n          type: 'unsupported-setting',\n          setting: 'topP',\n          details: 'topP is not supported for reasoning models',\n        });\n      }\n      if (baseArgs.frequency_penalty != null) {\n        baseArgs.frequency_penalty = undefined;\n        warnings.push({\n          type: 'unsupported-setting',\n          setting: 'frequencyPenalty',\n          details: 'frequencyPenalty is not supported for reasoning models',\n        });\n      }\n      if (baseArgs.presence_penalty != null) {\n        baseArgs.presence_penalty = undefined;\n        warnings.push({\n          type: 'unsupported-setting',\n          setting: 'presencePenalty',\n          details: 'presencePenalty is not supported for reasoning models',\n        });\n      }\n      if (baseArgs.logit_bias != null) {\n        baseArgs.logit_bias = undefined;\n        warnings.push({\n          type: 'other',\n          message: 'logitBias is not supported for reasoning models',\n        });\n      }\n      if (baseArgs.logprobs != null) {\n        baseArgs.logprobs = undefined;\n        warnings.push({\n          type: 'other',\n          message: 'logprobs is not supported for reasoning models',\n        });\n      }\n      if (baseArgs.top_logprobs != null) {\n        baseArgs.top_logprobs = undefined;\n        warnings.push({\n          type: 'other',\n          message: 'topLogprobs is not supported for reasoning models',\n        });\n      }\n\n      // reasoning models use max_completion_tokens instead of max_tokens:\n      if (baseArgs.max_tokens != null) {\n        if (baseArgs.max_completion_tokens == null) {\n          baseArgs.max_completion_tokens = baseArgs.max_tokens;\n        }\n        baseArgs.max_tokens = undefined;\n      }\n    }\n\n    switch (type) {\n      case 'regular': {\n        const { tools, tool_choice, functions, function_call, toolWarnings } =\n          prepareTools({\n            mode,\n            useLegacyFunctionCalling,\n            structuredOutputs: this.supportsStructuredOutputs,\n          });\n\n        return {\n          args: {\n            ...baseArgs,\n            tools,\n            tool_choice,\n            functions,\n            function_call,\n          },\n          warnings: [...warnings, ...toolWarnings],\n        };\n      }\n\n      case 'object-json': {\n        return {\n          args: {\n            ...baseArgs,\n            response_format:\n              this.supportsStructuredOutputs && mode.schema != null\n                ? {\n                    type: 'json_schema',\n                    json_schema: {\n                      schema: mode.schema,\n                      strict: true,\n                      name: mode.name ?? 'response',\n                      description: mode.description,\n                    },\n                  }\n                : { type: 'json_object' },\n          },\n          warnings,\n        };\n      }\n\n      case 'object-tool': {\n        return {\n          args: useLegacyFunctionCalling\n            ? {\n                ...baseArgs,\n                function_call: {\n                  name: mode.tool.name,\n                },\n                functions: [\n                  {\n                    name: mode.tool.name,\n                    description: mode.tool.description,\n                    parameters: mode.tool.parameters,\n                  },\n                ],\n              }\n            : {\n                ...baseArgs,\n                tool_choice: {\n                  type: 'function',\n                  function: { name: mode.tool.name },\n                },\n                tools: [\n                  {\n                    type: 'function',\n                    function: {\n                      name: mode.tool.name,\n                      description: mode.tool.description,\n                      parameters: mode.tool.parameters,\n                      strict: this.supportsStructuredOutputs ? true : undefined,\n                    },\n                  },\n                ],\n              },\n          warnings,\n        };\n      }\n\n      default: {\n        const _exhaustiveCheck: never = type;\n        throw new Error(`Unsupported type: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  async doGenerate(\n    options: Parameters<LanguageModelV1['doGenerate']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doGenerate']>>> {\n    const { args: body, warnings } = this.getArgs(options);\n\n    const {\n      responseHeaders,\n      value: response,\n      rawValue: rawResponse,\n    } = await postJsonToApi({\n      url: this.config.url({\n        path: '/chat/completions',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body,\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        openaiChatResponseSchema,\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { messages: rawPrompt, ...rawSettings } = body;\n    const choice = response.choices[0];\n\n    // provider metadata:\n    const completionTokenDetails = response.usage?.completion_tokens_details;\n    const promptTokenDetails = response.usage?.prompt_tokens_details;\n    const providerMetadata: LanguageModelV1ProviderMetadata = { openai: {} };\n    if (completionTokenDetails?.reasoning_tokens != null) {\n      providerMetadata.openai.reasoningTokens =\n        completionTokenDetails?.reasoning_tokens;\n    }\n    if (completionTokenDetails?.accepted_prediction_tokens != null) {\n      providerMetadata.openai.acceptedPredictionTokens =\n        completionTokenDetails?.accepted_prediction_tokens;\n    }\n    if (completionTokenDetails?.rejected_prediction_tokens != null) {\n      providerMetadata.openai.rejectedPredictionTokens =\n        completionTokenDetails?.rejected_prediction_tokens;\n    }\n    if (promptTokenDetails?.cached_tokens != null) {\n      providerMetadata.openai.cachedPromptTokens =\n        promptTokenDetails?.cached_tokens;\n    }\n\n    return {\n      text: choice.message.content ?? undefined,\n      toolCalls:\n        this.settings.useLegacyFunctionCalling && choice.message.function_call\n          ? [\n              {\n                toolCallType: 'function',\n                toolCallId: generateId(),\n                toolName: choice.message.function_call.name,\n                args: choice.message.function_call.arguments,\n              },\n            ]\n          : choice.message.tool_calls?.map(toolCall => ({\n              toolCallType: 'function',\n              toolCallId: toolCall.id ?? generateId(),\n              toolName: toolCall.function.name,\n              args: toolCall.function.arguments!,\n            })),\n      finishReason: mapOpenAIFinishReason(choice.finish_reason),\n      usage: {\n        promptTokens: response.usage?.prompt_tokens ?? NaN,\n        completionTokens: response.usage?.completion_tokens ?? NaN,\n      },\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders, body: rawResponse },\n      request: { body: JSON.stringify(body) },\n      response: getResponseMetadata(response),\n      warnings,\n      logprobs: mapOpenAIChatLogProbsOutput(choice.logprobs),\n      providerMetadata,\n    };\n  }\n\n  async doStream(\n    options: Parameters<LanguageModelV1['doStream']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doStream']>>> {\n    if (this.settings.simulateStreaming) {\n      const result = await this.doGenerate(options);\n\n      const simulatedStream = new ReadableStream<LanguageModelV1StreamPart>({\n        start(controller) {\n          controller.enqueue({ type: 'response-metadata', ...result.response });\n          if (result.text) {\n            controller.enqueue({\n              type: 'text-delta',\n              textDelta: result.text,\n            });\n          }\n          if (result.toolCalls) {\n            for (const toolCall of result.toolCalls) {\n              controller.enqueue({\n                type: 'tool-call-delta',\n                toolCallType: 'function',\n                toolCallId: toolCall.toolCallId,\n                toolName: toolCall.toolName,\n                argsTextDelta: toolCall.args,\n              });\n\n              controller.enqueue({\n                type: 'tool-call',\n                ...toolCall,\n              });\n            }\n          }\n          controller.enqueue({\n            type: 'finish',\n            finishReason: result.finishReason,\n            usage: result.usage,\n            logprobs: result.logprobs,\n            providerMetadata: result.providerMetadata,\n          });\n          controller.close();\n        },\n      });\n      return {\n        stream: simulatedStream,\n        rawCall: result.rawCall,\n        rawResponse: result.rawResponse,\n        warnings: result.warnings,\n      };\n    }\n\n    const { args, warnings } = this.getArgs(options);\n\n    const body = {\n      ...args,\n      stream: true,\n\n      // only include stream_options when in strict compatibility mode:\n      stream_options:\n        this.config.compatibility === 'strict'\n          ? { include_usage: true }\n          : undefined,\n    };\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.config.url({\n        path: '/chat/completions',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body,\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createEventSourceResponseHandler(\n        openaiChatChunkSchema,\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { messages: rawPrompt, ...rawSettings } = args;\n\n    const toolCalls: Array<{\n      id: string;\n      type: 'function';\n      function: {\n        name: string;\n        arguments: string;\n      };\n      hasFinished: boolean;\n    }> = [];\n\n    let finishReason: LanguageModelV1FinishReason = 'unknown';\n    let usage: {\n      promptTokens: number | undefined;\n      completionTokens: number | undefined;\n    } = {\n      promptTokens: undefined,\n      completionTokens: undefined,\n    };\n    let logprobs: LanguageModelV1LogProbs;\n    let isFirstChunk = true;\n\n    const { useLegacyFunctionCalling } = this.settings;\n\n    const providerMetadata: LanguageModelV1ProviderMetadata = { openai: {} };\n\n    return {\n      stream: response.pipeThrough(\n        new TransformStream<\n          ParseResult<z.infer<typeof openaiChatChunkSchema>>,\n          LanguageModelV1StreamPart\n        >({\n          transform(chunk, controller) {\n            // handle failed chunk parsing / validation:\n            if (!chunk.success) {\n              finishReason = 'error';\n              controller.enqueue({ type: 'error', error: chunk.error });\n              return;\n            }\n\n            const value = chunk.value;\n\n            // handle error chunks:\n            if ('error' in value) {\n              finishReason = 'error';\n              controller.enqueue({ type: 'error', error: value.error });\n              return;\n            }\n\n            if (isFirstChunk) {\n              isFirstChunk = false;\n\n              controller.enqueue({\n                type: 'response-metadata',\n                ...getResponseMetadata(value),\n              });\n            }\n\n            if (value.usage != null) {\n              const {\n                prompt_tokens,\n                completion_tokens,\n                prompt_tokens_details,\n                completion_tokens_details,\n              } = value.usage;\n\n              usage = {\n                promptTokens: prompt_tokens ?? undefined,\n                completionTokens: completion_tokens ?? undefined,\n              };\n\n              if (completion_tokens_details?.reasoning_tokens != null) {\n                providerMetadata.openai.reasoningTokens =\n                  completion_tokens_details?.reasoning_tokens;\n              }\n              if (\n                completion_tokens_details?.accepted_prediction_tokens != null\n              ) {\n                providerMetadata.openai.acceptedPredictionTokens =\n                  completion_tokens_details?.accepted_prediction_tokens;\n              }\n              if (\n                completion_tokens_details?.rejected_prediction_tokens != null\n              ) {\n                providerMetadata.openai.rejectedPredictionTokens =\n                  completion_tokens_details?.rejected_prediction_tokens;\n              }\n              if (prompt_tokens_details?.cached_tokens != null) {\n                providerMetadata.openai.cachedPromptTokens =\n                  prompt_tokens_details?.cached_tokens;\n              }\n            }\n\n            const choice = value.choices[0];\n\n            if (choice?.finish_reason != null) {\n              finishReason = mapOpenAIFinishReason(choice.finish_reason);\n            }\n\n            if (choice?.delta == null) {\n              return;\n            }\n\n            const delta = choice.delta;\n\n            if (delta.content != null) {\n              controller.enqueue({\n                type: 'text-delta',\n                textDelta: delta.content,\n              });\n            }\n\n            const mappedLogprobs = mapOpenAIChatLogProbsOutput(\n              choice?.logprobs,\n            );\n            if (mappedLogprobs?.length) {\n              if (logprobs === undefined) logprobs = [];\n              logprobs.push(...mappedLogprobs);\n            }\n\n            const mappedToolCalls: typeof delta.tool_calls =\n              useLegacyFunctionCalling && delta.function_call != null\n                ? [\n                    {\n                      type: 'function',\n                      id: generateId(),\n                      function: delta.function_call,\n                      index: 0,\n                    },\n                  ]\n                : delta.tool_calls;\n\n            if (mappedToolCalls != null) {\n              for (const toolCallDelta of mappedToolCalls) {\n                const index = toolCallDelta.index;\n\n                // Tool call start. OpenAI returns all information except the arguments in the first chunk.\n                if (toolCalls[index] == null) {\n                  if (toolCallDelta.type !== 'function') {\n                    throw new InvalidResponseDataError({\n                      data: toolCallDelta,\n                      message: `Expected 'function' type.`,\n                    });\n                  }\n\n                  if (toolCallDelta.id == null) {\n                    throw new InvalidResponseDataError({\n                      data: toolCallDelta,\n                      message: `Expected 'id' to be a string.`,\n                    });\n                  }\n\n                  if (toolCallDelta.function?.name == null) {\n                    throw new InvalidResponseDataError({\n                      data: toolCallDelta,\n                      message: `Expected 'function.name' to be a string.`,\n                    });\n                  }\n\n                  toolCalls[index] = {\n                    id: toolCallDelta.id,\n                    type: 'function',\n                    function: {\n                      name: toolCallDelta.function.name,\n                      arguments: toolCallDelta.function.arguments ?? '',\n                    },\n                    hasFinished: false,\n                  };\n\n                  const toolCall = toolCalls[index];\n\n                  if (\n                    toolCall.function?.name != null &&\n                    toolCall.function?.arguments != null\n                  ) {\n                    // send delta if the argument text has already started:\n                    if (toolCall.function.arguments.length > 0) {\n                      controller.enqueue({\n                        type: 'tool-call-delta',\n                        toolCallType: 'function',\n                        toolCallId: toolCall.id,\n                        toolName: toolCall.function.name,\n                        argsTextDelta: toolCall.function.arguments,\n                      });\n                    }\n\n                    // check if tool call is complete\n                    // (some providers send the full tool call in one chunk):\n                    if (isParsableJson(toolCall.function.arguments)) {\n                      controller.enqueue({\n                        type: 'tool-call',\n                        toolCallType: 'function',\n                        toolCallId: toolCall.id ?? generateId(),\n                        toolName: toolCall.function.name,\n                        args: toolCall.function.arguments,\n                      });\n                      toolCall.hasFinished = true;\n                    }\n                  }\n\n                  continue;\n                }\n\n                // existing tool call, merge if not finished\n                const toolCall = toolCalls[index];\n\n                if (toolCall.hasFinished) {\n                  continue;\n                }\n\n                if (toolCallDelta.function?.arguments != null) {\n                  toolCall.function!.arguments +=\n                    toolCallDelta.function?.arguments ?? '';\n                }\n\n                // send delta\n                controller.enqueue({\n                  type: 'tool-call-delta',\n                  toolCallType: 'function',\n                  toolCallId: toolCall.id,\n                  toolName: toolCall.function.name,\n                  argsTextDelta: toolCallDelta.function.arguments ?? '',\n                });\n\n                // check if tool call is complete\n                if (\n                  toolCall.function?.name != null &&\n                  toolCall.function?.arguments != null &&\n                  isParsableJson(toolCall.function.arguments)\n                ) {\n                  controller.enqueue({\n                    type: 'tool-call',\n                    toolCallType: 'function',\n                    toolCallId: toolCall.id ?? generateId(),\n                    toolName: toolCall.function.name,\n                    args: toolCall.function.arguments,\n                  });\n                  toolCall.hasFinished = true;\n                }\n              }\n            }\n          },\n\n          flush(controller) {\n            controller.enqueue({\n              type: 'finish',\n              finishReason,\n              logprobs,\n              usage: {\n                promptTokens: usage.promptTokens ?? NaN,\n                completionTokens: usage.completionTokens ?? NaN,\n              },\n              ...(providerMetadata != null ? { providerMetadata } : {}),\n            });\n          },\n        }),\n      ),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      request: { body: JSON.stringify(body) },\n      warnings,\n    };\n  }\n}\n\nconst openaiTokenUsageSchema = z\n  .object({\n    prompt_tokens: z.number().nullish(),\n    completion_tokens: z.number().nullish(),\n    prompt_tokens_details: z\n      .object({\n        cached_tokens: z.number().nullish(),\n      })\n      .nullish(),\n    completion_tokens_details: z\n      .object({\n        reasoning_tokens: z.number().nullish(),\n        accepted_prediction_tokens: z.number().nullish(),\n        rejected_prediction_tokens: z.number().nullish(),\n      })\n      .nullish(),\n  })\n  .nullish();\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst openaiChatResponseSchema = z.object({\n  id: z.string().nullish(),\n  created: z.number().nullish(),\n  model: z.string().nullish(),\n  choices: z.array(\n    z.object({\n      message: z.object({\n        role: z.literal('assistant').nullish(),\n        content: z.string().nullish(),\n        function_call: z\n          .object({\n            arguments: z.string(),\n            name: z.string(),\n          })\n          .nullish(),\n        tool_calls: z\n          .array(\n            z.object({\n              id: z.string().nullish(),\n              type: z.literal('function'),\n              function: z.object({\n                name: z.string(),\n                arguments: z.string(),\n              }),\n            }),\n          )\n          .nullish(),\n      }),\n      index: z.number(),\n      logprobs: z\n        .object({\n          content: z\n            .array(\n              z.object({\n                token: z.string(),\n                logprob: z.number(),\n                top_logprobs: z.array(\n                  z.object({\n                    token: z.string(),\n                    logprob: z.number(),\n                  }),\n                ),\n              }),\n            )\n            .nullable(),\n        })\n        .nullish(),\n      finish_reason: z.string().nullish(),\n    }),\n  ),\n  usage: openaiTokenUsageSchema,\n});\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst openaiChatChunkSchema = z.union([\n  z.object({\n    id: z.string().nullish(),\n    created: z.number().nullish(),\n    model: z.string().nullish(),\n    choices: z.array(\n      z.object({\n        delta: z\n          .object({\n            role: z.enum(['assistant']).nullish(),\n            content: z.string().nullish(),\n            function_call: z\n              .object({\n                name: z.string().optional(),\n                arguments: z.string().optional(),\n              })\n              .nullish(),\n            tool_calls: z\n              .array(\n                z.object({\n                  index: z.number(),\n                  id: z.string().nullish(),\n                  type: z.literal('function').optional(),\n                  function: z.object({\n                    name: z.string().nullish(),\n                    arguments: z.string().nullish(),\n                  }),\n                }),\n              )\n              .nullish(),\n          })\n          .nullish(),\n        logprobs: z\n          .object({\n            content: z\n              .array(\n                z.object({\n                  token: z.string(),\n                  logprob: z.number(),\n                  top_logprobs: z.array(\n                    z.object({\n                      token: z.string(),\n                      logprob: z.number(),\n                    }),\n                  ),\n                }),\n              )\n              .nullable(),\n          })\n          .nullish(),\n        finish_reason: z.string().nullable().optional(),\n        index: z.number(),\n      }),\n    ),\n    usage: openaiTokenUsageSchema,\n  }),\n  openaiErrorDataSchema,\n]);\n\nfunction isReasoningModel(modelId: string) {\n  return (\n    modelId === 'o1' ||\n    modelId.startsWith('o1-') ||\n    modelId === 'o3' ||\n    modelId.startsWith('o3-')\n  );\n}\n\nfunction isAudioModel(modelId: string) {\n  return modelId.startsWith('gpt-4o-audio-preview');\n}\n\nfunction getSystemMessageMode(modelId: string) {\n  if (!isReasoningModel(modelId)) {\n    return 'system';\n  }\n\n  return (\n    reasoningModels[modelId as keyof typeof reasoningModels]\n      ?.systemMessageMode ?? 'developer'\n  );\n}\n\nconst reasoningModels = {\n  'o1-mini': {\n    systemMessageMode: 'remove',\n  },\n  'o1-mini-2024-09-12': {\n    systemMessageMode: 'remove',\n  },\n  'o1-preview': {\n    systemMessageMode: 'remove',\n  },\n  'o1-preview-2024-09-12': {\n    systemMessageMode: 'remove',\n  },\n  'o3-mini': {\n    systemMessageMode: 'developer',\n  },\n  'o3-mini-2025-01-31': {\n    systemMessageMode: 'developer',\n  },\n} as const;\n", "import {\n  LanguageModelV1CallWarning,\n  LanguageModelV1Prompt,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport { convertUint8ArrayToBase64 } from '@ai-sdk/provider-utils';\nimport { OpenAIChatPrompt } from './openai-chat-prompt';\n\nexport function convertToOpenAIChatMessages({\n  prompt,\n  useLegacyFunctionCalling = false,\n  systemMessageMode = 'system',\n}: {\n  prompt: LanguageModelV1Prompt;\n  useLegacyFunctionCalling?: boolean;\n  systemMessageMode?: 'system' | 'developer' | 'remove';\n}): {\n  messages: OpenAIChatPrompt;\n  warnings: Array<LanguageModelV1CallWarning>;\n} {\n  const messages: OpenAIChatPrompt = [];\n  const warnings: Array<LanguageModelV1CallWarning> = [];\n\n  for (const { role, content } of prompt) {\n    switch (role) {\n      case 'system': {\n        switch (systemMessageMode) {\n          case 'system': {\n            messages.push({ role: 'system', content });\n            break;\n          }\n          case 'developer': {\n            messages.push({ role: 'developer', content });\n            break;\n          }\n          case 'remove': {\n            warnings.push({\n              type: 'other',\n              message: 'system messages are removed for this model',\n            });\n            break;\n          }\n          default: {\n            const _exhaustiveCheck: never = systemMessageMode;\n            throw new Error(\n              `Unsupported system message mode: ${_exhaustiveCheck}`,\n            );\n          }\n        }\n        break;\n      }\n\n      case 'user': {\n        if (content.length === 1 && content[0].type === 'text') {\n          messages.push({ role: 'user', content: content[0].text });\n          break;\n        }\n\n        messages.push({\n          role: 'user',\n          content: content.map((part, index) => {\n            switch (part.type) {\n              case 'text': {\n                return { type: 'text', text: part.text };\n              }\n              case 'image': {\n                return {\n                  type: 'image_url',\n                  image_url: {\n                    url:\n                      part.image instanceof URL\n                        ? part.image.toString()\n                        : `data:${\n                            part.mimeType ?? 'image/jpeg'\n                          };base64,${convertUint8ArrayToBase64(part.image)}`,\n\n                    // OpenAI specific extension: image detail\n                    detail: part.providerMetadata?.openai?.imageDetail,\n                  },\n                };\n              }\n              case 'file': {\n                if (part.data instanceof URL) {\n                  throw new UnsupportedFunctionalityError({\n                    functionality:\n                      \"'File content parts with URL data' functionality not supported.\",\n                  });\n                }\n\n                switch (part.mimeType) {\n                  case 'audio/wav': {\n                    return {\n                      type: 'input_audio',\n                      input_audio: { data: part.data, format: 'wav' },\n                    };\n                  }\n                  case 'audio/mp3':\n                  case 'audio/mpeg': {\n                    return {\n                      type: 'input_audio',\n                      input_audio: { data: part.data, format: 'mp3' },\n                    };\n                  }\n                  case 'application/pdf': {\n                    return {\n                      type: 'file',\n                      file: {\n                        filename: part.filename ?? `part-${index}.pdf`,\n                        file_data: `data:application/pdf;base64,${part.data}`,\n                      },\n                    };\n                  }\n                  default: {\n                    throw new UnsupportedFunctionalityError({\n                      functionality: `File content part type ${part.mimeType} in user messages`,\n                    });\n                  }\n                }\n              }\n            }\n          }),\n        });\n\n        break;\n      }\n\n      case 'assistant': {\n        let text = '';\n        const toolCalls: Array<{\n          id: string;\n          type: 'function';\n          function: { name: string; arguments: string };\n        }> = [];\n\n        for (const part of content) {\n          switch (part.type) {\n            case 'text': {\n              text += part.text;\n              break;\n            }\n            case 'tool-call': {\n              toolCalls.push({\n                id: part.toolCallId,\n                type: 'function',\n                function: {\n                  name: part.toolName,\n                  arguments: JSON.stringify(part.args),\n                },\n              });\n              break;\n            }\n          }\n        }\n\n        if (useLegacyFunctionCalling) {\n          if (toolCalls.length > 1) {\n            throw new UnsupportedFunctionalityError({\n              functionality:\n                'useLegacyFunctionCalling with multiple tool calls in one message',\n            });\n          }\n\n          messages.push({\n            role: 'assistant',\n            content: text,\n            function_call:\n              toolCalls.length > 0 ? toolCalls[0].function : undefined,\n          });\n        } else {\n          messages.push({\n            role: 'assistant',\n            content: text,\n            tool_calls: toolCalls.length > 0 ? toolCalls : undefined,\n          });\n        }\n\n        break;\n      }\n\n      case 'tool': {\n        for (const toolResponse of content) {\n          if (useLegacyFunctionCalling) {\n            messages.push({\n              role: 'function',\n              name: toolResponse.toolName,\n              content: JSON.stringify(toolResponse.result),\n            });\n          } else {\n            messages.push({\n              role: 'tool',\n              tool_call_id: toolResponse.toolCallId,\n              content: JSON.stringify(toolResponse.result),\n            });\n          }\n        }\n        break;\n      }\n\n      default: {\n        const _exhaustiveCheck: never = role;\n        throw new Error(`Unsupported role: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  return { messages, warnings };\n}\n", "import { LanguageModelV1LogProbs } from '@ai-sdk/provider';\n\ntype OpenAIChatLogProbs = {\n  content:\n    | {\n        token: string;\n        logprob: number;\n        top_logprobs:\n          | {\n              token: string;\n              logprob: number;\n            }[]\n          | null;\n      }[]\n    | null;\n};\n\nexport function mapOpenAIChatLogProbsOutput(\n  logprobs: OpenAIChatLogProbs | null | undefined,\n): LanguageModelV1LogProbs | undefined {\n  return (\n    logprobs?.content?.map(({ token, logprob, top_logprobs }) => ({\n      token,\n      logprob,\n      topLogprobs: top_logprobs\n        ? top_logprobs.map(({ token, logprob }) => ({\n            token,\n            logprob,\n          }))\n        : [],\n    })) ?? undefined\n  );\n}\n", "import { LanguageModelV1FinishReason } from '@ai-sdk/provider';\n\nexport function mapOpenAIFinishReason(\n  finishReason: string | null | undefined,\n): LanguageModelV1FinishReason {\n  switch (finishReason) {\n    case 'stop':\n      return 'stop';\n    case 'length':\n      return 'length';\n    case 'content_filter':\n      return 'content-filter';\n    case 'function_call':\n    case 'tool_calls':\n      return 'tool-calls';\n    default:\n      return 'unknown';\n  }\n}\n", "import { z } from 'zod';\nimport { createJsonErrorResponseHandler } from '@ai-sdk/provider-utils';\n\nexport const openaiErrorDataSchema = z.object({\n  error: z.object({\n    message: z.string(),\n\n    // The additional information below is handled loosely to support\n    // OpenAI-compatible providers that have slightly different error\n    // responses:\n    type: z.string().nullish(),\n    param: z.any().nullish(),\n    code: z.union([z.string(), z.number()]).nullish(),\n  }),\n});\n\nexport type OpenAIErrorData = z.infer<typeof openaiErrorDataSchema>;\n\nexport const openaiFailedResponseHandler = createJsonErrorResponseHandler({\n  errorSchema: openaiErrorDataSchema,\n  errorToMessage: data => data.error.message,\n});\n", "export function getResponseMetadata({\n  id,\n  model,\n  created,\n}: {\n  id?: string | undefined | null;\n  created?: number | undefined | null;\n  model?: string | undefined | null;\n}) {\n  return {\n    id: id ?? undefined,\n    modelId: model ?? undefined,\n    timestamp: created != null ? new Date(created * 1000) : undefined,\n  };\n}\n", "import {\n  JSONSchema7,\n  LanguageModelV1,\n  LanguageModelV1CallWarning,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\n\nexport function prepareTools({\n  mode,\n  useLegacyFunctionCalling = false,\n  structuredOutputs,\n}: {\n  mode: Parameters<LanguageModelV1['doGenerate']>[0]['mode'] & {\n    type: 'regular';\n  };\n  useLegacyFunctionCalling: boolean | undefined;\n  structuredOutputs: boolean;\n}): {\n  tools?: {\n    type: 'function';\n    function: {\n      name: string;\n      description: string | undefined;\n      parameters: JSONSchema7;\n      strict?: boolean;\n    };\n  }[];\n  tool_choice?:\n    | 'auto'\n    | 'none'\n    | 'required'\n    | { type: 'function'; function: { name: string } };\n\n  // legacy support\n  functions?: {\n    name: string;\n    description: string | undefined;\n    parameters: JSONSchema7;\n  }[];\n  function_call?: { name: string };\n  toolWarnings: Array<LanguageModelV1CallWarning>;\n} {\n  // when the tools array is empty, change it to undefined to prevent errors:\n  const tools = mode.tools?.length ? mode.tools : undefined;\n\n  const toolWarnings: LanguageModelV1CallWarning[] = [];\n\n  if (tools == null) {\n    return { tools: undefined, tool_choice: undefined, toolWarnings };\n  }\n\n  const toolChoice = mode.toolChoice;\n\n  if (useLegacyFunctionCalling) {\n    const openaiFunctions: Array<{\n      name: string;\n      description: string | undefined;\n      parameters: JSONSchema7;\n    }> = [];\n\n    for (const tool of tools) {\n      if (tool.type === 'provider-defined') {\n        toolWarnings.push({ type: 'unsupported-tool', tool });\n      } else {\n        openaiFunctions.push({\n          name: tool.name,\n          description: tool.description,\n          parameters: tool.parameters,\n        });\n      }\n    }\n\n    if (toolChoice == null) {\n      return {\n        functions: openaiFunctions,\n        function_call: undefined,\n        toolWarnings,\n      };\n    }\n\n    const type = toolChoice.type;\n\n    switch (type) {\n      case 'auto':\n      case 'none':\n      case undefined:\n        return {\n          functions: openaiFunctions,\n          function_call: undefined,\n          toolWarnings,\n        };\n      case 'required':\n        throw new UnsupportedFunctionalityError({\n          functionality: 'useLegacyFunctionCalling and toolChoice: required',\n        });\n      default:\n        return {\n          functions: openaiFunctions,\n          function_call: { name: toolChoice.toolName },\n          toolWarnings,\n        };\n    }\n  }\n\n  const openaiTools: Array<{\n    type: 'function';\n    function: {\n      name: string;\n      description: string | undefined;\n      parameters: JSONSchema7;\n      strict: boolean | undefined;\n    };\n  }> = [];\n\n  for (const tool of tools) {\n    if (tool.type === 'provider-defined') {\n      toolWarnings.push({ type: 'unsupported-tool', tool });\n    } else {\n      openaiTools.push({\n        type: 'function',\n        function: {\n          name: tool.name,\n          description: tool.description,\n          parameters: tool.parameters,\n          strict: structuredOutputs ? true : undefined,\n        },\n      });\n    }\n  }\n\n  if (toolChoice == null) {\n    return { tools: openaiTools, tool_choice: undefined, toolWarnings };\n  }\n\n  const type = toolChoice.type;\n\n  switch (type) {\n    case 'auto':\n    case 'none':\n    case 'required':\n      return { tools: openaiTools, tool_choice: type, toolWarnings };\n    case 'tool':\n      return {\n        tools: openaiTools,\n        tool_choice: {\n          type: 'function',\n          function: {\n            name: toolChoice.toolName,\n          },\n        },\n        toolWarnings,\n      };\n    default: {\n      const _exhaustiveCheck: never = type;\n      throw new UnsupportedFunctionalityError({\n        functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`,\n      });\n    }\n  }\n}\n", "import {\n  LanguageModelV1,\n  LanguageModelV1CallWarning,\n  LanguageModelV1FinishReason,\n  LanguageModelV1LogProbs,\n  LanguageModelV1StreamPart,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport {\n  FetchFunction,\n  ParseResult,\n  combineHeaders,\n  createEventSourceResponseHandler,\n  createJsonResponseHandler,\n  postJsonToApi,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { convertToOpenAICompletionPrompt } from './convert-to-openai-completion-prompt';\nimport { mapOpenAICompletionLogProbs } from './map-openai-completion-logprobs';\nimport { mapOpenAIFinishReason } from './map-openai-finish-reason';\nimport {\n  OpenAICompletionModelId,\n  OpenAICompletionSettings,\n} from './openai-completion-settings';\nimport {\n  openaiErrorDataSchema,\n  openaiFailedResponseHandler,\n} from './openai-error';\nimport { getResponseMetadata } from './get-response-metadata';\n\ntype OpenAICompletionConfig = {\n  provider: string;\n  compatibility: 'strict' | 'compatible';\n  headers: () => Record<string, string | undefined>;\n  url: (options: { modelId: string; path: string }) => string;\n  fetch?: FetchFunction;\n};\n\nexport class OpenAICompletionLanguageModel implements LanguageModelV1 {\n  readonly specificationVersion = 'v1';\n  readonly defaultObjectGenerationMode = undefined;\n\n  readonly modelId: OpenAICompletionModelId;\n  readonly settings: OpenAICompletionSettings;\n\n  private readonly config: OpenAICompletionConfig;\n\n  constructor(\n    modelId: OpenAICompletionModelId,\n    settings: OpenAICompletionSettings,\n    config: OpenAICompletionConfig,\n  ) {\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  private getArgs({\n    mode,\n    inputFormat,\n    prompt,\n    maxTokens,\n    temperature,\n    topP,\n    topK,\n    frequencyPenalty,\n    presencePenalty,\n    stopSequences: userStopSequences,\n    responseFormat,\n    seed,\n  }: Parameters<LanguageModelV1['doGenerate']>[0]) {\n    const type = mode.type;\n\n    const warnings: LanguageModelV1CallWarning[] = [];\n\n    if (topK != null) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'topK',\n      });\n    }\n\n    if (responseFormat != null && responseFormat.type !== 'text') {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'responseFormat',\n        details: 'JSON response format is not supported.',\n      });\n    }\n\n    const { prompt: completionPrompt, stopSequences } =\n      convertToOpenAICompletionPrompt({ prompt, inputFormat });\n\n    const stop = [...(stopSequences ?? []), ...(userStopSequences ?? [])];\n\n    const baseArgs = {\n      // model id:\n      model: this.modelId,\n\n      // model specific settings:\n      echo: this.settings.echo,\n      logit_bias: this.settings.logitBias,\n      logprobs:\n        typeof this.settings.logprobs === 'number'\n          ? this.settings.logprobs\n          : typeof this.settings.logprobs === 'boolean'\n            ? this.settings.logprobs\n              ? 0\n              : undefined\n            : undefined,\n      suffix: this.settings.suffix,\n      user: this.settings.user,\n\n      // standardized settings:\n      max_tokens: maxTokens,\n      temperature,\n      top_p: topP,\n      frequency_penalty: frequencyPenalty,\n      presence_penalty: presencePenalty,\n      seed,\n\n      // prompt:\n      prompt: completionPrompt,\n\n      // stop sequences:\n      stop: stop.length > 0 ? stop : undefined,\n    };\n\n    switch (type) {\n      case 'regular': {\n        if (mode.tools?.length) {\n          throw new UnsupportedFunctionalityError({\n            functionality: 'tools',\n          });\n        }\n\n        if (mode.toolChoice) {\n          throw new UnsupportedFunctionalityError({\n            functionality: 'toolChoice',\n          });\n        }\n\n        return { args: baseArgs, warnings };\n      }\n\n      case 'object-json': {\n        throw new UnsupportedFunctionalityError({\n          functionality: 'object-json mode',\n        });\n      }\n\n      case 'object-tool': {\n        throw new UnsupportedFunctionalityError({\n          functionality: 'object-tool mode',\n        });\n      }\n\n      default: {\n        const _exhaustiveCheck: never = type;\n        throw new Error(`Unsupported type: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  async doGenerate(\n    options: Parameters<LanguageModelV1['doGenerate']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doGenerate']>>> {\n    const { args, warnings } = this.getArgs(options);\n\n    const {\n      responseHeaders,\n      value: response,\n      rawValue: rawResponse,\n    } = await postJsonToApi({\n      url: this.config.url({\n        path: '/completions',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body: args,\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        openaiCompletionResponseSchema,\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { prompt: rawPrompt, ...rawSettings } = args;\n    const choice = response.choices[0];\n\n    return {\n      text: choice.text,\n      usage: {\n        promptTokens: response.usage.prompt_tokens,\n        completionTokens: response.usage.completion_tokens,\n      },\n      finishReason: mapOpenAIFinishReason(choice.finish_reason),\n      logprobs: mapOpenAICompletionLogProbs(choice.logprobs),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders, body: rawResponse },\n      response: getResponseMetadata(response),\n      warnings,\n      request: { body: JSON.stringify(args) },\n    };\n  }\n\n  async doStream(\n    options: Parameters<LanguageModelV1['doStream']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doStream']>>> {\n    const { args, warnings } = this.getArgs(options);\n\n    const body = {\n      ...args,\n      stream: true,\n\n      // only include stream_options when in strict compatibility mode:\n      stream_options:\n        this.config.compatibility === 'strict'\n          ? { include_usage: true }\n          : undefined,\n    };\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.config.url({\n        path: '/completions',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body,\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createEventSourceResponseHandler(\n        openaiCompletionChunkSchema,\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const { prompt: rawPrompt, ...rawSettings } = args;\n\n    let finishReason: LanguageModelV1FinishReason = 'unknown';\n    let usage: { promptTokens: number; completionTokens: number } = {\n      promptTokens: Number.NaN,\n      completionTokens: Number.NaN,\n    };\n    let logprobs: LanguageModelV1LogProbs;\n    let isFirstChunk = true;\n\n    return {\n      stream: response.pipeThrough(\n        new TransformStream<\n          ParseResult<z.infer<typeof openaiCompletionChunkSchema>>,\n          LanguageModelV1StreamPart\n        >({\n          transform(chunk, controller) {\n            // handle failed chunk parsing / validation:\n            if (!chunk.success) {\n              finishReason = 'error';\n              controller.enqueue({ type: 'error', error: chunk.error });\n              return;\n            }\n\n            const value = chunk.value;\n\n            // handle error chunks:\n            if ('error' in value) {\n              finishReason = 'error';\n              controller.enqueue({ type: 'error', error: value.error });\n              return;\n            }\n\n            if (isFirstChunk) {\n              isFirstChunk = false;\n\n              controller.enqueue({\n                type: 'response-metadata',\n                ...getResponseMetadata(value),\n              });\n            }\n\n            if (value.usage != null) {\n              usage = {\n                promptTokens: value.usage.prompt_tokens,\n                completionTokens: value.usage.completion_tokens,\n              };\n            }\n\n            const choice = value.choices[0];\n\n            if (choice?.finish_reason != null) {\n              finishReason = mapOpenAIFinishReason(choice.finish_reason);\n            }\n\n            if (choice?.text != null) {\n              controller.enqueue({\n                type: 'text-delta',\n                textDelta: choice.text,\n              });\n            }\n\n            const mappedLogprobs = mapOpenAICompletionLogProbs(\n              choice?.logprobs,\n            );\n            if (mappedLogprobs?.length) {\n              if (logprobs === undefined) logprobs = [];\n              logprobs.push(...mappedLogprobs);\n            }\n          },\n\n          flush(controller) {\n            controller.enqueue({\n              type: 'finish',\n              finishReason,\n              logprobs,\n              usage,\n            });\n          },\n        }),\n      ),\n      rawCall: { rawPrompt, rawSettings },\n      rawResponse: { headers: responseHeaders },\n      warnings,\n      request: { body: JSON.stringify(body) },\n    };\n  }\n}\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst openaiCompletionResponseSchema = z.object({\n  id: z.string().nullish(),\n  created: z.number().nullish(),\n  model: z.string().nullish(),\n  choices: z.array(\n    z.object({\n      text: z.string(),\n      finish_reason: z.string(),\n      logprobs: z\n        .object({\n          tokens: z.array(z.string()),\n          token_logprobs: z.array(z.number()),\n          top_logprobs: z.array(z.record(z.string(), z.number())).nullable(),\n        })\n        .nullish(),\n    }),\n  ),\n  usage: z.object({\n    prompt_tokens: z.number(),\n    completion_tokens: z.number(),\n  }),\n});\n\n// limited version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst openaiCompletionChunkSchema = z.union([\n  z.object({\n    id: z.string().nullish(),\n    created: z.number().nullish(),\n    model: z.string().nullish(),\n    choices: z.array(\n      z.object({\n        text: z.string(),\n        finish_reason: z.string().nullish(),\n        index: z.number(),\n        logprobs: z\n          .object({\n            tokens: z.array(z.string()),\n            token_logprobs: z.array(z.number()),\n            top_logprobs: z.array(z.record(z.string(), z.number())).nullable(),\n          })\n          .nullish(),\n      }),\n    ),\n    usage: z\n      .object({\n        prompt_tokens: z.number(),\n        completion_tokens: z.number(),\n      })\n      .nullish(),\n  }),\n  openaiErrorDataSchema,\n]);\n", "import {\n  InvalidPromptError,\n  LanguageModelV1Prompt,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\n\nexport function convertToOpenAICompletionPrompt({\n  prompt,\n  inputFormat,\n  user = 'user',\n  assistant = 'assistant',\n}: {\n  prompt: LanguageModelV1Prompt;\n  inputFormat: 'prompt' | 'messages';\n  user?: string;\n  assistant?: string;\n}): {\n  prompt: string;\n  stopSequences?: string[];\n} {\n  // When the user supplied a prompt input, we don't transform it:\n  if (\n    inputFormat === 'prompt' &&\n    prompt.length === 1 &&\n    prompt[0].role === 'user' &&\n    prompt[0].content.length === 1 &&\n    prompt[0].content[0].type === 'text'\n  ) {\n    return { prompt: prompt[0].content[0].text };\n  }\n\n  // otherwise transform to a chat message format:\n  let text = '';\n\n  // if first message is a system message, add it to the text:\n  if (prompt[0].role === 'system') {\n    text += `${prompt[0].content}\\n\\n`;\n    prompt = prompt.slice(1);\n  }\n\n  for (const { role, content } of prompt) {\n    switch (role) {\n      case 'system': {\n        throw new InvalidPromptError({\n          message: 'Unexpected system message in prompt: ${content}',\n          prompt,\n        });\n      }\n\n      case 'user': {\n        const userMessage = content\n          .map(part => {\n            switch (part.type) {\n              case 'text': {\n                return part.text;\n              }\n              case 'image': {\n                throw new UnsupportedFunctionalityError({\n                  functionality: 'images',\n                });\n              }\n            }\n          })\n          .join('');\n\n        text += `${user}:\\n${userMessage}\\n\\n`;\n        break;\n      }\n\n      case 'assistant': {\n        const assistantMessage = content\n          .map(part => {\n            switch (part.type) {\n              case 'text': {\n                return part.text;\n              }\n              case 'tool-call': {\n                throw new UnsupportedFunctionalityError({\n                  functionality: 'tool-call messages',\n                });\n              }\n            }\n          })\n          .join('');\n\n        text += `${assistant}:\\n${assistantMessage}\\n\\n`;\n        break;\n      }\n\n      case 'tool': {\n        throw new UnsupportedFunctionalityError({\n          functionality: 'tool messages',\n        });\n      }\n\n      default: {\n        const _exhaustiveCheck: never = role;\n        throw new Error(`Unsupported role: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  // Assistant message prefix:\n  text += `${assistant}:\\n`;\n\n  return {\n    prompt: text,\n    stopSequences: [`\\n${user}:`],\n  };\n}\n", "import { LanguageModelV1LogProbs } from '@ai-sdk/provider';\n\ntype OpenAICompletionLogProps = {\n  tokens: string[];\n  token_logprobs: number[];\n  top_logprobs: Record<string, number>[] | null;\n};\n\nexport function mapOpenAICompletionLogProbs(\n  logprobs: OpenAICompletionLogProps | null | undefined,\n): LanguageModelV1LogProbs | undefined {\n  return logprobs?.tokens.map((token, index) => ({\n    token,\n    logprob: logprobs.token_logprobs[index],\n    topLogprobs: logprobs.top_logprobs\n      ? Object.entries(logprobs.top_logprobs[index]).map(\n          ([token, logprob]) => ({\n            token,\n            logprob,\n          }),\n        )\n      : [],\n  }));\n}\n", "import {\n  EmbeddingModelV1,\n  TooManyEmbeddingValuesForCallError,\n} from '@ai-sdk/provider';\nimport {\n  combineHeaders,\n  createJsonResponseHandler,\n  postJsonToApi,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { OpenAIConfig } from './openai-config';\nimport {\n  OpenAIEmbeddingModelId,\n  OpenAIEmbeddingSettings,\n} from './openai-embedding-settings';\nimport { openaiFailedResponseHandler } from './openai-error';\n\nexport class OpenAIEmbeddingModel implements EmbeddingModelV1<string> {\n  readonly specificationVersion = 'v1';\n  readonly modelId: OpenAIEmbeddingModelId;\n\n  private readonly config: OpenAIConfig;\n  private readonly settings: OpenAIEmbeddingSettings;\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  get maxEmbeddingsPerCall(): number {\n    return this.settings.maxEmbeddingsPerCall ?? 2048;\n  }\n\n  get supportsParallelCalls(): boolean {\n    return this.settings.supportsParallelCalls ?? true;\n  }\n\n  constructor(\n    modelId: OpenAIEmbeddingModelId,\n    settings: OpenAIEmbeddingSettings,\n    config: OpenAIConfig,\n  ) {\n    this.modelId = modelId;\n    this.settings = settings;\n    this.config = config;\n  }\n\n  async doEmbed({\n    values,\n    headers,\n    abortSignal,\n  }: Parameters<EmbeddingModelV1<string>['doEmbed']>[0]): Promise<\n    Awaited<ReturnType<EmbeddingModelV1<string>['doEmbed']>>\n  > {\n    if (values.length > this.maxEmbeddingsPerCall) {\n      throw new TooManyEmbeddingValuesForCallError({\n        provider: this.provider,\n        modelId: this.modelId,\n        maxEmbeddingsPerCall: this.maxEmbeddingsPerCall,\n        values,\n      });\n    }\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.config.url({\n        path: '/embeddings',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), headers),\n      body: {\n        model: this.modelId,\n        input: values,\n        encoding_format: 'float',\n        dimensions: this.settings.dimensions,\n        user: this.settings.user,\n      },\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        openaiTextEmbeddingResponseSchema,\n      ),\n      abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    return {\n      embeddings: response.data.map(item => item.embedding),\n      usage: response.usage\n        ? { tokens: response.usage.prompt_tokens }\n        : undefined,\n      rawResponse: { headers: responseHeaders },\n    };\n  }\n}\n\n// minimal version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst openaiTextEmbeddingResponseSchema = z.object({\n  data: z.array(z.object({ embedding: z.array(z.number()) })),\n  usage: z.object({ prompt_tokens: z.number() }).nullish(),\n});\n", "import { ImageModelV1, ImageModelV1CallWarning } from '@ai-sdk/provider';\nimport {\n  combineHeaders,\n  createJsonResponseHandler,\n  postJsonToApi,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { OpenAIConfig } from './openai-config';\nimport { openaiFailedResponseHandler } from './openai-error';\nimport {\n  OpenAIImageModelId,\n  OpenAIImageSettings,\n  modelMaxImagesPerCall,\n} from './openai-image-settings';\n\ninterface OpenAIImageModelConfig extends OpenAIConfig {\n  _internal?: {\n    currentDate?: () => Date;\n  };\n}\n\nexport class OpenAIImageModel implements ImageModelV1 {\n  readonly specificationVersion = 'v1';\n\n  get maxImagesPerCall(): number {\n    return (\n      this.settings.maxImagesPerCall ?? modelMaxImagesPerCall[this.modelId] ?? 1\n    );\n  }\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  constructor(\n    readonly modelId: OpenAIImageModelId,\n    private readonly settings: OpenAIImageSettings,\n    private readonly config: OpenAIImageModelConfig,\n  ) {}\n\n  async doGenerate({\n    prompt,\n    n,\n    size,\n    aspectRatio,\n    seed,\n    providerOptions,\n    headers,\n    abortSignal,\n  }: Parameters<ImageModelV1['doGenerate']>[0]): Promise<\n    Awaited<ReturnType<ImageModelV1['doGenerate']>>\n  > {\n    const warnings: Array<ImageModelV1CallWarning> = [];\n\n    if (aspectRatio != null) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'aspectRatio',\n        details:\n          'This model does not support aspect ratio. Use `size` instead.',\n      });\n    }\n\n    if (seed != null) {\n      warnings.push({ type: 'unsupported-setting', setting: 'seed' });\n    }\n\n    const currentDate = this.config._internal?.currentDate?.() ?? new Date();\n    const { value: response, responseHeaders } = await postJsonToApi({\n      url: this.config.url({\n        path: '/images/generations',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), headers),\n      body: {\n        model: this.modelId,\n        prompt,\n        n,\n        size,\n        ...(providerOptions.openai ?? {}),\n        response_format: 'b64_json',\n      },\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        openaiImageResponseSchema,\n      ),\n      abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    return {\n      images: response.data.map(item => item.b64_json),\n      warnings,\n      response: {\n        timestamp: currentDate,\n        modelId: this.modelId,\n        headers: responseHeaders,\n      },\n    };\n  }\n}\n\n// minimal version of the schema, focussed on what is needed for the implementation\n// this approach limits breakages when the API changes and increases efficiency\nconst openaiImageResponseSchema = z.object({\n  data: z.array(z.object({ b64_json: z.string() })),\n});\n", "export type OpenAIImageModelId = 'dall-e-3' | 'dall-e-2' | (string & {});\n\n// https://platform.openai.com/docs/guides/images\nexport const modelMaxImagesPerCall: Record<OpenAIImageModelId, number> = {\n  'dall-e-3': 1,\n  'dall-e-2': 10,\n};\n\nexport interface OpenAIImageSettings {\n  /**\nOverride the maximum number of images per call (default is dependent on the\nmodel, or 1 for an unknown model).\n   */\n  maxImagesPerCall?: number;\n}\n", "import {\n  InvalidArgumentError,\n  LanguageModelV1,\n  LanguageModelV1CallWarning,\n  LanguageModelV1FinishReason,\n  LanguageModelV1StreamPart,\n} from '@ai-sdk/provider';\nimport {\n  combineHeaders,\n  createEventSourceResponseHandler,\n  createJsonResponseHandler,\n  generateId,\n  ParseResult,\n  postJsonToApi,\n  safeValidateTypes,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod';\nimport { OpenAIConfig } from '../openai-config';\nimport { openaiFailedResponseHandler } from '../openai-error';\nimport { convertToOpenAIResponsesMessages } from './convert-to-openai-responses-messages';\nimport { mapOpenAIResponseFinishReason } from './map-openai-responses-finish-reason';\nimport { prepareResponsesTools } from './openai-responses-prepare-tools';\nimport { OpenAIResponsesModelId } from './openai-responses-settings';\n\nexport class OpenAIResponsesLanguageModel implements LanguageModelV1 {\n  readonly specificationVersion = 'v1';\n  readonly defaultObjectGenerationMode = 'json';\n\n  readonly modelId: OpenAIResponsesModelId;\n\n  private readonly config: OpenAIConfig;\n\n  constructor(modelId: OpenAIResponsesModelId, config: OpenAIConfig) {\n    this.modelId = modelId;\n    this.config = config;\n  }\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  private getArgs({\n    mode,\n    maxTokens,\n    temperature,\n    stopSequences,\n    topP,\n    topK,\n    presencePenalty,\n    frequencyPenalty,\n    seed,\n    prompt,\n    providerMetadata,\n    responseFormat,\n  }: Parameters<LanguageModelV1['doGenerate']>[0]) {\n    const warnings: LanguageModelV1CallWarning[] = [];\n    const modelConfig = getResponsesModelConfig(this.modelId);\n    const type = mode.type;\n\n    if (topK != null) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'topK',\n      });\n    }\n\n    if (seed != null) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'seed',\n      });\n    }\n\n    if (presencePenalty != null) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'presencePenalty',\n      });\n    }\n\n    if (frequencyPenalty != null) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'frequencyPenalty',\n      });\n    }\n\n    if (stopSequences != null) {\n      warnings.push({\n        type: 'unsupported-setting',\n        setting: 'stopSequences',\n      });\n    }\n\n    const { messages, warnings: messageWarnings } =\n      convertToOpenAIResponsesMessages({\n        prompt,\n        systemMessageMode: modelConfig.systemMessageMode,\n      });\n\n    warnings.push(...messageWarnings);\n\n    // parse and validate provider options:\n    const parsedProviderOptions =\n      providerMetadata != null\n        ? safeValidateTypes({\n            value: providerMetadata,\n            schema: providerOptionsSchema,\n          })\n        : { success: true as const, value: undefined };\n    if (!parsedProviderOptions.success) {\n      throw new InvalidArgumentError({\n        argument: 'providerOptions',\n        message: 'invalid provider options',\n        cause: parsedProviderOptions.error,\n      });\n    }\n    const openaiOptions = parsedProviderOptions.value?.openai;\n\n    const isStrict = openaiOptions?.strictSchemas ?? true;\n\n    const baseArgs = {\n      model: this.modelId,\n      input: messages,\n      temperature,\n      top_p: topP,\n      max_output_tokens: maxTokens,\n\n      ...(responseFormat?.type === 'json' && {\n        text: {\n          format:\n            responseFormat.schema != null\n              ? {\n                  type: 'json_schema',\n                  strict: isStrict,\n                  name: responseFormat.name ?? 'response',\n                  description: responseFormat.description,\n                  schema: responseFormat.schema,\n                }\n              : { type: 'json_object' },\n        },\n      }),\n\n      // provider options:\n      metadata: openaiOptions?.metadata,\n      parallel_tool_calls: openaiOptions?.parallelToolCalls,\n      previous_response_id: openaiOptions?.previousResponseId,\n      store: openaiOptions?.store,\n      user: openaiOptions?.user,\n\n      // model-specific settings:\n      ...(modelConfig.isReasoningModel &&\n        openaiOptions?.reasoningEffort != null && {\n          reasoning: { effort: openaiOptions?.reasoningEffort },\n        }),\n      ...(modelConfig.requiredAutoTruncation && {\n        truncation: 'auto',\n      }),\n    };\n\n    if (modelConfig.isReasoningModel) {\n      // remove unsupported settings for reasoning models\n      // see https://platform.openai.com/docs/guides/reasoning#limitations\n      if (baseArgs.temperature != null) {\n        baseArgs.temperature = undefined;\n        warnings.push({\n          type: 'unsupported-setting',\n          setting: 'temperature',\n          details: 'temperature is not supported for reasoning models',\n        });\n      }\n\n      if (baseArgs.top_p != null) {\n        baseArgs.top_p = undefined;\n        warnings.push({\n          type: 'unsupported-setting',\n          setting: 'topP',\n          details: 'topP is not supported for reasoning models',\n        });\n      }\n    }\n\n    switch (type) {\n      case 'regular': {\n        const { tools, tool_choice, toolWarnings } = prepareResponsesTools({\n          mode,\n          strict: isStrict, // TODO support provider options on tools\n        });\n\n        return {\n          args: {\n            ...baseArgs,\n            tools,\n            tool_choice,\n          },\n          warnings: [...warnings, ...toolWarnings],\n        };\n      }\n\n      case 'object-json': {\n        return {\n          args: {\n            ...baseArgs,\n            text: {\n              format:\n                mode.schema != null\n                  ? {\n                      type: 'json_schema',\n                      strict: isStrict,\n                      name: mode.name ?? 'response',\n                      description: mode.description,\n                      schema: mode.schema,\n                    }\n                  : { type: 'json_object' },\n            },\n          },\n          warnings,\n        };\n      }\n\n      case 'object-tool': {\n        return {\n          args: {\n            ...baseArgs,\n            tool_choice: { type: 'function', name: mode.tool.name },\n            tools: [\n              {\n                type: 'function',\n                name: mode.tool.name,\n                description: mode.tool.description,\n                parameters: mode.tool.parameters,\n                strict: isStrict,\n              },\n            ],\n          },\n          warnings,\n        };\n      }\n\n      default: {\n        const _exhaustiveCheck: never = type;\n        throw new Error(`Unsupported type: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  async doGenerate(\n    options: Parameters<LanguageModelV1['doGenerate']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doGenerate']>>> {\n    const { args: body, warnings } = this.getArgs(options);\n\n    const {\n      responseHeaders,\n      value: response,\n      rawValue: rawResponse,\n    } = await postJsonToApi({\n      url: this.config.url({\n        path: '/responses',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body,\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createJsonResponseHandler(\n        z.object({\n          id: z.string(),\n          created_at: z.number(),\n          model: z.string(),\n          output: z.array(\n            z.discriminatedUnion('type', [\n              z.object({\n                type: z.literal('message'),\n                role: z.literal('assistant'),\n                content: z.array(\n                  z.object({\n                    type: z.literal('output_text'),\n                    text: z.string(),\n                    annotations: z.array(\n                      z.object({\n                        type: z.literal('url_citation'),\n                        start_index: z.number(),\n                        end_index: z.number(),\n                        url: z.string(),\n                        title: z.string(),\n                      }),\n                    ),\n                  }),\n                ),\n              }),\n              z.object({\n                type: z.literal('function_call'),\n                call_id: z.string(),\n                name: z.string(),\n                arguments: z.string(),\n              }),\n              z.object({\n                type: z.literal('web_search_call'),\n              }),\n              z.object({\n                type: z.literal('computer_call'),\n              }),\n              z.object({\n                type: z.literal('reasoning'),\n              }),\n            ]),\n          ),\n          incomplete_details: z.object({ reason: z.string() }).nullable(),\n          usage: usageSchema,\n        }),\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const outputTextElements = response.output\n      .filter(output => output.type === 'message')\n      .flatMap(output => output.content)\n      .filter(content => content.type === 'output_text');\n\n    const toolCalls = response.output\n      .filter(output => output.type === 'function_call')\n      .map(output => ({\n        toolCallType: 'function' as const,\n        toolCallId: output.call_id,\n        toolName: output.name,\n        args: output.arguments,\n      }));\n\n    return {\n      text: outputTextElements.map(content => content.text).join('\\n'),\n      sources: outputTextElements.flatMap(content =>\n        content.annotations.map(annotation => ({\n          sourceType: 'url',\n          id: this.config.generateId?.() ?? generateId(),\n          url: annotation.url,\n          title: annotation.title,\n        })),\n      ),\n      finishReason: mapOpenAIResponseFinishReason({\n        finishReason: response.incomplete_details?.reason,\n        hasToolCalls: toolCalls.length > 0,\n      }),\n      toolCalls: toolCalls.length > 0 ? toolCalls : undefined,\n      usage: {\n        promptTokens: response.usage.input_tokens,\n        completionTokens: response.usage.output_tokens,\n      },\n      rawCall: {\n        rawPrompt: undefined,\n        rawSettings: {},\n      },\n      rawResponse: {\n        headers: responseHeaders,\n        body: rawResponse,\n      },\n      request: {\n        body: JSON.stringify(body),\n      },\n      response: {\n        id: response.id,\n        timestamp: new Date(response.created_at * 1000),\n        modelId: response.model,\n      },\n      providerMetadata: {\n        openai: {\n          responseId: response.id,\n          cachedPromptTokens:\n            response.usage.input_tokens_details?.cached_tokens ?? null,\n          reasoningTokens:\n            response.usage.output_tokens_details?.reasoning_tokens ?? null,\n        },\n      },\n      warnings,\n    };\n  }\n\n  async doStream(\n    options: Parameters<LanguageModelV1['doStream']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV1['doStream']>>> {\n    const { args: body, warnings } = this.getArgs(options);\n\n    const { responseHeaders, value: response } = await postJsonToApi({\n      url: this.config.url({\n        path: '/responses',\n        modelId: this.modelId,\n      }),\n      headers: combineHeaders(this.config.headers(), options.headers),\n      body: {\n        ...body,\n        stream: true,\n      },\n      failedResponseHandler: openaiFailedResponseHandler,\n      successfulResponseHandler: createEventSourceResponseHandler(\n        openaiResponsesChunkSchema,\n      ),\n      abortSignal: options.abortSignal,\n      fetch: this.config.fetch,\n    });\n\n    const self = this;\n\n    let finishReason: LanguageModelV1FinishReason = 'unknown';\n    let promptTokens = NaN;\n    let completionTokens = NaN;\n    let cachedPromptTokens: number | null = null;\n    let reasoningTokens: number | null = null;\n    let responseId: string | null = null;\n    const ongoingToolCalls: Record<\n      number,\n      { toolName: string; toolCallId: string } | undefined\n    > = {};\n    let hasToolCalls = false;\n\n    return {\n      stream: response.pipeThrough(\n        new TransformStream<\n          ParseResult<z.infer<typeof openaiResponsesChunkSchema>>,\n          LanguageModelV1StreamPart\n        >({\n          transform(chunk, controller) {\n            // handle failed chunk parsing / validation:\n            if (!chunk.success) {\n              finishReason = 'error';\n              controller.enqueue({ type: 'error', error: chunk.error });\n              return;\n            }\n\n            const value = chunk.value;\n\n            if (isResponseOutputItemAddedChunk(value)) {\n              if (value.item.type === 'function_call') {\n                ongoingToolCalls[value.output_index] = {\n                  toolName: value.item.name,\n                  toolCallId: value.item.call_id,\n                };\n\n                controller.enqueue({\n                  type: 'tool-call-delta',\n                  toolCallType: 'function',\n                  toolCallId: value.item.call_id,\n                  toolName: value.item.name,\n                  argsTextDelta: value.item.arguments,\n                });\n              }\n            } else if (isResponseFunctionCallArgumentsDeltaChunk(value)) {\n              const toolCall = ongoingToolCalls[value.output_index];\n\n              if (toolCall != null) {\n                controller.enqueue({\n                  type: 'tool-call-delta',\n                  toolCallType: 'function',\n                  toolCallId: toolCall.toolCallId,\n                  toolName: toolCall.toolName,\n                  argsTextDelta: value.delta,\n                });\n              }\n            } else if (isResponseCreatedChunk(value)) {\n              responseId = value.response.id;\n              controller.enqueue({\n                type: 'response-metadata',\n                id: value.response.id,\n                timestamp: new Date(value.response.created_at * 1000),\n                modelId: value.response.model,\n              });\n            } else if (isTextDeltaChunk(value)) {\n              controller.enqueue({\n                type: 'text-delta',\n                textDelta: value.delta,\n              });\n            } else if (\n              isResponseOutputItemDoneChunk(value) &&\n              value.item.type === 'function_call'\n            ) {\n              ongoingToolCalls[value.output_index] = undefined;\n              hasToolCalls = true;\n              controller.enqueue({\n                type: 'tool-call',\n                toolCallType: 'function',\n                toolCallId: value.item.call_id,\n                toolName: value.item.name,\n                args: value.item.arguments,\n              });\n            } else if (isResponseFinishedChunk(value)) {\n              finishReason = mapOpenAIResponseFinishReason({\n                finishReason: value.response.incomplete_details?.reason,\n                hasToolCalls,\n              });\n              promptTokens = value.response.usage.input_tokens;\n              completionTokens = value.response.usage.output_tokens;\n              cachedPromptTokens =\n                value.response.usage.input_tokens_details?.cached_tokens ??\n                cachedPromptTokens;\n              reasoningTokens =\n                value.response.usage.output_tokens_details?.reasoning_tokens ??\n                reasoningTokens;\n            } else if (isResponseAnnotationAddedChunk(value)) {\n              controller.enqueue({\n                type: 'source',\n                source: {\n                  sourceType: 'url',\n                  id: self.config.generateId?.() ?? generateId(),\n                  url: value.annotation.url,\n                  title: value.annotation.title,\n                },\n              });\n            }\n          },\n\n          flush(controller) {\n            controller.enqueue({\n              type: 'finish',\n              finishReason,\n              usage: { promptTokens, completionTokens },\n              ...((cachedPromptTokens != null || reasoningTokens != null) && {\n                providerMetadata: {\n                  openai: {\n                    responseId,\n                    cachedPromptTokens,\n                    reasoningTokens,\n                  },\n                },\n              }),\n            });\n          },\n        }),\n      ),\n      rawCall: {\n        rawPrompt: undefined,\n        rawSettings: {},\n      },\n      rawResponse: { headers: responseHeaders },\n      request: { body: JSON.stringify(body) },\n      warnings,\n    };\n  }\n}\n\nconst usageSchema = z.object({\n  input_tokens: z.number(),\n  input_tokens_details: z\n    .object({ cached_tokens: z.number().nullish() })\n    .nullish(),\n  output_tokens: z.number(),\n  output_tokens_details: z\n    .object({ reasoning_tokens: z.number().nullish() })\n    .nullish(),\n});\n\nconst textDeltaChunkSchema = z.object({\n  type: z.literal('response.output_text.delta'),\n  delta: z.string(),\n});\n\nconst responseFinishedChunkSchema = z.object({\n  type: z.enum(['response.completed', 'response.incomplete']),\n  response: z.object({\n    incomplete_details: z.object({ reason: z.string() }).nullish(),\n    usage: usageSchema,\n  }),\n});\n\nconst responseCreatedChunkSchema = z.object({\n  type: z.literal('response.created'),\n  response: z.object({\n    id: z.string(),\n    created_at: z.number(),\n    model: z.string(),\n  }),\n});\n\nconst responseOutputItemDoneSchema = z.object({\n  type: z.literal('response.output_item.done'),\n  output_index: z.number(),\n  item: z.discriminatedUnion('type', [\n    z.object({\n      type: z.literal('message'),\n    }),\n    z.object({\n      type: z.literal('function_call'),\n      id: z.string(),\n      call_id: z.string(),\n      name: z.string(),\n      arguments: z.string(),\n      status: z.literal('completed'),\n    }),\n  ]),\n});\n\nconst responseFunctionCallArgumentsDeltaSchema = z.object({\n  type: z.literal('response.function_call_arguments.delta'),\n  item_id: z.string(),\n  output_index: z.number(),\n  delta: z.string(),\n});\n\nconst responseOutputItemAddedSchema = z.object({\n  type: z.literal('response.output_item.added'),\n  output_index: z.number(),\n  item: z.discriminatedUnion('type', [\n    z.object({\n      type: z.literal('message'),\n    }),\n    z.object({\n      type: z.literal('function_call'),\n      id: z.string(),\n      call_id: z.string(),\n      name: z.string(),\n      arguments: z.string(),\n    }),\n  ]),\n});\n\nconst responseAnnotationAddedSchema = z.object({\n  type: z.literal('response.output_text.annotation.added'),\n  annotation: z.object({\n    type: z.literal('url_citation'),\n    url: z.string(),\n    title: z.string(),\n  }),\n});\n\nconst openaiResponsesChunkSchema = z.union([\n  textDeltaChunkSchema,\n  responseFinishedChunkSchema,\n  responseCreatedChunkSchema,\n  responseOutputItemDoneSchema,\n  responseFunctionCallArgumentsDeltaSchema,\n  responseOutputItemAddedSchema,\n  responseAnnotationAddedSchema,\n  z.object({ type: z.string() }).passthrough(), // fallback for unknown chunks\n]);\n\nfunction isTextDeltaChunk(\n  chunk: z.infer<typeof openaiResponsesChunkSchema>,\n): chunk is z.infer<typeof textDeltaChunkSchema> {\n  return chunk.type === 'response.output_text.delta';\n}\n\nfunction isResponseOutputItemDoneChunk(\n  chunk: z.infer<typeof openaiResponsesChunkSchema>,\n): chunk is z.infer<typeof responseOutputItemDoneSchema> {\n  return chunk.type === 'response.output_item.done';\n}\n\nfunction isResponseFinishedChunk(\n  chunk: z.infer<typeof openaiResponsesChunkSchema>,\n): chunk is z.infer<typeof responseFinishedChunkSchema> {\n  return (\n    chunk.type === 'response.completed' || chunk.type === 'response.incomplete'\n  );\n}\n\nfunction isResponseCreatedChunk(\n  chunk: z.infer<typeof openaiResponsesChunkSchema>,\n): chunk is z.infer<typeof responseCreatedChunkSchema> {\n  return chunk.type === 'response.created';\n}\n\nfunction isResponseFunctionCallArgumentsDeltaChunk(\n  chunk: z.infer<typeof openaiResponsesChunkSchema>,\n): chunk is z.infer<typeof responseFunctionCallArgumentsDeltaSchema> {\n  return chunk.type === 'response.function_call_arguments.delta';\n}\n\nfunction isResponseOutputItemAddedChunk(\n  chunk: z.infer<typeof openaiResponsesChunkSchema>,\n): chunk is z.infer<typeof responseOutputItemAddedSchema> {\n  return chunk.type === 'response.output_item.added';\n}\n\nfunction isResponseAnnotationAddedChunk(\n  chunk: z.infer<typeof openaiResponsesChunkSchema>,\n): chunk is z.infer<typeof responseAnnotationAddedSchema> {\n  return chunk.type === 'response.output_text.annotation.added';\n}\n\nconst providerOptionsSchema = z.object({\n  openai: z\n    .object({\n      metadata: z.any().nullish(),\n      parallelToolCalls: z.boolean().nullish(),\n      previousResponseId: z.string().nullish(),\n      store: z.boolean().nullish(),\n      user: z.string().nullish(),\n      reasoningEffort: z.string().nullish(),\n      strictSchemas: z.boolean().nullish(),\n    })\n    .nullish(),\n});\n\ntype ResponsesModelConfig = {\n  isReasoningModel: boolean;\n  systemMessageMode: 'remove' | 'system' | 'developer';\n  requiredAutoTruncation: boolean;\n};\n\nfunction getResponsesModelConfig(modelId: string): ResponsesModelConfig {\n  // o series reasoning models:\n  if (modelId.startsWith('o')) {\n    if (modelId.startsWith('o1-mini') || modelId.startsWith('o1-preview')) {\n      return {\n        isReasoningModel: true,\n        systemMessageMode: 'remove',\n        requiredAutoTruncation: false,\n      };\n    }\n\n    return {\n      isReasoningModel: true,\n      systemMessageMode: 'developer',\n      requiredAutoTruncation: false,\n    };\n  }\n\n  // gpt models:\n  return {\n    isReasoningModel: false,\n    systemMessageMode: 'system',\n    requiredAutoTruncation: false,\n  };\n}\n", "import {\n  LanguageModelV1CallWarning,\n  LanguageModelV1Prompt,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport { convertUint8ArrayToBase64 } from '@ai-sdk/provider-utils';\nimport { OpenAIResponsesPrompt } from './openai-responses-api-types';\n\nexport function convertToOpenAIResponsesMessages({\n  prompt,\n  systemMessageMode,\n}: {\n  prompt: LanguageModelV1Prompt;\n  systemMessageMode: 'system' | 'developer' | 'remove';\n}): {\n  messages: OpenAIResponsesPrompt;\n  warnings: Array<LanguageModelV1CallWarning>;\n} {\n  const messages: OpenAIResponsesPrompt = [];\n  const warnings: Array<LanguageModelV1CallWarning> = [];\n\n  for (const { role, content } of prompt) {\n    switch (role) {\n      case 'system': {\n        switch (systemMessageMode) {\n          case 'system': {\n            messages.push({ role: 'system', content });\n            break;\n          }\n          case 'developer': {\n            messages.push({ role: 'developer', content });\n            break;\n          }\n          case 'remove': {\n            warnings.push({\n              type: 'other',\n              message: 'system messages are removed for this model',\n            });\n            break;\n          }\n          default: {\n            const _exhaustiveCheck: never = systemMessageMode;\n            throw new Error(\n              `Unsupported system message mode: ${_exhaustiveCheck}`,\n            );\n          }\n        }\n        break;\n      }\n\n      case 'user': {\n        messages.push({\n          role: 'user',\n          content: content.map((part, index) => {\n            switch (part.type) {\n              case 'text': {\n                return { type: 'input_text', text: part.text };\n              }\n              case 'image': {\n                return {\n                  type: 'input_image',\n                  image_url:\n                    part.image instanceof URL\n                      ? part.image.toString()\n                      : `data:${\n                          part.mimeType ?? 'image/jpeg'\n                        };base64,${convertUint8ArrayToBase64(part.image)}`,\n\n                  // OpenAI specific extension: image detail\n                  detail: part.providerMetadata?.openai?.imageDetail,\n                };\n              }\n              case 'file': {\n                if (part.data instanceof URL) {\n                  // The AI SDK automatically downloads files for user file parts with URLs\n                  throw new UnsupportedFunctionalityError({\n                    functionality: 'File URLs in user messages',\n                  });\n                }\n\n                switch (part.mimeType) {\n                  case 'application/pdf': {\n                    return {\n                      type: 'input_file',\n                      filename: part.filename ?? `part-${index}.pdf`,\n                      file_data: `data:application/pdf;base64,${part.data}`,\n                    };\n                  }\n                  default: {\n                    throw new UnsupportedFunctionalityError({\n                      functionality:\n                        'Only PDF files are supported in user messages',\n                    });\n                  }\n                }\n              }\n            }\n          }),\n        });\n\n        break;\n      }\n\n      case 'assistant': {\n        for (const part of content) {\n          switch (part.type) {\n            case 'text': {\n              messages.push({\n                role: 'assistant',\n                content: [{ type: 'output_text', text: part.text }],\n              });\n              break;\n            }\n            case 'tool-call': {\n              messages.push({\n                type: 'function_call',\n                call_id: part.toolCallId,\n                name: part.toolName,\n                arguments: JSON.stringify(part.args),\n              });\n              break;\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 'tool': {\n        for (const part of content) {\n          messages.push({\n            type: 'function_call_output',\n            call_id: part.toolCallId,\n            output: JSON.stringify(part.result),\n          });\n        }\n\n        break;\n      }\n\n      default: {\n        const _exhaustiveCheck: never = role;\n        throw new Error(`Unsupported role: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  return { messages, warnings };\n}\n", "import { LanguageModelV1FinishReason } from '@ai-sdk/provider';\n\nexport function mapOpenAIResponseFinishReason({\n  finishReason,\n  hasToolCalls,\n}: {\n  finishReason: string | null | undefined;\n  hasToolCalls: boolean;\n}): LanguageModelV1FinishReason {\n  switch (finishReason) {\n    case undefined:\n    case null:\n      return hasToolCalls ? 'tool-calls' : 'stop';\n    case 'max_output_tokens':\n      return 'length';\n    case 'content_filter':\n      return 'content-filter';\n    default:\n      return hasToolCalls ? 'tool-calls' : 'unknown';\n  }\n}\n", "import {\n  LanguageModelV1,\n  LanguageModelV1CallWarning,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport { OpenAIResponsesTool } from './openai-responses-api-types';\n\nexport function prepareResponsesTools({\n  mode,\n  strict,\n}: {\n  mode: Parameters<LanguageModelV1['doGenerate']>[0]['mode'] & {\n    type: 'regular';\n  };\n  strict: boolean;\n}): {\n  tools?: Array<OpenAIResponsesTool>;\n  tool_choice?:\n    | 'auto'\n    | 'none'\n    | 'required'\n    | { type: 'function'; name: string };\n  toolWarnings: LanguageModelV1CallWarning[];\n} {\n  // when the tools array is empty, change it to undefined to prevent errors:\n  const tools = mode.tools?.length ? mode.tools : undefined;\n\n  const toolWarnings: LanguageModelV1CallWarning[] = [];\n\n  if (tools == null) {\n    return { tools: undefined, tool_choice: undefined, toolWarnings };\n  }\n\n  const toolChoice = mode.toolChoice;\n\n  const openaiTools: Array<OpenAIResponsesTool> = [];\n\n  for (const tool of tools) {\n    switch (tool.type) {\n      case 'function':\n        openaiTools.push({\n          type: 'function',\n          name: tool.name,\n          description: tool.description,\n          parameters: tool.parameters,\n          strict: strict ? true : undefined,\n        });\n        break;\n      case 'provider-defined':\n        switch (tool.id) {\n          case 'openai.web_search_preview':\n            openaiTools.push({\n              type: 'web_search_preview',\n              search_context_size: tool.args.searchContextSize as\n                | 'low'\n                | 'medium'\n                | 'high',\n              user_location: tool.args.userLocation as {\n                type: 'approximate';\n                city: string;\n                region: string;\n              },\n            });\n            break;\n          default:\n            toolWarnings.push({ type: 'unsupported-tool', tool });\n            break;\n        }\n        break;\n      default:\n        toolWarnings.push({ type: 'unsupported-tool', tool });\n        break;\n    }\n  }\n\n  if (toolChoice == null) {\n    return { tools: openaiTools, tool_choice: undefined, toolWarnings };\n  }\n\n  const type = toolChoice.type;\n\n  switch (type) {\n    case 'auto':\n    case 'none':\n    case 'required':\n      return { tools: openaiTools, tool_choice: type, toolWarnings };\n    case 'tool':\n      return {\n        tools: openaiTools,\n        tool_choice: {\n          type: 'function',\n          name: toolChoice.toolName,\n        },\n        toolWarnings,\n      };\n    default: {\n      const _exhaustiveCheck: never = type;\n      throw new UnsupportedFunctionalityError({\n        functionality: `Unsupported tool choice type: ${_exhaustiveCheck}`,\n      });\n    }\n  }\n}\n", "import { z } from 'zod';\n\nconst WebSearchPreviewParameters = z.object({});\n\nfunction webSearchPreviewTool({\n  searchContextSize,\n  userLocation,\n}: {\n  searchContextSize?: 'low' | 'medium' | 'high';\n  userLocation?: {\n    type?: 'approximate';\n    city?: string;\n    region?: string;\n    country?: string;\n    timezone?: string;\n  };\n} = {}): {\n  type: 'provider-defined';\n  id: 'openai.web_search_preview';\n  args: {};\n  parameters: typeof WebSearchPreviewParameters;\n} {\n  return {\n    type: 'provider-defined',\n    id: 'openai.web_search_preview',\n    args: {\n      searchContextSize,\n      userLocation,\n    },\n    parameters: WebSearchPreviewParameters,\n  };\n}\n\nexport const openaiTools = {\n  webSearchPreview: webSearchPreviewTool,\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultOptions = exports.defaultOptions = exports.jsonDescription = exports.ignoreOverride = void 0;\nexports.ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nconst jsonDescription = (jsonSchema, def) => {\n    if (def.description) {\n        try {\n            return {\n                ...jsonSchema,\n                ...JSON.parse(def.description),\n            };\n        }\n        catch { }\n    }\n    return jsonSchema;\n};\nexports.jsonDescription = jsonDescription;\nexports.defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    allowedAdditionalProperties: true,\n    rejectedAdditionalProperties: false,\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n};\nconst getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...exports.defaultOptions,\n        name: options,\n    }\n    : {\n        ...exports.defaultOptions,\n        ...options,\n    });\nexports.getDefaultOptions = getDefaultOptions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRefs = void 0;\nconst Options_js_1 = require(\"./Options.js\");\nconst getRefs = (options) => {\n    const _options = (0, Options_js_1.getDefaultOptions)(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\nexports.getRefs = getRefs;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setResponseValueAndErrors = exports.addErrorMessage = void 0;\nfunction addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexports.addErrorMessage = addErrorMessage;\nfunction setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\nexports.setResponseValueAndErrors = setResponseValueAndErrors;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseAnyDef = void 0;\nfunction parseAnyDef() {\n    return {};\n}\nexports.parseAnyDef = parseAnyDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseArrayDef = void 0;\nconst zod_1 = require(\"zod\");\nconst errorMessages_js_1 = require(\"../errorMessages.js\");\nconst parseDef_js_1 = require(\"../parseDef.js\");\nfunction parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def &&\n        def.type?._def?.typeName !== zod_1.ZodFirstPartyTypeKind.ZodAny) {\n        res.items = (0, parseDef_js_1.parseDef)(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\nexports.parseArrayDef = parseArrayDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseBigintDef = void 0;\nconst errorMessages_js_1 = require(\"../errorMessages.js\");\nfunction parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\nexports.parseBigintDef = parseBigintDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseBooleanDef = void 0;\nfunction parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\nexports.parseBooleanDef = parseBooleanDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseBrandedDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nfunction parseBrandedDef(_def, refs) {\n    return (0, parseDef_js_1.parseDef)(_def.type._def, refs);\n}\nexports.parseBrandedDef = parseBrandedDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseCatchDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nconst parseCatchDef = (def, refs) => {\n    return (0, parseDef_js_1.parseDef)(def.innerType._def, refs);\n};\nexports.parseCatchDef = parseCatchDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseDateDef = void 0;\nconst errorMessages_js_1 = require(\"../errorMessages.js\");\nfunction parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nexports.parseDateDef = parseDateDef;\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseDefaultDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nfunction parseDefaultDef(_def, refs) {\n    return {\n        ...(0, parseDef_js_1.parseDef)(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\nexports.parseDefaultDef = parseDefaultDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEffectsDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nfunction parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? (0, parseDef_js_1.parseDef)(_def.schema._def, refs)\n        : {};\n}\nexports.parseEffectsDef = parseEffectsDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEnumDef = void 0;\nfunction parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: Array.from(def.values),\n    };\n}\nexports.parseEnumDef = parseEnumDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseIntersectionDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nfunction parseIntersectionDef(def, refs) {\n    const allOf = [\n        (0, parseDef_js_1.parseDef)(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        (0, parseDef_js_1.parseDef)(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\nexports.parseIntersectionDef = parseIntersectionDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseLiteralDef = void 0;\nfunction parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\nexports.parseLiteralDef = parseLiteralDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseStringDef = exports.zodPatterns = void 0;\nconst errorMessages_js_1 = require(\"../errorMessages.js\");\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexports.zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nfunction parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, exports.zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, exports.zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, exports.zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"base64url\":\n                    addPattern(res, exports.zodPatterns.base64url, check.message, refs);\n                    break;\n                case \"jwt\":\n                    addPattern(res, exports.zodPatterns.jwt, check.message, refs);\n                    break;\n                case \"cidr\": {\n                    if (check.version !== \"v6\") {\n                        addPattern(res, exports.zodPatterns.ipv4Cidr, check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addPattern(res, exports.zodPatterns.ipv6Cidr, check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, exports.zodPatterns.emoji(), check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, exports.zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, exports.zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, exports.zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nexports.parseStringDef = parseStringDef;\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        (0, errorMessages_js_1.setResponseValueAndErrors)(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        (0, errorMessages_js_1.setResponseValueAndErrors)(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseRecordDef = void 0;\nconst zod_1 = require(\"zod\");\nconst parseDef_js_1 = require(\"../parseDef.js\");\nconst string_js_1 = require(\"./string.js\");\nconst branded_js_1 = require(\"./branded.js\");\nfunction parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === zod_1.ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: (0, parseDef_js_1.parseDef)(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: refs.rejectedAdditionalProperties,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: (0, parseDef_js_1.parseDef)(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? refs.allowedAdditionalProperties,\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === zod_1.ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = (0, string_js_1.parseStringDef)(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === zod_1.ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === zod_1.ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === zod_1.ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = (0, branded_js_1.parseBrandedDef)(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\nexports.parseRecordDef = parseRecordDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseMapDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nconst record_js_1 = require(\"./record.js\");\nfunction parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return (0, record_js_1.parseRecordDef)(def, refs);\n    }\n    const keys = (0, parseDef_js_1.parseDef)(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || {};\n    const values = (0, parseDef_js_1.parseDef)(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || {};\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\nexports.parseMapDef = parseMapDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNativeEnumDef = void 0;\nfunction parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\nexports.parseNativeEnumDef = parseNativeEnumDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNeverDef = void 0;\nfunction parseNeverDef() {\n    return {\n        not: {},\n    };\n}\nexports.parseNeverDef = parseNeverDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNullDef = void 0;\nfunction parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\nexports.parseNullDef = parseNullDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUnionDef = exports.primitiveMappings = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nexports.primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nfunction parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in exports.primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = exports.primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nexports.parseUnionDef = parseUnionDef;\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => (0, parseDef_js_1.parseDef)(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNullableDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nconst union_js_1 = require(\"./union.js\");\nfunction parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: union_js_1.primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                union_js_1.primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = (0, parseDef_js_1.parseDef)(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = (0, parseDef_js_1.parseDef)(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\nexports.parseNullableDef = parseNullableDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNumberDef = void 0;\nconst errorMessages_js_1 = require(\"../errorMessages.js\");\nfunction parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                (0, errorMessages_js_1.addErrorMessage)(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                (0, errorMessages_js_1.setResponseValueAndErrors)(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\nexports.parseNumberDef = parseNumberDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseObjectDef = void 0;\nconst zod_1 = require(\"zod\");\nconst parseDef_js_1 = require(\"../parseDef.js\");\nfunction parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        properties: {},\n    };\n    const required = [];\n    const shape = def.shape();\n    for (const propName in shape) {\n        let propDef = shape[propName];\n        if (propDef === undefined || propDef._def === undefined) {\n            continue;\n        }\n        let propOptional = safeIsOptional(propDef);\n        if (propOptional && forceOptionalIntoNullable) {\n            if (propDef instanceof zod_1.ZodOptional) {\n                propDef = propDef._def.innerType;\n            }\n            if (!propDef.isNullable()) {\n                propDef = propDef.nullable();\n            }\n            propOptional = false;\n        }\n        const parsedDef = (0, parseDef_js_1.parseDef)(propDef._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"properties\", propName],\n            propertyPath: [...refs.currentPath, \"properties\", propName],\n        });\n        if (parsedDef === undefined) {\n            continue;\n        }\n        result.properties[propName] = parsedDef;\n        if (!propOptional) {\n            required.push(propName);\n        }\n    }\n    if (required.length) {\n        result.required = required;\n    }\n    const additionalProperties = decideAdditionalProperties(def, refs);\n    if (additionalProperties !== undefined) {\n        result.additionalProperties = additionalProperties;\n    }\n    return result;\n}\nexports.parseObjectDef = parseObjectDef;\nfunction decideAdditionalProperties(def, refs) {\n    if (def.catchall._def.typeName !== \"ZodNever\") {\n        return (0, parseDef_js_1.parseDef)(def.catchall._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        });\n    }\n    switch (def.unknownKeys) {\n        case \"passthrough\":\n            return refs.allowedAdditionalProperties;\n        case \"strict\":\n            return refs.rejectedAdditionalProperties;\n        case \"strip\":\n            return refs.removeAdditionalStrategy === \"strict\"\n                ? refs.allowedAdditionalProperties\n                : refs.rejectedAdditionalProperties;\n    }\n}\nfunction safeIsOptional(schema) {\n    try {\n        return schema.isOptional();\n    }\n    catch {\n        return true;\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseOptionalDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nconst parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return (0, parseDef_js_1.parseDef)(def.innerType._def, refs);\n    }\n    const innerSchema = (0, parseDef_js_1.parseDef)(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\nexports.parseOptionalDef = parseOptionalDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parsePipelineDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nconst parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return (0, parseDef_js_1.parseDef)(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return (0, parseDef_js_1.parseDef)(def.out._def, refs);\n    }\n    const a = (0, parseDef_js_1.parseDef)(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = (0, parseDef_js_1.parseDef)(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\nexports.parsePipelineDef = parsePipelineDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parsePromiseDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nfunction parsePromiseDef(def, refs) {\n    return (0, parseDef_js_1.parseDef)(def.type._def, refs);\n}\nexports.parsePromiseDef = parsePromiseDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseSetDef = void 0;\nconst errorMessages_js_1 = require(\"../errorMessages.js\");\nconst parseDef_js_1 = require(\"../parseDef.js\");\nfunction parseSetDef(def, refs) {\n    const items = (0, parseDef_js_1.parseDef)(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        (0, errorMessages_js_1.setResponseValueAndErrors)(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        (0, errorMessages_js_1.setResponseValueAndErrors)(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\nexports.parseSetDef = parseSetDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTupleDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nfunction parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => (0, parseDef_js_1.parseDef)(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: (0, parseDef_js_1.parseDef)(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => (0, parseDef_js_1.parseDef)(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\nexports.parseTupleDef = parseTupleDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUndefinedDef = void 0;\nfunction parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\nexports.parseUndefinedDef = parseUndefinedDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUnknownDef = void 0;\nfunction parseUnknownDef() {\n    return {};\n}\nexports.parseUnknownDef = parseUnknownDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseReadonlyDef = void 0;\nconst parseDef_js_1 = require(\"../parseDef.js\");\nconst parseReadonlyDef = (def, refs) => {\n    return (0, parseDef_js_1.parseDef)(def.innerType._def, refs);\n};\nexports.parseReadonlyDef = parseReadonlyDef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.selectParser = void 0;\nconst zod_1 = require(\"zod\");\nconst any_js_1 = require(\"./parsers/any.js\");\nconst array_js_1 = require(\"./parsers/array.js\");\nconst bigint_js_1 = require(\"./parsers/bigint.js\");\nconst boolean_js_1 = require(\"./parsers/boolean.js\");\nconst branded_js_1 = require(\"./parsers/branded.js\");\nconst catch_js_1 = require(\"./parsers/catch.js\");\nconst date_js_1 = require(\"./parsers/date.js\");\nconst default_js_1 = require(\"./parsers/default.js\");\nconst effects_js_1 = require(\"./parsers/effects.js\");\nconst enum_js_1 = require(\"./parsers/enum.js\");\nconst intersection_js_1 = require(\"./parsers/intersection.js\");\nconst literal_js_1 = require(\"./parsers/literal.js\");\nconst map_js_1 = require(\"./parsers/map.js\");\nconst nativeEnum_js_1 = require(\"./parsers/nativeEnum.js\");\nconst never_js_1 = require(\"./parsers/never.js\");\nconst null_js_1 = require(\"./parsers/null.js\");\nconst nullable_js_1 = require(\"./parsers/nullable.js\");\nconst number_js_1 = require(\"./parsers/number.js\");\nconst object_js_1 = require(\"./parsers/object.js\");\nconst optional_js_1 = require(\"./parsers/optional.js\");\nconst pipeline_js_1 = require(\"./parsers/pipeline.js\");\nconst promise_js_1 = require(\"./parsers/promise.js\");\nconst record_js_1 = require(\"./parsers/record.js\");\nconst set_js_1 = require(\"./parsers/set.js\");\nconst string_js_1 = require(\"./parsers/string.js\");\nconst tuple_js_1 = require(\"./parsers/tuple.js\");\nconst undefined_js_1 = require(\"./parsers/undefined.js\");\nconst union_js_1 = require(\"./parsers/union.js\");\nconst unknown_js_1 = require(\"./parsers/unknown.js\");\nconst readonly_js_1 = require(\"./parsers/readonly.js\");\nconst selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case zod_1.ZodFirstPartyTypeKind.ZodString:\n            return (0, string_js_1.parseStringDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodNumber:\n            return (0, number_js_1.parseNumberDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodObject:\n            return (0, object_js_1.parseObjectDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodBigInt:\n            return (0, bigint_js_1.parseBigintDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodBoolean:\n            return (0, boolean_js_1.parseBooleanDef)();\n        case zod_1.ZodFirstPartyTypeKind.ZodDate:\n            return (0, date_js_1.parseDateDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodUndefined:\n            return (0, undefined_js_1.parseUndefinedDef)();\n        case zod_1.ZodFirstPartyTypeKind.ZodNull:\n            return (0, null_js_1.parseNullDef)(refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodArray:\n            return (0, array_js_1.parseArrayDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodUnion:\n        case zod_1.ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return (0, union_js_1.parseUnionDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodIntersection:\n            return (0, intersection_js_1.parseIntersectionDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodTuple:\n            return (0, tuple_js_1.parseTupleDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodRecord:\n            return (0, record_js_1.parseRecordDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodLiteral:\n            return (0, literal_js_1.parseLiteralDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodEnum:\n            return (0, enum_js_1.parseEnumDef)(def);\n        case zod_1.ZodFirstPartyTypeKind.ZodNativeEnum:\n            return (0, nativeEnum_js_1.parseNativeEnumDef)(def);\n        case zod_1.ZodFirstPartyTypeKind.ZodNullable:\n            return (0, nullable_js_1.parseNullableDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodOptional:\n            return (0, optional_js_1.parseOptionalDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodMap:\n            return (0, map_js_1.parseMapDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodSet:\n            return (0, set_js_1.parseSetDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodLazy:\n            return () => def.getter()._def;\n        case zod_1.ZodFirstPartyTypeKind.ZodPromise:\n            return (0, promise_js_1.parsePromiseDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodNaN:\n        case zod_1.ZodFirstPartyTypeKind.ZodNever:\n            return (0, never_js_1.parseNeverDef)();\n        case zod_1.ZodFirstPartyTypeKind.ZodEffects:\n            return (0, effects_js_1.parseEffectsDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodAny:\n            return (0, any_js_1.parseAnyDef)();\n        case zod_1.ZodFirstPartyTypeKind.ZodUnknown:\n            return (0, unknown_js_1.parseUnknownDef)();\n        case zod_1.ZodFirstPartyTypeKind.ZodDefault:\n            return (0, default_js_1.parseDefaultDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodBranded:\n            return (0, branded_js_1.parseBrandedDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodReadonly:\n            return (0, readonly_js_1.parseReadonlyDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodCatch:\n            return (0, catch_js_1.parseCatchDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodPipeline:\n            return (0, pipeline_js_1.parsePipelineDef)(def, refs);\n        case zod_1.ZodFirstPartyTypeKind.ZodFunction:\n        case zod_1.ZodFirstPartyTypeKind.ZodVoid:\n        case zod_1.ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\nexports.selectParser = selectParser;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseDef = void 0;\nconst Options_js_1 = require(\"./Options.js\");\nconst selectParser_js_1 = require(\"./selectParser.js\");\nfunction parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== Options_js_1.ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchemaOrGetter = (0, selectParser_js_1.selectParser)(def, def.typeName, refs);\n    // If the return was a function, then the inner definition needs to be extracted before a call to parseDef (recursive)\n    const jsonSchema = typeof jsonSchemaOrGetter === \"function\"\n        ? parseDef(jsonSchemaOrGetter(), refs)\n        : jsonSchemaOrGetter;\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    if (refs.postProcess) {\n        const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n        newItem.jsonSchema = jsonSchema;\n        return postProcessResult;\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nexports.parseDef = parseDef;\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === \"seen\" ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.zodToJsonSchema = void 0;\nconst parseDef_js_1 = require(\"./parseDef.js\");\nconst Refs_js_1 = require(\"./Refs.js\");\nconst zodToJsonSchema = (schema, options) => {\n    const refs = (0, Refs_js_1.getRefs)(options);\n    const definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: (0, parseDef_js_1.parseDef)(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? {},\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = (0, parseDef_js_1.parseDef)(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? {};\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    if (refs.target === \"openAi\" &&\n        (\"anyOf\" in combined ||\n            \"oneOf\" in combined ||\n            \"allOf\" in combined ||\n            (\"type\" in combined && Array.isArray(combined.type)))) {\n        console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n    }\n    return combined;\n};\nexports.zodToJsonSchema = zodToJsonSchema;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Options.js\"), exports);\n__exportStar(require(\"./Refs.js\"), exports);\n__exportStar(require(\"./errorMessages.js\"), exports);\n__exportStar(require(\"./parseDef.js\"), exports);\n__exportStar(require(\"./parseTypes.js\"), exports);\n__exportStar(require(\"./parsers/any.js\"), exports);\n__exportStar(require(\"./parsers/array.js\"), exports);\n__exportStar(require(\"./parsers/bigint.js\"), exports);\n__exportStar(require(\"./parsers/boolean.js\"), exports);\n__exportStar(require(\"./parsers/branded.js\"), exports);\n__exportStar(require(\"./parsers/catch.js\"), exports);\n__exportStar(require(\"./parsers/date.js\"), exports);\n__exportStar(require(\"./parsers/default.js\"), exports);\n__exportStar(require(\"./parsers/effects.js\"), exports);\n__exportStar(require(\"./parsers/enum.js\"), exports);\n__exportStar(require(\"./parsers/intersection.js\"), exports);\n__exportStar(require(\"./parsers/literal.js\"), exports);\n__exportStar(require(\"./parsers/map.js\"), exports);\n__exportStar(require(\"./parsers/nativeEnum.js\"), exports);\n__exportStar(require(\"./parsers/never.js\"), exports);\n__exportStar(require(\"./parsers/null.js\"), exports);\n__exportStar(require(\"./parsers/nullable.js\"), exports);\n__exportStar(require(\"./parsers/number.js\"), exports);\n__exportStar(require(\"./parsers/object.js\"), exports);\n__exportStar(require(\"./parsers/optional.js\"), exports);\n__exportStar(require(\"./parsers/pipeline.js\"), exports);\n__exportStar(require(\"./parsers/promise.js\"), exports);\n__exportStar(require(\"./parsers/readonly.js\"), exports);\n__exportStar(require(\"./parsers/record.js\"), exports);\n__exportStar(require(\"./parsers/set.js\"), exports);\n__exportStar(require(\"./parsers/string.js\"), exports);\n__exportStar(require(\"./parsers/tuple.js\"), exports);\n__exportStar(require(\"./parsers/undefined.js\"), exports);\n__exportStar(require(\"./parsers/union.js\"), exports);\n__exportStar(require(\"./parsers/unknown.js\"), exports);\n__exportStar(require(\"./selectParser.js\"), exports);\n__exportStar(require(\"./zodToJsonSchema.js\"), exports);\nconst zodToJsonSchema_js_1 = require(\"./zodToJsonSchema.js\");\nexports.default = zodToJsonSchema_js_1.zodToJsonSchema;\n", "export * from './types';\n\nexport { generateId } from '@ai-sdk/provider-utils';\n\n// Export stream data utilities for custom stream implementations,\n// both on the client and server side.\n// NOTE: this is experimental / internal and may change without notice\nexport {\n  formatAssistantStreamPart,\n  parseAssistantStreamPart,\n} from './assistant-stream-parts';\nexport type {\n  AssistantStreamPart,\n  AssistantStreamString,\n} from './assistant-stream-parts';\nexport { callChatApi } from './call-chat-api';\nexport { callCompletionApi } from './call-completion-api';\nexport { formatDataStreamPart, parseDataStreamPart } from './data-stream-parts';\nexport type { DataStreamPart, DataStreamString } from './data-stream-parts';\nexport { getTextFromDataUrl } from './data-url';\nexport type { DeepPartial } from './deep-partial';\nexport { extractMaxToolInvocationStep } from './extract-max-tool-invocation-step';\nexport { fillMessageParts } from './fill-message-parts';\nexport { getMessageParts } from './get-message-parts';\nexport { isDeepEqualData } from './is-deep-equal-data';\nexport { parsePartialJson } from './parse-partial-json';\nexport { prepareAttachmentsForRequest } from './prepare-attachments-for-request';\nexport { processAssistantStream } from './process-assistant-stream';\nexport { processDataStream } from './process-data-stream';\nexport { processTextStream } from './process-text-stream';\nexport { asSchema, jsonSchema } from './schema';\nexport type { Schema } from './schema';\nexport {\n  isAssistantMessageWithCompletedToolCalls,\n  shouldResubmitMessages,\n} from './should-resubmit-messages';\nexport { updateToolCallResult } from './update-tool-call-result';\nexport { zodSchema } from './zod-schema';\n", "import { AssistantMessage, DataMessage, JSONValue } from './types';\n\nexport type AssistantStreamString =\n  `${(typeof StreamStringPrefixes)[keyof typeof StreamStringPrefixes]}:${string}\\n`;\n\nexport interface AssistantStreamPart<\n  CODE extends string,\n  NAME extends string,\n  TYPE,\n> {\n  code: CODE;\n  name: NAME;\n  parse: (value: JSONValue) => { type: NAME; value: TYPE };\n}\n\nconst textStreamPart: AssistantStreamPart<'0', 'text', string> = {\n  code: '0',\n  name: 'text',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"text\" parts expect a string value.');\n    }\n    return { type: 'text', value };\n  },\n};\n\nconst errorStreamPart: AssistantStreamPart<'3', 'error', string> = {\n  code: '3',\n  name: 'error',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"error\" parts expect a string value.');\n    }\n    return { type: 'error', value };\n  },\n};\n\nconst assistantMessageStreamPart: AssistantStreamPart<\n  '4',\n  'assistant_message',\n  AssistantMessage\n> = {\n  code: '4',\n  name: 'assistant_message',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('id' in value) ||\n      !('role' in value) ||\n      !('content' in value) ||\n      typeof value.id !== 'string' ||\n      typeof value.role !== 'string' ||\n      value.role !== 'assistant' ||\n      !Array.isArray(value.content) ||\n      !value.content.every(\n        item =>\n          item != null &&\n          typeof item === 'object' &&\n          'type' in item &&\n          item.type === 'text' &&\n          'text' in item &&\n          item.text != null &&\n          typeof item.text === 'object' &&\n          'value' in item.text &&\n          typeof item.text.value === 'string',\n      )\n    ) {\n      throw new Error(\n        '\"assistant_message\" parts expect an object with an \"id\", \"role\", and \"content\" property.',\n      );\n    }\n\n    return {\n      type: 'assistant_message',\n      value: value as AssistantMessage,\n    };\n  },\n};\n\nconst assistantControlDataStreamPart: AssistantStreamPart<\n  '5',\n  'assistant_control_data',\n  {\n    threadId: string;\n    messageId: string;\n  }\n> = {\n  code: '5',\n  name: 'assistant_control_data',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('threadId' in value) ||\n      !('messageId' in value) ||\n      typeof value.threadId !== 'string' ||\n      typeof value.messageId !== 'string'\n    ) {\n      throw new Error(\n        '\"assistant_control_data\" parts expect an object with a \"threadId\" and \"messageId\" property.',\n      );\n    }\n\n    return {\n      type: 'assistant_control_data',\n      value: {\n        threadId: value.threadId,\n        messageId: value.messageId,\n      },\n    };\n  },\n};\n\nconst dataMessageStreamPart: AssistantStreamPart<\n  '6',\n  'data_message',\n  DataMessage\n> = {\n  code: '6',\n  name: 'data_message',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('role' in value) ||\n      !('data' in value) ||\n      typeof value.role !== 'string' ||\n      value.role !== 'data'\n    ) {\n      throw new Error(\n        '\"data_message\" parts expect an object with a \"role\" and \"data\" property.',\n      );\n    }\n\n    return {\n      type: 'data_message',\n      value: value as DataMessage,\n    };\n  },\n};\n\nconst assistantStreamParts = [\n  textStreamPart,\n  errorStreamPart,\n  assistantMessageStreamPart,\n  assistantControlDataStreamPart,\n  dataMessageStreamPart,\n] as const;\n\ntype AssistantStreamParts =\n  | typeof textStreamPart\n  | typeof errorStreamPart\n  | typeof assistantMessageStreamPart\n  | typeof assistantControlDataStreamPart\n  | typeof dataMessageStreamPart;\n\ntype AssistantStreamPartValueType = {\n  [P in AssistantStreamParts as P['name']]: ReturnType<P['parse']>['value'];\n};\n\nexport type AssistantStreamPartType =\n  | ReturnType<typeof textStreamPart.parse>\n  | ReturnType<typeof errorStreamPart.parse>\n  | ReturnType<typeof assistantMessageStreamPart.parse>\n  | ReturnType<typeof assistantControlDataStreamPart.parse>\n  | ReturnType<typeof dataMessageStreamPart.parse>;\n\nexport const assistantStreamPartsByCode = {\n  [textStreamPart.code]: textStreamPart,\n  [errorStreamPart.code]: errorStreamPart,\n  [assistantMessageStreamPart.code]: assistantMessageStreamPart,\n  [assistantControlDataStreamPart.code]: assistantControlDataStreamPart,\n  [dataMessageStreamPart.code]: dataMessageStreamPart,\n} as const;\n\nexport const StreamStringPrefixes = {\n  [textStreamPart.name]: textStreamPart.code,\n  [errorStreamPart.name]: errorStreamPart.code,\n  [assistantMessageStreamPart.name]: assistantMessageStreamPart.code,\n  [assistantControlDataStreamPart.name]: assistantControlDataStreamPart.code,\n  [dataMessageStreamPart.name]: dataMessageStreamPart.code,\n} as const;\n\nexport const validCodes = assistantStreamParts.map(part => part.code);\n\nexport const parseAssistantStreamPart = (\n  line: string,\n): AssistantStreamPartType => {\n  const firstSeparatorIndex = line.indexOf(':');\n\n  if (firstSeparatorIndex === -1) {\n    throw new Error('Failed to parse stream string. No separator found.');\n  }\n\n  const prefix = line.slice(0, firstSeparatorIndex);\n\n  if (!validCodes.includes(prefix as keyof typeof assistantStreamPartsByCode)) {\n    throw new Error(`Failed to parse stream string. Invalid code ${prefix}.`);\n  }\n\n  const code = prefix as keyof typeof assistantStreamPartsByCode;\n\n  const textValue = line.slice(firstSeparatorIndex + 1);\n  const jsonValue: JSONValue = JSON.parse(textValue);\n\n  return assistantStreamPartsByCode[code].parse(jsonValue);\n};\n\nexport function formatAssistantStreamPart<\n  T extends keyof AssistantStreamPartValueType,\n>(type: T, value: AssistantStreamPartValueType[T]): AssistantStreamString {\n  const streamPart = assistantStreamParts.find(part => part.name === type);\n\n  if (!streamPart) {\n    throw new Error(`Invalid stream part type: ${type}`);\n  }\n\n  return `${streamPart.code}:${JSON.stringify(value)}\\n`;\n}\n", "import { LanguageModelV1FinishReason } from '@ai-sdk/provider';\nimport { generateId as generateIdFunction } from '@ai-sdk/provider-utils';\nimport {\n  calculateLanguageModelUsage,\n  LanguageModelUsage,\n} from './duplicated/usage';\nimport { parsePartialJson } from './parse-partial-json';\nimport { processDataStream } from './process-data-stream';\nimport type {\n  JSONValue,\n  ReasoningUIPart,\n  TextUIPart,\n  ToolInvocation,\n  ToolInvocationUIPart,\n  UIMessage,\n  UseChatOptions,\n} from './types';\n\nexport async function processChatResponse({\n  stream,\n  update,\n  onToolCall,\n  onFinish,\n  generateId = generateIdFunction,\n  getCurrentDate = () => new Date(),\n  lastMessage,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  update: (options: {\n    message: UIMessage;\n    data: JSONValue[] | undefined;\n    replaceLastMessage: boolean;\n  }) => void;\n  onToolCall?: UseChatOptions['onToolCall'];\n  onFinish?: (options: {\n    message: UIMessage | undefined;\n    finishReason: LanguageModelV1FinishReason;\n    usage: LanguageModelUsage;\n  }) => void;\n  generateId?: () => string;\n  getCurrentDate?: () => Date;\n  lastMessage: UIMessage | undefined;\n}) {\n  const replaceLastMessage = lastMessage?.role === 'assistant';\n  let step = replaceLastMessage\n    ? 1 +\n      // find max step in existing tool invocations:\n      (lastMessage.toolInvocations?.reduce((max, toolInvocation) => {\n        return Math.max(max, toolInvocation.step ?? 0);\n      }, 0) ?? 0)\n    : 0;\n\n  const message: UIMessage = replaceLastMessage\n    ? structuredClone(lastMessage)\n    : {\n        id: generateId(),\n        createdAt: getCurrentDate(),\n        role: 'assistant',\n        content: '',\n        parts: [],\n      };\n\n  let currentTextPart: TextUIPart | undefined = undefined;\n  let currentReasoningPart: ReasoningUIPart | undefined = undefined;\n  let currentReasoningTextDetail:\n    | { type: 'text'; text: string; signature?: string }\n    | undefined = undefined;\n\n  function updateToolInvocationPart(\n    toolCallId: string,\n    invocation: ToolInvocation,\n  ) {\n    const part = message.parts.find(\n      part =>\n        part.type === 'tool-invocation' &&\n        part.toolInvocation.toolCallId === toolCallId,\n    ) as ToolInvocationUIPart | undefined;\n\n    if (part != null) {\n      part.toolInvocation = invocation;\n    } else {\n      message.parts.push({\n        type: 'tool-invocation',\n        toolInvocation: invocation,\n      });\n    }\n  }\n\n  const data: JSONValue[] = [];\n\n  // keep list of current message annotations for message\n  let messageAnnotations: JSONValue[] | undefined = replaceLastMessage\n    ? lastMessage?.annotations\n    : undefined;\n\n  // keep track of partial tool calls\n  const partialToolCalls: Record<\n    string,\n    { text: string; step: number; index: number; toolName: string }\n  > = {};\n\n  let usage: LanguageModelUsage = {\n    completionTokens: NaN,\n    promptTokens: NaN,\n    totalTokens: NaN,\n  };\n  let finishReason: LanguageModelV1FinishReason = 'unknown';\n\n  function execUpdate() {\n    // make a copy of the data array to ensure UI is updated (SWR)\n    const copiedData = [...data];\n\n    // keeps the currentMessage up to date with the latest annotations,\n    // even if annotations preceded the message creation\n    if (messageAnnotations?.length) {\n      message.annotations = messageAnnotations;\n    }\n\n    const copiedMessage = {\n      // deep copy the message to ensure that deep changes (msg attachments) are updated\n      // with SolidJS. SolidJS uses referential integration of sub-objects to detect changes.\n      ...structuredClone(message),\n      // add a revision id to ensure that the message is updated with SWR. SWR uses a\n      // hashing approach by default to detect changes, but it only works for shallow\n      // changes. This is why we need to add a revision id to ensure that the message\n      // is updated with SWR (without it, the changes get stuck in SWR and are not\n      // forwarded to rendering):\n      revisionId: generateId(),\n    } as UIMessage;\n\n    update({\n      message: copiedMessage,\n      data: copiedData,\n      replaceLastMessage,\n    });\n  }\n\n  await processDataStream({\n    stream,\n    onTextPart(value) {\n      if (currentTextPart == null) {\n        currentTextPart = {\n          type: 'text',\n          text: value,\n        };\n        message.parts.push(currentTextPart);\n      } else {\n        currentTextPart.text += value;\n      }\n\n      message.content += value;\n      execUpdate();\n    },\n    onReasoningPart(value) {\n      if (currentReasoningTextDetail == null) {\n        currentReasoningTextDetail = { type: 'text', text: value };\n        if (currentReasoningPart != null) {\n          currentReasoningPart.details.push(currentReasoningTextDetail);\n        }\n      } else {\n        currentReasoningTextDetail.text += value;\n      }\n\n      if (currentReasoningPart == null) {\n        currentReasoningPart = {\n          type: 'reasoning',\n          reasoning: value,\n          details: [currentReasoningTextDetail],\n        };\n        message.parts.push(currentReasoningPart);\n      } else {\n        currentReasoningPart.reasoning += value;\n      }\n\n      message.reasoning = (message.reasoning ?? '') + value;\n\n      execUpdate();\n    },\n    onReasoningSignaturePart(value) {\n      if (currentReasoningTextDetail != null) {\n        currentReasoningTextDetail.signature = value.signature;\n      }\n    },\n    onRedactedReasoningPart(value) {\n      if (currentReasoningPart == null) {\n        currentReasoningPart = {\n          type: 'reasoning',\n          reasoning: '',\n          details: [],\n        };\n        message.parts.push(currentReasoningPart);\n      }\n\n      currentReasoningPart.details.push({\n        type: 'redacted',\n        data: value.data,\n      });\n\n      currentReasoningTextDetail = undefined;\n\n      execUpdate();\n    },\n    onFilePart(value) {\n      message.parts.push({\n        type: 'file',\n        mimeType: value.mimeType,\n        data: value.data,\n      });\n\n      execUpdate();\n    },\n    onSourcePart(value) {\n      message.parts.push({\n        type: 'source',\n        source: value,\n      });\n\n      execUpdate();\n    },\n    onToolCallStreamingStartPart(value) {\n      if (message.toolInvocations == null) {\n        message.toolInvocations = [];\n      }\n\n      // add the partial tool call to the map\n      partialToolCalls[value.toolCallId] = {\n        text: '',\n        step,\n        toolName: value.toolName,\n        index: message.toolInvocations.length,\n      };\n\n      const invocation = {\n        state: 'partial-call',\n        step,\n        toolCallId: value.toolCallId,\n        toolName: value.toolName,\n        args: undefined,\n      } as const;\n\n      message.toolInvocations.push(invocation);\n\n      updateToolInvocationPart(value.toolCallId, invocation);\n\n      execUpdate();\n    },\n    onToolCallDeltaPart(value) {\n      const partialToolCall = partialToolCalls[value.toolCallId];\n\n      partialToolCall.text += value.argsTextDelta;\n\n      const { value: partialArgs } = parsePartialJson(partialToolCall.text);\n\n      const invocation = {\n        state: 'partial-call',\n        step: partialToolCall.step,\n        toolCallId: value.toolCallId,\n        toolName: partialToolCall.toolName,\n        args: partialArgs,\n      } as const;\n\n      message.toolInvocations![partialToolCall.index] = invocation;\n\n      updateToolInvocationPart(value.toolCallId, invocation);\n\n      execUpdate();\n    },\n    async onToolCallPart(value) {\n      const invocation = {\n        state: 'call',\n        step,\n        ...value,\n      } as const;\n\n      if (partialToolCalls[value.toolCallId] != null) {\n        // change the partial tool call to a full tool call\n        message.toolInvocations![partialToolCalls[value.toolCallId].index] =\n          invocation;\n      } else {\n        if (message.toolInvocations == null) {\n          message.toolInvocations = [];\n        }\n\n        message.toolInvocations.push(invocation);\n      }\n\n      updateToolInvocationPart(value.toolCallId, invocation);\n\n      execUpdate();\n\n      // invoke the onToolCall callback if it exists. This is blocking.\n      // In the future we should make this non-blocking, which\n      // requires additional state management for error handling etc.\n      if (onToolCall) {\n        const result = await onToolCall({ toolCall: value });\n        if (result != null) {\n          const invocation = {\n            state: 'result',\n            step,\n            ...value,\n            result,\n          } as const;\n\n          // store the result in the tool invocation\n          message.toolInvocations![message.toolInvocations!.length - 1] =\n            invocation;\n\n          updateToolInvocationPart(value.toolCallId, invocation);\n\n          execUpdate();\n        }\n      }\n    },\n    onToolResultPart(value) {\n      const toolInvocations = message.toolInvocations;\n\n      if (toolInvocations == null) {\n        throw new Error('tool_result must be preceded by a tool_call');\n      }\n\n      // find if there is any tool invocation with the same toolCallId\n      // and replace it with the result\n      const toolInvocationIndex = toolInvocations.findIndex(\n        invocation => invocation.toolCallId === value.toolCallId,\n      );\n\n      if (toolInvocationIndex === -1) {\n        throw new Error(\n          'tool_result must be preceded by a tool_call with the same toolCallId',\n        );\n      }\n\n      const invocation = {\n        ...toolInvocations[toolInvocationIndex],\n        state: 'result' as const,\n        ...value,\n      } as const;\n\n      toolInvocations[toolInvocationIndex] = invocation;\n\n      updateToolInvocationPart(value.toolCallId, invocation);\n\n      execUpdate();\n    },\n    onDataPart(value) {\n      data.push(...value);\n      execUpdate();\n    },\n    onMessageAnnotationsPart(value) {\n      if (messageAnnotations == null) {\n        messageAnnotations = [...value];\n      } else {\n        messageAnnotations.push(...value);\n      }\n\n      execUpdate();\n    },\n    onFinishStepPart(value) {\n      step += 1;\n\n      // reset the current text and reasoning parts\n      currentTextPart = value.isContinued ? currentTextPart : undefined;\n      currentReasoningPart = undefined;\n      currentReasoningTextDetail = undefined;\n    },\n    onStartStepPart(value) {\n      // keep message id stable when we are updating an existing message:\n      if (!replaceLastMessage) {\n        message.id = value.messageId;\n      }\n    },\n    onFinishMessagePart(value) {\n      finishReason = value.finishReason;\n      if (value.usage != null) {\n        usage = calculateLanguageModelUsage(value.usage);\n      }\n    },\n    onErrorPart(error) {\n      throw new Error(error);\n    },\n  });\n\n  onFinish?.({ message, finishReason, usage });\n}\n", "/**\nRepresents the number of tokens used in a prompt and completion.\n */\nexport type LanguageModelUsage = {\n  /**\nThe number of tokens used in the prompt.\n   */\n  promptTokens: number;\n\n  /**\nThe number of tokens used in the completion.\n */\n  completionTokens: number;\n\n  /**\nThe total number of tokens used (promptTokens + completionTokens).\n   */\n  totalTokens: number;\n};\n\n/**\nRepresents the number of tokens used in an embedding.\n */\nexport type EmbeddingModelUsage = {\n  /**\nThe number of tokens used in the embedding.\n   */\n  tokens: number;\n};\n\nexport function calculateLanguageModelUsage({\n  promptTokens,\n  completionTokens,\n}: {\n  promptTokens: number;\n  completionTokens: number;\n}): LanguageModelUsage {\n  return {\n    promptTokens,\n    completionTokens,\n    totalTokens: promptTokens + completionTokens,\n  };\n}\n", "import { JSONValue } from '@ai-sdk/provider';\nimport { safeParseJSON } from '@ai-sdk/provider-utils';\nimport { fixJson } from './fix-json';\n\nexport function parsePartialJson(jsonText: string | undefined): {\n  value: JSONValue | undefined;\n  state:\n    | 'undefined-input'\n    | 'successful-parse'\n    | 'repaired-parse'\n    | 'failed-parse';\n} {\n  if (jsonText === undefined) {\n    return { value: undefined, state: 'undefined-input' };\n  }\n\n  let result = safeParseJSON({ text: jsonText });\n\n  if (result.success) {\n    return { value: result.value, state: 'successful-parse' };\n  }\n\n  result = safeParseJSON({ text: fixJson(jsonText) });\n\n  if (result.success) {\n    return { value: result.value, state: 'repaired-parse' };\n  }\n\n  return { value: undefined, state: 'failed-parse' };\n}\n", "type State =\n  | 'ROOT'\n  | 'FINISH'\n  | 'INSIDE_STRING'\n  | 'INSIDE_STRING_ESCAPE'\n  | 'INSIDE_LITERAL'\n  | 'INSIDE_NUMBER'\n  | 'INSIDE_OBJECT_START'\n  | 'INSIDE_OBJECT_KEY'\n  | 'INSIDE_OBJECT_AFTER_KEY'\n  | 'INSIDE_OBJECT_BEFORE_VALUE'\n  | 'INSIDE_OBJECT_AFTER_VALUE'\n  | 'INSIDE_OBJECT_AFTER_COMMA'\n  | 'INSIDE_ARRAY_START'\n  | 'INSIDE_ARRAY_AFTER_VALUE'\n  | 'INSIDE_ARRAY_AFTER_COMMA';\n\n// Implemented as a scanner with additional fixing\n// that performs a single linear time scan pass over the partial JSON.\n//\n// The states should ideally match relevant states from the JSON spec:\n// https://www.json.org/json-en.html\n//\n// Please note that invalid JSON is not considered/covered, because it\n// is assumed that the resulting JSON will be processed by a standard\n// JSON parser that will detect any invalid JSON.\nexport function fixJson(input: string): string {\n  const stack: State[] = ['ROOT'];\n  let lastValidIndex = -1;\n  let literalStart: number | null = null;\n\n  function processValueStart(char: string, i: number, swapState: State) {\n    {\n      switch (char) {\n        case '\"': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_STRING');\n          break;\n        }\n\n        case 'f':\n        case 't':\n        case 'n': {\n          lastValidIndex = i;\n          literalStart = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_LITERAL');\n          break;\n        }\n\n        case '-': {\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_NUMBER');\n          break;\n        }\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_NUMBER');\n          break;\n        }\n\n        case '{': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_OBJECT_START');\n          break;\n        }\n\n        case '[': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_ARRAY_START');\n          break;\n        }\n      }\n    }\n  }\n\n  function processAfterObjectValue(char: string, i: number) {\n    switch (char) {\n      case ',': {\n        stack.pop();\n        stack.push('INSIDE_OBJECT_AFTER_COMMA');\n        break;\n      }\n      case '}': {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n\n  function processAfterArrayValue(char: string, i: number) {\n    switch (char) {\n      case ',': {\n        stack.pop();\n        stack.push('INSIDE_ARRAY_AFTER_COMMA');\n        break;\n      }\n      case ']': {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const char = input[i];\n    const currentState = stack[stack.length - 1];\n\n    switch (currentState) {\n      case 'ROOT':\n        processValueStart(char, i, 'FINISH');\n        break;\n\n      case 'INSIDE_OBJECT_START': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_KEY');\n            break;\n          }\n          case '}': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_COMMA': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_KEY');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_KEY': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_AFTER_KEY');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_KEY': {\n        switch (char) {\n          case ':': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_BEFORE_VALUE');\n\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_BEFORE_VALUE': {\n        processValueStart(char, i, 'INSIDE_OBJECT_AFTER_VALUE');\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_VALUE': {\n        processAfterObjectValue(char, i);\n        break;\n      }\n\n      case 'INSIDE_STRING': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            lastValidIndex = i;\n            break;\n          }\n\n          case '\\\\': {\n            stack.push('INSIDE_STRING_ESCAPE');\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_ARRAY_START': {\n        switch (char) {\n          case ']': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n            processValueStart(char, i, 'INSIDE_ARRAY_AFTER_VALUE');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_ARRAY_AFTER_VALUE': {\n        switch (char) {\n          case ',': {\n            stack.pop();\n            stack.push('INSIDE_ARRAY_AFTER_COMMA');\n            break;\n          }\n\n          case ']': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n            break;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_ARRAY_AFTER_COMMA': {\n        processValueStart(char, i, 'INSIDE_ARRAY_AFTER_VALUE');\n        break;\n      }\n\n      case 'INSIDE_STRING_ESCAPE': {\n        stack.pop();\n        lastValidIndex = i;\n\n        break;\n      }\n\n      case 'INSIDE_NUMBER': {\n        switch (char) {\n          case '0':\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9': {\n            lastValidIndex = i;\n            break;\n          }\n\n          case 'e':\n          case 'E':\n          case '-':\n          case '.': {\n            break;\n          }\n\n          case ',': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n              processAfterArrayValue(char, i);\n            }\n\n            if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n              processAfterObjectValue(char, i);\n            }\n\n            break;\n          }\n\n          case '}': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n              processAfterObjectValue(char, i);\n            }\n\n            break;\n          }\n\n          case ']': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n              processAfterArrayValue(char, i);\n            }\n\n            break;\n          }\n\n          default: {\n            stack.pop();\n            break;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_LITERAL': {\n        const partialLiteral = input.substring(literalStart!, i + 1);\n\n        if (\n          !'false'.startsWith(partialLiteral) &&\n          !'true'.startsWith(partialLiteral) &&\n          !'null'.startsWith(partialLiteral)\n        ) {\n          stack.pop();\n\n          if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n            processAfterObjectValue(char, i);\n          } else if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n            processAfterArrayValue(char, i);\n          }\n        } else {\n          lastValidIndex = i;\n        }\n\n        break;\n      }\n    }\n  }\n\n  let result = input.slice(0, lastValidIndex + 1);\n\n  for (let i = stack.length - 1; i >= 0; i--) {\n    const state = stack[i];\n\n    switch (state) {\n      case 'INSIDE_STRING': {\n        result += '\"';\n        break;\n      }\n\n      case 'INSIDE_OBJECT_KEY':\n      case 'INSIDE_OBJECT_AFTER_KEY':\n      case 'INSIDE_OBJECT_AFTER_COMMA':\n      case 'INSIDE_OBJECT_START':\n      case 'INSIDE_OBJECT_BEFORE_VALUE':\n      case 'INSIDE_OBJECT_AFTER_VALUE': {\n        result += '}';\n        break;\n      }\n\n      case 'INSIDE_ARRAY_START':\n      case 'INSIDE_ARRAY_AFTER_COMMA':\n      case 'INSIDE_ARRAY_AFTER_VALUE': {\n        result += ']';\n        break;\n      }\n\n      case 'INSIDE_LITERAL': {\n        const partialLiteral = input.substring(literalStart!, input.length);\n\n        if ('true'.startsWith(partialLiteral)) {\n          result += 'true'.slice(partialLiteral.length);\n        } else if ('false'.startsWith(partialLiteral)) {\n          result += 'false'.slice(partialLiteral.length);\n        } else if ('null'.startsWith(partialLiteral)) {\n          result += 'null'.slice(partialLiteral.length);\n        }\n      }\n    }\n  }\n\n  return result;\n}\n", "import {\n  LanguageModelV1FinishReason,\n  LanguageModelV1Source,\n} from '@ai-sdk/provider';\nimport { ToolCall, ToolResult } from '@ai-sdk/provider-utils';\nimport { JSONValue } from './types';\n\nexport type DataStreamString =\n  `${(typeof DataStreamStringPrefixes)[keyof typeof DataStreamStringPrefixes]}:${string}\\n`;\n\nexport interface DataStreamPart<\n  CODE extends string,\n  NAME extends string,\n  TYPE,\n> {\n  code: CODE;\n  name: NAME;\n  parse: (value: JSONValue) => { type: NAME; value: TYPE };\n}\n\nconst textStreamPart: DataStreamPart<'0', 'text', string> = {\n  code: '0',\n  name: 'text',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"text\" parts expect a string value.');\n    }\n    return { type: 'text', value };\n  },\n};\n\nconst dataStreamPart: DataStreamPart<'2', 'data', Array<JSONValue>> = {\n  code: '2',\n  name: 'data',\n  parse: (value: JSONValue) => {\n    if (!Array.isArray(value)) {\n      throw new Error('\"data\" parts expect an array value.');\n    }\n\n    return { type: 'data', value };\n  },\n};\n\nconst errorStreamPart: DataStreamPart<'3', 'error', string> = {\n  code: '3',\n  name: 'error',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"error\" parts expect a string value.');\n    }\n    return { type: 'error', value };\n  },\n};\n\nconst messageAnnotationsStreamPart: DataStreamPart<\n  '8',\n  'message_annotations',\n  Array<JSONValue>\n> = {\n  code: '8',\n  name: 'message_annotations',\n  parse: (value: JSONValue) => {\n    if (!Array.isArray(value)) {\n      throw new Error('\"message_annotations\" parts expect an array value.');\n    }\n\n    return { type: 'message_annotations', value };\n  },\n};\n\nconst toolCallStreamPart: DataStreamPart<\n  '9',\n  'tool_call',\n  ToolCall<string, any>\n> = {\n  code: '9',\n  name: 'tool_call',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('toolName' in value) ||\n      typeof value.toolName !== 'string' ||\n      !('args' in value) ||\n      typeof value.args !== 'object'\n    ) {\n      throw new Error(\n        '\"tool_call\" parts expect an object with a \"toolCallId\", \"toolName\", and \"args\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_call',\n      value: value as unknown as ToolCall<string, any>,\n    };\n  },\n};\n\nconst toolResultStreamPart: DataStreamPart<\n  'a',\n  'tool_result',\n  Omit<ToolResult<string, any, any>, 'args' | 'toolName'>\n> = {\n  code: 'a',\n  name: 'tool_result',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('result' in value)\n    ) {\n      throw new Error(\n        '\"tool_result\" parts expect an object with a \"toolCallId\" and a \"result\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_result',\n      value: value as unknown as Omit<\n        ToolResult<string, any, any>,\n        'args' | 'toolName'\n      >,\n    };\n  },\n};\n\nconst toolCallStreamingStartStreamPart: DataStreamPart<\n  'b',\n  'tool_call_streaming_start',\n  { toolCallId: string; toolName: string }\n> = {\n  code: 'b',\n  name: 'tool_call_streaming_start',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('toolName' in value) ||\n      typeof value.toolName !== 'string'\n    ) {\n      throw new Error(\n        '\"tool_call_streaming_start\" parts expect an object with a \"toolCallId\" and \"toolName\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_call_streaming_start',\n      value: value as unknown as { toolCallId: string; toolName: string },\n    };\n  },\n};\n\nconst toolCallDeltaStreamPart: DataStreamPart<\n  'c',\n  'tool_call_delta',\n  { toolCallId: string; argsTextDelta: string }\n> = {\n  code: 'c',\n  name: 'tool_call_delta',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('toolCallId' in value) ||\n      typeof value.toolCallId !== 'string' ||\n      !('argsTextDelta' in value) ||\n      typeof value.argsTextDelta !== 'string'\n    ) {\n      throw new Error(\n        '\"tool_call_delta\" parts expect an object with a \"toolCallId\" and \"argsTextDelta\" property.',\n      );\n    }\n\n    return {\n      type: 'tool_call_delta',\n      value: value as unknown as {\n        toolCallId: string;\n        argsTextDelta: string;\n      },\n    };\n  },\n};\n\nconst finishMessageStreamPart: DataStreamPart<\n  'd',\n  'finish_message',\n  {\n    finishReason: LanguageModelV1FinishReason;\n    // TODO v5 remove usage from finish event (only on step-finish)\n    usage?: {\n      promptTokens: number;\n      completionTokens: number;\n    };\n  }\n> = {\n  code: 'd',\n  name: 'finish_message',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('finishReason' in value) ||\n      typeof value.finishReason !== 'string'\n    ) {\n      throw new Error(\n        '\"finish_message\" parts expect an object with a \"finishReason\" property.',\n      );\n    }\n\n    const result: {\n      finishReason: LanguageModelV1FinishReason;\n      usage?: {\n        promptTokens: number;\n        completionTokens: number;\n      };\n    } = {\n      finishReason: value.finishReason as LanguageModelV1FinishReason,\n    };\n\n    if (\n      'usage' in value &&\n      value.usage != null &&\n      typeof value.usage === 'object' &&\n      'promptTokens' in value.usage &&\n      'completionTokens' in value.usage\n    ) {\n      result.usage = {\n        promptTokens:\n          typeof value.usage.promptTokens === 'number'\n            ? value.usage.promptTokens\n            : Number.NaN,\n        completionTokens:\n          typeof value.usage.completionTokens === 'number'\n            ? value.usage.completionTokens\n            : Number.NaN,\n      };\n    }\n\n    return {\n      type: 'finish_message',\n      value: result,\n    };\n  },\n};\n\nconst finishStepStreamPart: DataStreamPart<\n  'e',\n  'finish_step',\n  {\n    isContinued: boolean;\n    finishReason: LanguageModelV1FinishReason;\n    usage?: {\n      promptTokens: number;\n      completionTokens: number;\n    };\n  }\n> = {\n  code: 'e',\n  name: 'finish_step',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('finishReason' in value) ||\n      typeof value.finishReason !== 'string'\n    ) {\n      throw new Error(\n        '\"finish_step\" parts expect an object with a \"finishReason\" property.',\n      );\n    }\n\n    const result: {\n      isContinued: boolean;\n      finishReason: LanguageModelV1FinishReason;\n      usage?: {\n        promptTokens: number;\n        completionTokens: number;\n      };\n    } = {\n      finishReason: value.finishReason as LanguageModelV1FinishReason,\n      isContinued: false,\n    };\n\n    if (\n      'usage' in value &&\n      value.usage != null &&\n      typeof value.usage === 'object' &&\n      'promptTokens' in value.usage &&\n      'completionTokens' in value.usage\n    ) {\n      result.usage = {\n        promptTokens:\n          typeof value.usage.promptTokens === 'number'\n            ? value.usage.promptTokens\n            : Number.NaN,\n        completionTokens:\n          typeof value.usage.completionTokens === 'number'\n            ? value.usage.completionTokens\n            : Number.NaN,\n      };\n    }\n\n    if ('isContinued' in value && typeof value.isContinued === 'boolean') {\n      result.isContinued = value.isContinued;\n    }\n\n    return {\n      type: 'finish_step',\n      value: result,\n    };\n  },\n};\n\nconst startStepStreamPart: DataStreamPart<\n  'f',\n  'start_step',\n  {\n    messageId: string;\n  }\n> = {\n  code: 'f',\n  name: 'start_step',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('messageId' in value) ||\n      typeof value.messageId !== 'string'\n    ) {\n      throw new Error(\n        '\"start_step\" parts expect an object with an \"id\" property.',\n      );\n    }\n\n    return {\n      type: 'start_step',\n      value: {\n        messageId: value.messageId,\n      },\n    };\n  },\n};\n\nconst reasoningStreamPart: DataStreamPart<'g', 'reasoning', string> = {\n  code: 'g',\n  name: 'reasoning',\n  parse: (value: JSONValue) => {\n    if (typeof value !== 'string') {\n      throw new Error('\"reasoning\" parts expect a string value.');\n    }\n    return { type: 'reasoning', value };\n  },\n};\n\nconst sourcePart: DataStreamPart<'h', 'source', LanguageModelV1Source> = {\n  code: 'h',\n  name: 'source',\n  parse: (value: JSONValue) => {\n    if (value == null || typeof value !== 'object') {\n      throw new Error('\"source\" parts expect a Source object.');\n    }\n\n    return {\n      type: 'source',\n      value: value as LanguageModelV1Source,\n    };\n  },\n};\n\nconst redactedReasoningStreamPart: DataStreamPart<\n  'i',\n  'redacted_reasoning',\n  { data: string }\n> = {\n  code: 'i',\n  name: 'redacted_reasoning',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('data' in value) ||\n      typeof value.data !== 'string'\n    ) {\n      throw new Error(\n        '\"redacted_reasoning\" parts expect an object with a \"data\" property.',\n      );\n    }\n    return { type: 'redacted_reasoning', value: { data: value.data } };\n  },\n};\n\nconst reasoningSignatureStreamPart: DataStreamPart<\n  'j',\n  'reasoning_signature',\n  { signature: string }\n> = {\n  code: 'j',\n  name: 'reasoning_signature',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('signature' in value) ||\n      typeof value.signature !== 'string'\n    ) {\n      throw new Error(\n        '\"reasoning_signature\" parts expect an object with a \"signature\" property.',\n      );\n    }\n    return {\n      type: 'reasoning_signature',\n      value: { signature: value.signature },\n    };\n  },\n};\n\nconst fileStreamPart: DataStreamPart<\n  'k',\n  'file',\n  {\n    data: string; // base64 encoded data\n    mimeType: string;\n  }\n> = {\n  code: 'k',\n  name: 'file',\n  parse: (value: JSONValue) => {\n    if (\n      value == null ||\n      typeof value !== 'object' ||\n      !('data' in value) ||\n      typeof value.data !== 'string' ||\n      !('mimeType' in value) ||\n      typeof value.mimeType !== 'string'\n    ) {\n      throw new Error(\n        '\"file\" parts expect an object with a \"data\" and \"mimeType\" property.',\n      );\n    }\n    return { type: 'file', value: value as { data: string; mimeType: string } };\n  },\n};\n\nconst dataStreamParts = [\n  textStreamPart,\n  dataStreamPart,\n  errorStreamPart,\n  messageAnnotationsStreamPart,\n  toolCallStreamPart,\n  toolResultStreamPart,\n  toolCallStreamingStartStreamPart,\n  toolCallDeltaStreamPart,\n  finishMessageStreamPart,\n  finishStepStreamPart,\n  startStepStreamPart,\n  reasoningStreamPart,\n  sourcePart,\n  redactedReasoningStreamPart,\n  reasoningSignatureStreamPart,\n  fileStreamPart,\n] as const;\n\nexport const dataStreamPartsByCode = Object.fromEntries(\n  dataStreamParts.map(part => [part.code, part]),\n) as {\n  [K in (typeof dataStreamParts)[number]['code']]: (typeof dataStreamParts)[number];\n};\n\ntype DataStreamParts = (typeof dataStreamParts)[number];\n\n/**\n * Maps the type of a stream part to its value type.\n */\ntype DataStreamPartValueType = {\n  [P in DataStreamParts as P['name']]: ReturnType<P['parse']>['value'];\n};\n\nexport type DataStreamPartType = ReturnType<DataStreamParts['parse']>;\n\n/**\n * The map of prefixes for data in the stream\n *\n * - 0: Text from the LLM response\n * - 1: (OpenAI) function_call responses\n * - 2: custom JSON added by the user using `Data`\n * - 6: (OpenAI) tool_call responses\n *\n * Example:\n * ```\n * 0:Vercel\n * 0:'s\n * 0: AI\n * 0: AI\n * 0: SDK\n * 0: is great\n * 0:!\n * 2: { \"someJson\": \"value\" }\n * 1: {\"function_call\": {\"name\": \"get_current_weather\", \"arguments\": \"{\\\\n\\\\\"location\\\\\": \\\\\"Charlottesville, Virginia\\\\\",\\\\n\\\\\"format\\\\\": \\\\\"celsius\\\\\"\\\\n}\"}}\n * 6: {\"tool_call\": {\"id\": \"tool_0\", \"type\": \"function\", \"function\": {\"name\": \"get_current_weather\", \"arguments\": \"{\\\\n\\\\\"location\\\\\": \\\\\"Charlottesville, Virginia\\\\\",\\\\n\\\\\"format\\\\\": \\\\\"celsius\\\\\"\\\\n}\"}}}\n *```\n */\nexport const DataStreamStringPrefixes = Object.fromEntries(\n  dataStreamParts.map(part => [part.name, part.code]),\n) as {\n  [K in DataStreamParts['name']]: (typeof dataStreamParts)[number]['code'];\n};\n\nexport const validCodes = dataStreamParts.map(part => part.code);\n\n/**\nParses a stream part from a string.\n\n@param line The string to parse.\n@returns The parsed stream part.\n@throws An error if the string cannot be parsed.\n */\nexport const parseDataStreamPart = (line: string): DataStreamPartType => {\n  const firstSeparatorIndex = line.indexOf(':');\n\n  if (firstSeparatorIndex === -1) {\n    throw new Error('Failed to parse stream string. No separator found.');\n  }\n\n  const prefix = line.slice(0, firstSeparatorIndex);\n\n  if (!validCodes.includes(prefix as keyof typeof dataStreamPartsByCode)) {\n    throw new Error(`Failed to parse stream string. Invalid code ${prefix}.`);\n  }\n\n  const code = prefix as keyof typeof dataStreamPartsByCode;\n\n  const textValue = line.slice(firstSeparatorIndex + 1);\n  const jsonValue: JSONValue = JSON.parse(textValue);\n\n  return dataStreamPartsByCode[code].parse(jsonValue);\n};\n\n/**\nPrepends a string with a prefix from the `StreamChunkPrefixes`, JSON-ifies it,\nand appends a new line.\n\nIt ensures type-safety for the part type and value.\n */\nexport function formatDataStreamPart<T extends keyof DataStreamPartValueType>(\n  type: T,\n  value: DataStreamPartValueType[T],\n): DataStreamString {\n  const streamPart = dataStreamParts.find(part => part.name === type);\n\n  if (!streamPart) {\n    throw new Error(`Invalid stream part type: ${type}`);\n  }\n\n  return `${streamPart.code}:${JSON.stringify(value)}\\n`;\n}\n", "import { DataStreamPartType, parseDataStreamPart } from './data-stream-parts';\n\nconst NEWLINE = '\\n'.charCodeAt(0);\n\n// concatenates all the chunks into a single Uint8Array\nfunction concatChunks(chunks: Uint8Array[], totalLength: number) {\n  const concatenatedChunks = new Uint8Array(totalLength);\n\n  let offset = 0;\n  for (const chunk of chunks) {\n    concatenatedChunks.set(chunk, offset);\n    offset += chunk.length;\n  }\n  chunks.length = 0;\n\n  return concatenatedChunks;\n}\n\nexport async function processDataStream({\n  stream,\n  onTextPart,\n  onReasoningPart,\n  onReasoningSignaturePart,\n  onRedactedReasoningPart,\n  onSourcePart,\n  onFilePart,\n  onDataPart,\n  onErrorPart,\n  onToolCallStreamingStartPart,\n  onToolCallDeltaPart,\n  onToolCallPart,\n  onToolResultPart,\n  onMessageAnnotationsPart,\n  onFinishMessagePart,\n  onFinishStepPart,\n  onStartStepPart,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  onTextPart?: (\n    streamPart: (DataStreamPartType & { type: 'text' })['value'],\n  ) => Promise<void> | void;\n  onReasoningPart?: (\n    streamPart: (DataStreamPartType & { type: 'reasoning' })['value'],\n  ) => Promise<void> | void;\n  onReasoningSignaturePart?: (\n    streamPart: (DataStreamPartType & { type: 'reasoning_signature' })['value'],\n  ) => Promise<void> | void;\n  onRedactedReasoningPart?: (\n    streamPart: (DataStreamPartType & { type: 'redacted_reasoning' })['value'],\n  ) => Promise<void> | void;\n  onFilePart?: (\n    streamPart: (DataStreamPartType & { type: 'file' })['value'],\n  ) => Promise<void> | void;\n  onSourcePart?: (\n    streamPart: (DataStreamPartType & { type: 'source' })['value'],\n  ) => Promise<void> | void;\n  onDataPart?: (\n    streamPart: (DataStreamPartType & { type: 'data' })['value'],\n  ) => Promise<void> | void;\n  onErrorPart?: (\n    streamPart: (DataStreamPartType & { type: 'error' })['value'],\n  ) => Promise<void> | void;\n  onToolCallStreamingStartPart?: (\n    streamPart: (DataStreamPartType & {\n      type: 'tool_call_streaming_start';\n    })['value'],\n  ) => Promise<void> | void;\n  onToolCallDeltaPart?: (\n    streamPart: (DataStreamPartType & { type: 'tool_call_delta' })['value'],\n  ) => Promise<void> | void;\n  onToolCallPart?: (\n    streamPart: (DataStreamPartType & { type: 'tool_call' })['value'],\n  ) => Promise<void> | void;\n  onToolResultPart?: (\n    streamPart: (DataStreamPartType & { type: 'tool_result' })['value'],\n  ) => Promise<void> | void;\n  onMessageAnnotationsPart?: (\n    streamPart: (DataStreamPartType & {\n      type: 'message_annotations';\n    })['value'],\n  ) => Promise<void> | void;\n  onFinishMessagePart?: (\n    streamPart: (DataStreamPartType & { type: 'finish_message' })['value'],\n  ) => Promise<void> | void;\n  onFinishStepPart?: (\n    streamPart: (DataStreamPartType & { type: 'finish_step' })['value'],\n  ) => Promise<void> | void;\n  onStartStepPart?: (\n    streamPart: (DataStreamPartType & { type: 'start_step' })['value'],\n  ) => Promise<void> | void;\n}): Promise<void> {\n  // implementation note: this slightly more complex algorithm is required\n  // to pass the tests in the edge environment.\n\n  const reader = stream.getReader();\n  const decoder = new TextDecoder();\n  const chunks: Uint8Array[] = [];\n  let totalLength = 0;\n\n  while (true) {\n    const { value } = await reader.read();\n\n    if (value) {\n      chunks.push(value);\n      totalLength += value.length;\n      if (value[value.length - 1] !== NEWLINE) {\n        // if the last character is not a newline, we have not read the whole JSON value\n        continue;\n      }\n    }\n\n    if (chunks.length === 0) {\n      break; // we have reached the end of the stream\n    }\n\n    const concatenatedChunks = concatChunks(chunks, totalLength);\n    totalLength = 0;\n\n    const streamParts = decoder\n      .decode(concatenatedChunks, { stream: true })\n      .split('\\n')\n      .filter(line => line !== '') // splitting leaves an empty string at the end\n      .map(parseDataStreamPart);\n\n    for (const { type, value } of streamParts) {\n      switch (type) {\n        case 'text':\n          await onTextPart?.(value);\n          break;\n        case 'reasoning':\n          await onReasoningPart?.(value);\n          break;\n        case 'reasoning_signature':\n          await onReasoningSignaturePart?.(value);\n          break;\n        case 'redacted_reasoning':\n          await onRedactedReasoningPart?.(value);\n          break;\n        case 'file':\n          await onFilePart?.(value);\n          break;\n        case 'source':\n          await onSourcePart?.(value);\n          break;\n        case 'data':\n          await onDataPart?.(value);\n          break;\n        case 'error':\n          await onErrorPart?.(value);\n          break;\n        case 'message_annotations':\n          await onMessageAnnotationsPart?.(value);\n          break;\n        case 'tool_call_streaming_start':\n          await onToolCallStreamingStartPart?.(value);\n          break;\n        case 'tool_call_delta':\n          await onToolCallDeltaPart?.(value);\n          break;\n        case 'tool_call':\n          await onToolCallPart?.(value);\n          break;\n        case 'tool_result':\n          await onToolResultPart?.(value);\n          break;\n        case 'finish_message':\n          await onFinishMessagePart?.(value);\n          break;\n        case 'finish_step':\n          await onFinishStepPart?.(value);\n          break;\n        case 'start_step':\n          await onStartStepPart?.(value);\n          break;\n        default: {\n          const exhaustiveCheck: never = type;\n          throw new Error(`Unknown stream part type: ${exhaustiveCheck}`);\n        }\n      }\n    }\n  }\n}\n", "import { JSONValue } from '@ai-sdk/provider';\nimport { generateId as generateIdFunction } from '@ai-sdk/provider-utils';\nimport { processTextStream } from './process-text-stream';\nimport { TextUIPart, UIMessage, UseChatOptions } from './types';\n\nexport async function processChatTextResponse({\n  stream,\n  update,\n  onFinish,\n  getCurrentDate = () => new Date(),\n  generateId = generateIdFunction,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  update: (options: {\n    message: UIMessage;\n    data: JSONValue[] | undefined;\n    replaceLastMessage: boolean;\n  }) => void;\n  onFinish: UseChatOptions['onFinish'];\n  getCurrentDate?: () => Date;\n  generateId?: () => string;\n}) {\n  const textPart: TextUIPart = { type: 'text', text: '' };\n\n  const resultMessage: UIMessage = {\n    id: generateId(),\n    createdAt: getCurrentDate(),\n    role: 'assistant' as const,\n    content: '',\n    parts: [textPart],\n  };\n\n  await processTextStream({\n    stream,\n    onTextPart: chunk => {\n      resultMessage.content += chunk;\n      textPart.text += chunk;\n\n      // note: creating a new message object is required for Solid.js streaming\n      update({\n        message: { ...resultMessage },\n        data: [],\n        replaceLastMessage: false,\n      });\n    },\n  });\n\n  // in text mode, we don't have usage information or finish reason:\n  onFinish?.(resultMessage, {\n    usage: { completionTokens: NaN, promptTokens: NaN, totalTokens: NaN },\n    finishReason: 'unknown',\n  });\n}\n", "export async function processTextStream({\n  stream,\n  onTextPart,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  onTextPart: (chunk: string) => Promise<void> | void;\n}): Promise<void> {\n  const reader = stream.pipeThrough(new TextDecoderStream()).getReader();\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done) {\n      break;\n    }\n    await onTextPart(value);\n  }\n}\n", "import { processChatResponse } from './process-chat-response';\nimport { processChatTextResponse } from './process-chat-text-response';\nimport { IdGenerator, JSONValue, UIMessage, UseChatOptions } from './types';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => fetch;\n\nexport async function callChatApi({\n  api,\n  body,\n  streamProtocol = 'data',\n  credentials,\n  headers,\n  abortController,\n  restoreMessagesOnFailure,\n  onResponse,\n  onUpdate,\n  onFinish,\n  onToolCall,\n  generateId,\n  fetch = getOriginalFetch(),\n  lastMessage,\n}: {\n  api: string;\n  body: Record<string, any>;\n  streamProtocol: 'data' | 'text' | undefined;\n  credentials: RequestCredentials | undefined;\n  headers: HeadersInit | undefined;\n  abortController: (() => AbortController | null) | undefined;\n  restoreMessagesOnFailure: () => void;\n  onResponse: ((response: Response) => void | Promise<void>) | undefined;\n  onUpdate: (options: {\n    message: UIMessage;\n    data: JSONValue[] | undefined;\n    replaceLastMessage: boolean;\n  }) => void;\n  onFinish: UseChatOptions['onFinish'];\n  onToolCall: UseChatOptions['onToolCall'];\n  generateId: IdGenerator;\n  fetch: ReturnType<typeof getOriginalFetch> | undefined;\n  lastMessage: UIMessage | undefined;\n}) {\n  const response = await fetch(api, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    signal: abortController?.()?.signal,\n    credentials,\n  }).catch(err => {\n    restoreMessagesOnFailure();\n    throw err;\n  });\n\n  if (onResponse) {\n    try {\n      await onResponse(response);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  if (!response.ok) {\n    restoreMessagesOnFailure();\n    throw new Error(\n      (await response.text()) ?? 'Failed to fetch the chat response.',\n    );\n  }\n\n  if (!response.body) {\n    throw new Error('The response body is empty.');\n  }\n\n  switch (streamProtocol) {\n    case 'text': {\n      await processChatTextResponse({\n        stream: response.body,\n        update: onUpdate,\n        onFinish,\n        generateId,\n      });\n      return;\n    }\n\n    case 'data': {\n      await processChatResponse({\n        stream: response.body,\n        update: onUpdate,\n        lastMessage,\n        onToolCall,\n        onFinish({ message, finishReason, usage }) {\n          if (onFinish && message != null) {\n            onFinish(message, { usage, finishReason });\n          }\n        },\n        generateId,\n      });\n      return;\n    }\n\n    default: {\n      const exhaustiveCheck: never = streamProtocol;\n      throw new Error(`Unknown stream protocol: ${exhaustiveCheck}`);\n    }\n  }\n}\n", "import { processTextStream } from './process-text-stream';\nimport { processDataStream } from './process-data-stream';\nimport { JSONValue } from './types';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => fetch;\n\nexport async function callCompletionApi({\n  api,\n  prompt,\n  credentials,\n  headers,\n  body,\n  streamProtocol = 'data',\n  setCompletion,\n  setLoading,\n  setError,\n  setAbortController,\n  onResponse,\n  onFinish,\n  onError,\n  onData,\n  fetch = getOriginalFetch(),\n}: {\n  api: string;\n  prompt: string;\n  credentials: RequestCredentials | undefined;\n  headers: HeadersInit | undefined;\n  body: Record<string, any>;\n  streamProtocol: 'data' | 'text' | undefined;\n  setCompletion: (completion: string) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: Error | undefined) => void;\n  setAbortController: (abortController: AbortController | null) => void;\n  onResponse: ((response: Response) => void | Promise<void>) | undefined;\n  onFinish: ((prompt: string, completion: string) => void) | undefined;\n  onError: ((error: Error) => void) | undefined;\n  onData: ((data: JSONValue[]) => void) | undefined;\n  fetch: ReturnType<typeof getOriginalFetch> | undefined;\n}) {\n  try {\n    setLoading(true);\n    setError(undefined);\n\n    const abortController = new AbortController();\n    setAbortController(abortController);\n\n    // Empty the completion immediately.\n    setCompletion('');\n\n    const response = await fetch(api, {\n      method: 'POST',\n      body: JSON.stringify({\n        prompt,\n        ...body,\n      }),\n      credentials,\n      headers: {\n        'Content-Type': 'application/json',\n        ...headers,\n      },\n      signal: abortController.signal,\n    }).catch(err => {\n      throw err;\n    });\n\n    if (onResponse) {\n      try {\n        await onResponse(response);\n      } catch (err) {\n        throw err;\n      }\n    }\n\n    if (!response.ok) {\n      throw new Error(\n        (await response.text()) ?? 'Failed to fetch the chat response.',\n      );\n    }\n\n    if (!response.body) {\n      throw new Error('The response body is empty.');\n    }\n\n    let result = '';\n\n    switch (streamProtocol) {\n      case 'text': {\n        await processTextStream({\n          stream: response.body,\n          onTextPart: chunk => {\n            result += chunk;\n            setCompletion(result);\n          },\n        });\n        break;\n      }\n      case 'data': {\n        await processDataStream({\n          stream: response.body,\n          onTextPart(value) {\n            result += value;\n            setCompletion(result);\n          },\n          onDataPart(value) {\n            onData?.(value);\n          },\n          onErrorPart(value) {\n            throw new Error(value);\n          },\n        });\n        break;\n      }\n      default: {\n        const exhaustiveCheck: never = streamProtocol;\n        throw new Error(`Unknown stream protocol: ${exhaustiveCheck}`);\n      }\n    }\n\n    if (onFinish) {\n      onFinish(prompt, result);\n    }\n\n    setAbortController(null);\n    return result;\n  } catch (err) {\n    // Ignore abort errors as they are expected.\n    if ((err as any).name === 'AbortError') {\n      setAbortController(null);\n      return null;\n    }\n\n    if (err instanceof Error) {\n      if (onError) {\n        onError(err);\n      }\n    }\n\n    setError(err as Error);\n  } finally {\n    setLoading(false);\n  }\n}\n", "/**\n * Converts a data URL of type text/* to a text string.\n */\nexport function getTextFromDataUrl(dataUrl: string): string {\n  const [header, base64Content] = dataUrl.split(',');\n  const mimeType = header.split(';')[0].split(':')[1];\n\n  if (mimeType == null || base64Content == null) {\n    throw new Error('Invalid data URL format');\n  }\n\n  try {\n    return window.atob(base64Content);\n  } catch (error) {\n    throw new Error(`Error decoding data URL`);\n  }\n}\n", "import { ToolInvocation } from './types';\n\nexport function extractMaxToolInvocationStep(\n  toolInvocations: ToolInvocation[] | undefined,\n): number | undefined {\n  return toolInvocations?.reduce((max, toolInvocation) => {\n    return Math.max(max, toolInvocation.step ?? 0);\n  }, 0);\n}\n", "import {\n  CreateMessage,\n  FileUIPart,\n  Message,\n  ReasoningUIPart,\n  SourceUIPart,\n  TextUIPart,\n  ToolInvocationUIPart,\n  UIMessage,\n} from './types';\n\nexport function getMessageParts(\n  message: Message | CreateMessage | UIMessage,\n): (\n  | TextUIPart\n  | ReasoningUIPart\n  | ToolInvocationUIPart\n  | SourceUIPart\n  | FileUIPart\n)[] {\n  return (\n    message.parts ?? [\n      ...(message.toolInvocations\n        ? message.toolInvocations.map(toolInvocation => ({\n            type: 'tool-invocation' as const,\n            toolInvocation,\n          }))\n        : []),\n      ...(message.reasoning\n        ? [\n            {\n              type: 'reasoning' as const,\n              reasoning: message.reasoning,\n              details: [{ type: 'text' as const, text: message.reasoning }],\n            },\n          ]\n        : []),\n      ...(message.content\n        ? [{ type: 'text' as const, text: message.content }]\n        : []),\n    ]\n  );\n}\n", "import { getMessageParts } from './get-message-parts';\nimport { Message, UIMessage } from './types';\n\nexport function fillMessageParts(messages: Message[]): UIMessage[] {\n  return messages.map(message => ({\n    ...message,\n    parts: getMessageParts(message),\n  }));\n}\n", "/**\n * Performs a deep-equal comparison of two parsed JSON objects.\n *\n * @param {any} obj1 - The first object to compare.\n * @param {any} obj2 - The second object to compare.\n * @returns {boolean} - Returns true if the two objects are deeply equal, false otherwise.\n */\nexport function isDeepEqualData(obj1: any, obj2: any): boolean {\n  // Check for strict equality first\n  if (obj1 === obj2) return true;\n\n  // Check if either is null or undefined\n  if (obj1 == null || obj2 == null) return false;\n\n  // Check if both are objects\n  if (typeof obj1 !== 'object' && typeof obj2 !== 'object')\n    return obj1 === obj2;\n\n  // If they are not strictly equal, they both need to be Objects\n  if (obj1.constructor !== obj2.constructor) return false;\n\n  // Special handling for Date objects\n  if (obj1 instanceof Date && obj2 instanceof Date) {\n    return obj1.getTime() === obj2.getTime();\n  }\n\n  // Handle arrays: compare length and then perform a recursive deep comparison on each item\n  if (Array.isArray(obj1)) {\n    if (obj1.length !== obj2.length) return false;\n    for (let i = 0; i < obj1.length; i++) {\n      if (!isDeepEqualData(obj1[i], obj2[i])) return false;\n    }\n    return true; // All array elements matched\n  }\n\n  // Compare the set of keys in each object\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n  if (keys1.length !== keys2.length) return false;\n\n  // Check each key-value pair recursively\n  for (const key of keys1) {\n    if (!keys2.includes(key)) return false;\n    if (!isDeepEqualData(obj1[key], obj2[key])) return false;\n  }\n\n  return true; // All keys and values matched\n}\n", "import { Attachment } from './types';\n\nexport async function prepareAttachmentsForRequest(\n  attachmentsFromOptions: FileList | Array<Attachment> | undefined,\n) {\n  if (!attachmentsFromOptions) {\n    return [];\n  }\n\n  if (attachmentsFromOptions instanceof FileList) {\n    return Promise.all(\n      Array.from(attachmentsFromOptions).map(async attachment => {\n        const { name, type } = attachment;\n\n        const dataUrl = await new Promise<string>((resolve, reject) => {\n          const reader = new FileReader();\n          reader.onload = readerEvent => {\n            resolve(readerEvent.target?.result as string);\n          };\n          reader.onerror = error => reject(error);\n          reader.readAsDataURL(attachment);\n        });\n\n        return {\n          name,\n          contentType: type,\n          url: dataUrl,\n        };\n      }),\n    );\n  }\n\n  if (Array.isArray(attachmentsFromOptions)) {\n    return attachmentsFromOptions;\n  }\n\n  throw new Error('Invalid attachments type');\n}\n", "import {\n  AssistantStreamPartType,\n  parseAssistantStreamPart,\n} from './assistant-stream-parts';\n\nconst NEWLINE = '\\n'.charCodeAt(0);\n\n// concatenates all the chunks into a single Uint8Array\nfunction concatChunks(chunks: Uint8Array[], totalLength: number) {\n  const concatenatedChunks = new Uint8Array(totalLength);\n\n  let offset = 0;\n  for (const chunk of chunks) {\n    concatenatedChunks.set(chunk, offset);\n    offset += chunk.length;\n  }\n  chunks.length = 0;\n\n  return concatenatedChunks;\n}\n\nexport async function processAssistantStream({\n  stream,\n  onTextPart,\n  onErrorPart,\n  onAssistantMessagePart,\n  onAssistantControlDataPart,\n  onDataMessagePart,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  onTextPart?: (\n    streamPart: (AssistantStreamPartType & { type: 'text' })['value'],\n  ) => Promise<void> | void;\n  onErrorPart?: (\n    streamPart: (AssistantStreamPartType & { type: 'error' })['value'],\n  ) => Promise<void> | void;\n  onAssistantMessagePart?: (\n    streamPart: (AssistantStreamPartType & {\n      type: 'assistant_message';\n    })['value'],\n  ) => Promise<void> | void;\n  onAssistantControlDataPart?: (\n    streamPart: (AssistantStreamPartType & {\n      type: 'assistant_control_data';\n    })['value'],\n  ) => Promise<void> | void;\n  onDataMessagePart?: (\n    streamPart: (AssistantStreamPartType & { type: 'data_message' })['value'],\n  ) => Promise<void> | void;\n}): Promise<void> {\n  // implementation note: this slightly more complex algorithm is required\n  // to pass the tests in the edge environment.\n\n  const reader = stream.getReader();\n  const decoder = new TextDecoder();\n  const chunks: Uint8Array[] = [];\n  let totalLength = 0;\n\n  while (true) {\n    const { value } = await reader.read();\n\n    if (value) {\n      chunks.push(value);\n      totalLength += value.length;\n      if (value[value.length - 1] !== NEWLINE) {\n        // if the last character is not a newline, we have not read the whole JSON value\n        continue;\n      }\n    }\n\n    if (chunks.length === 0) {\n      break; // we have reached the end of the stream\n    }\n\n    const concatenatedChunks = concatChunks(chunks, totalLength);\n    totalLength = 0;\n\n    const streamParts = decoder\n      .decode(concatenatedChunks, { stream: true })\n      .split('\\n')\n      .filter(line => line !== '')\n      .map(parseAssistantStreamPart);\n\n    for (const { type, value } of streamParts) {\n      switch (type) {\n        case 'text':\n          await onTextPart?.(value);\n          break;\n        case 'error':\n          await onErrorPart?.(value);\n          break;\n        case 'assistant_message':\n          await onAssistantMessagePart?.(value);\n          break;\n        case 'assistant_control_data':\n          await onAssistantControlDataPart?.(value);\n          break;\n        case 'data_message':\n          await onDataMessagePart?.(value);\n          break;\n        default: {\n          const exhaustiveCheck: never = type;\n          throw new Error(`Unknown stream part type: ${exhaustiveCheck}`);\n        }\n      }\n    }\n  }\n}\n", "import { Validator, validatorSymbol } from '@ai-sdk/provider-utils';\nimport { JSONSchema7 } from 'json-schema';\nimport { z } from 'zod';\nimport { zodSchema } from './zod-schema';\n\n/**\n * Used to mark schemas so we can support both Zod and custom schemas.\n */\nconst schemaSymbol = Symbol.for('vercel.ai.schema');\n\nexport type Schema<OBJECT = unknown> = Validator<OBJECT> & {\n  /**\n   * Used to mark schemas so we can support both Zod and custom schemas.\n   */\n  [schemaSymbol]: true;\n\n  /**\n   * Schema type for inference.\n   */\n  _type: OBJECT;\n\n  /**\n   * The JSON Schema for the schema. It is passed to the providers.\n   */\n  readonly jsonSchema: JSONSchema7;\n};\n\n/**\n * Create a schema using a JSON Schema.\n *\n * @param jsonSchema The JSON Schema for the schema.\n * @param options.validate Optional. A validation function for the schema.\n */\nexport function jsonSchema<OBJECT = unknown>(\n  jsonSchema: JSONSchema7,\n  {\n    validate,\n  }: {\n    validate?: (\n      value: unknown,\n    ) => { success: true; value: OBJECT } | { success: false; error: Error };\n  } = {},\n): Schema<OBJECT> {\n  return {\n    [schemaSymbol]: true,\n    _type: undefined as OBJECT, // should never be used directly\n    [validatorSymbol]: true,\n    jsonSchema,\n    validate,\n  };\n}\n\nfunction isSchema(value: unknown): value is Schema {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    schemaSymbol in value &&\n    value[schemaSymbol] === true &&\n    'jsonSchema' in value &&\n    'validate' in value\n  );\n}\n\nexport function asSchema<OBJECT>(\n  schema: z.Schema<OBJECT, z.ZodTypeDef, any> | Schema<OBJECT>,\n): Schema<OBJECT> {\n  return isSchema(schema) ? schema : zodSchema(schema);\n}\n", "import { JSONSchema7 } from 'json-schema';\nimport { z } from 'zod';\nimport zodToJsonSchema from 'zod-to-json-schema';\nimport { jsonSchema, Schema } from './schema';\n\nexport function zodSchema<OBJECT>(\n  zodSchema: z.Schema<OBJECT, z.ZodTypeDef, any>,\n  options?: {\n    /**\n     * Enables support for references in the schema.\n     * This is required for recursive schemas, e.g. with `z.lazy`.\n     * However, not all language models and providers support such references.\n     * Defaults to `false`.\n     */\n    useReferences?: boolean;\n  },\n): Schema<OBJECT> {\n  // default to no references (to support openapi conversion for google)\n  const useReferences = options?.useReferences ?? false;\n\n  return jsonSchema(\n    zodToJsonSchema(zodSchema, {\n      $refStrategy: useReferences ? 'root' : 'none',\n      target: 'jsonSchema7', // note: openai mode breaks various gemini conversions\n    }) as JSONSchema7,\n    {\n      validate: value => {\n        const result = zodSchema.safeParse(value);\n        return result.success\n          ? { success: true, value: result.data }\n          : { success: false, error: result.error };\n      },\n    },\n  );\n}\n", "import { extractMaxToolInvocationStep } from './extract-max-tool-invocation-step';\nimport { UIMessage } from './types';\n\nexport function shouldResubmitMessages({\n  originalMaxToolInvocationStep,\n  originalMessageCount,\n  maxSteps,\n  messages,\n}: {\n  originalMaxToolInvocationStep: number | undefined;\n  originalMessageCount: number;\n  maxSteps: number;\n  messages: UIMessage[];\n}) {\n  const lastMessage = messages[messages.length - 1];\n  return (\n    // check if the feature is enabled:\n    maxSteps > 1 &&\n    // ensure there is a last message:\n    lastMessage != null &&\n    // ensure we actually have new steps (to prevent infinite loops in case of errors):\n    (messages.length > originalMessageCount ||\n      extractMaxToolInvocationStep(lastMessage.toolInvocations) !==\n        originalMaxToolInvocationStep) &&\n    // check that next step is possible:\n    isAssistantMessageWithCompletedToolCalls(lastMessage) &&\n    // check that assistant has not answered yet:\n    !isLastToolInvocationFollowedByText(lastMessage) &&\n    // limit the number of automatic steps:\n    (extractMaxToolInvocationStep(lastMessage.toolInvocations) ?? 0) < maxSteps\n  );\n}\n\nfunction isLastToolInvocationFollowedByText(message: UIMessage) {\n  let isLastToolInvocationFollowedByText = false;\n\n  message.parts.forEach(part => {\n    if (part.type === 'text') {\n      isLastToolInvocationFollowedByText = true;\n    }\n    if (part.type === 'tool-invocation') {\n      isLastToolInvocationFollowedByText = false;\n    }\n  });\n  return isLastToolInvocationFollowedByText;\n}\n\n/**\nCheck if the message is an assistant message with completed tool calls.\nThe message must have at least one tool invocation and all tool invocations\nmust have a result.\n */\nexport function isAssistantMessageWithCompletedToolCalls(\n  message: UIMessage,\n): message is UIMessage & {\n  role: 'assistant';\n} {\n  return (\n    message.role === 'assistant' &&\n    message.parts\n      .filter(part => part.type === 'tool-invocation')\n      .every(part => 'result' in part.toolInvocation)\n  );\n}\n", "import { ToolInvocationUIPart, UIMessage } from './types';\n\n/**\n * Updates the result of a specific tool invocation in the last message of the given messages array.\n *\n * @param {object} params - The parameters object.\n * @param {UIMessage[]} params.messages - An array of messages, from which the last one is updated.\n * @param {string} params.toolCallId - The unique identifier for the tool invocation to update.\n * @param {unknown} params.toolResult - The result object to attach to the tool invocation.\n * @returns {void} This function does not return anything.\n */\nexport function updateToolCallResult({\n  messages,\n  toolCallId,\n  toolResult: result,\n}: {\n  messages: UIMessage[];\n  toolCallId: string;\n  toolResult: unknown;\n}) {\n  const lastMessage = messages[messages.length - 1];\n\n  const invocationPart = lastMessage.parts.find(\n    (part): part is ToolInvocationUIPart =>\n      part.type === 'tool-invocation' &&\n      part.toolInvocation.toolCallId === toolCallId,\n  );\n\n  if (invocationPart == null) {\n    return;\n  }\n\n  const toolResult = {\n    ...invocationPart.toolInvocation,\n    state: 'result' as const,\n    result,\n  };\n\n  invocationPart.toolInvocation = toolResult;\n\n  lastMessage.toolInvocations = lastMessage.toolInvocations?.map(\n    toolInvocation =>\n      toolInvocation.toolCallId === toolCallId ? toolResult : toolInvocation,\n  );\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins\nexport const _globalThis = typeof globalThis === 'object' ? globalThis : global;\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './globalThis';\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './node';\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.9.0';\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../version';\n\nconst re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(\n  ownVersion: string\n): (globalVersion: string) => boolean {\n  const acceptedVersions = new Set<string>([ownVersion]);\n  const rejectedVersions = new Set<string>();\n\n  const myVersionMatch = ownVersion.match(re);\n  if (!myVersionMatch) {\n    // we cannot guarantee compatibility so we always return noop\n    return () => false;\n  }\n\n  const ownVersionParsed = {\n    major: +myVersionMatch[1],\n    minor: +myVersionMatch[2],\n    patch: +myVersionMatch[3],\n    prerelease: myVersionMatch[4],\n  };\n\n  // if ownVersion has a prerelease tag, versions must match exactly\n  if (ownVersionParsed.prerelease != null) {\n    return function isExactmatch(globalVersion: string): boolean {\n      return globalVersion === ownVersion;\n    };\n  }\n\n  function _reject(v: string) {\n    rejectedVersions.add(v);\n    return false;\n  }\n\n  function _accept(v: string) {\n    acceptedVersions.add(v);\n    return true;\n  }\n\n  return function isCompatible(globalVersion: string): boolean {\n    if (acceptedVersions.has(globalVersion)) {\n      return true;\n    }\n\n    if (rejectedVersions.has(globalVersion)) {\n      return false;\n    }\n\n    const globalVersionMatch = globalVersion.match(re);\n    if (!globalVersionMatch) {\n      // cannot parse other version\n      // we cannot guarantee compatibility so we always noop\n      return _reject(globalVersion);\n    }\n\n    const globalVersionParsed = {\n      major: +globalVersionMatch[1],\n      minor: +globalVersionMatch[2],\n      patch: +globalVersionMatch[3],\n      prerelease: globalVersionMatch[4],\n    };\n\n    // if globalVersion has a prerelease tag, versions must match exactly\n    if (globalVersionParsed.prerelease != null) {\n      return _reject(globalVersion);\n    }\n\n    // major versions must match\n    if (ownVersionParsed.major !== globalVersionParsed.major) {\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.major === 0) {\n      if (\n        ownVersionParsed.minor === globalVersionParsed.minor &&\n        ownVersionParsed.patch <= globalVersionParsed.patch\n      ) {\n        return _accept(globalVersion);\n      }\n\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n      return _accept(globalVersion);\n    }\n\n    return _reject(globalVersion);\n  };\n}\n\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport const isCompatible = _makeCompatibilityCheck(VERSION);\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MeterProvider } from '../metrics/MeterProvider';\nimport { ContextManager } from '../context/types';\nimport { DiagLogger } from '../diag/types';\nimport { _globalThis } from '../platform';\nimport { TextMapPropagator } from '../propagation/TextMapPropagator';\nimport type { TracerProvider } from '../trace/tracer_provider';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\n\nconst major = VERSION.split('.')[0];\nconst GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\n  `opentelemetry.js.api.${major}`\n);\n\nconst _global = _globalThis as OTelGlobal;\n\nexport function registerGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type,\n  instance: OTelGlobalAPI[Type],\n  diag: DiagLogger,\n  allowOverride = false\n): boolean {\n  const api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = _global[\n    GLOBAL_OPENTELEMETRY_API_KEY\n  ] ?? {\n    version: VERSION,\n  });\n\n  if (!allowOverride && api[type]) {\n    // already registered an API of this type\n    const err = new Error(\n      `@opentelemetry/api: Attempted duplicate registration of API: ${type}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  if (api.version !== VERSION) {\n    // All registered APIs must be of the same version exactly\n    const err = new Error(\n      `@opentelemetry/api: Registration of version v${api.version} for ${type} does not match previously registered API v${VERSION}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  api[type] = instance;\n  diag.debug(\n    `@opentelemetry/api: Registered a global for ${type} v${VERSION}.`\n  );\n\n  return true;\n}\n\nexport function getGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type\n): OTelGlobalAPI[Type] | undefined {\n  const globalVersion = _global[GLOBAL_OPENTELEMETRY_API_KEY]?.version;\n  if (!globalVersion || !isCompatible(globalVersion)) {\n    return;\n  }\n  return _global[GLOBAL_OPENTELEMETRY_API_KEY]?.[type];\n}\n\nexport function unregisterGlobal(type: keyof OTelGlobalAPI, diag: DiagLogger) {\n  diag.debug(\n    `@opentelemetry/api: Unregistering a global for ${type} v${VERSION}.`\n  );\n  const api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n\n  if (api) {\n    delete api[type];\n  }\n}\n\ntype OTelGlobal = {\n  [GLOBAL_OPENTELEMETRY_API_KEY]?: OTelGlobalAPI;\n};\n\ntype OTelGlobalAPI = {\n  version: string;\n\n  diag?: DiagLogger;\n  trace?: TracerProvider;\n  context?: ContextManager;\n  metrics?: MeterProvider;\n  propagation?: TextMapPropagator;\n};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobal } from '../internal/global-utils';\nimport { ComponentLoggerOptions, DiagLogger, DiagLogFunction } from './types';\n\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nexport class DiagComponentLogger implements DiagLogger {\n  private _namespace: string;\n\n  constructor(props: ComponentLoggerOptions) {\n    this._namespace = props.namespace || 'DiagComponentLogger';\n  }\n\n  public debug(...args: any[]): void {\n    return logProxy('debug', this._namespace, args);\n  }\n\n  public error(...args: any[]): void {\n    return logProxy('error', this._namespace, args);\n  }\n\n  public info(...args: any[]): void {\n    return logProxy('info', this._namespace, args);\n  }\n\n  public warn(...args: any[]): void {\n    return logProxy('warn', this._namespace, args);\n  }\n\n  public verbose(...args: any[]): void {\n    return logProxy('verbose', this._namespace, args);\n  }\n}\n\nfunction logProxy(\n  funcName: keyof DiagLogger,\n  namespace: string,\n  args: any\n): void {\n  const logger = getGlobal('diag');\n  // shortcut if logger not set\n  if (!logger) {\n    return;\n  }\n\n  args.unshift(namespace);\n  return logger[funcName](...(args as Parameters<DiagLogFunction>));\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type DiagLogFunction = (message: string, ...args: unknown[]) => void;\n\n/**\n * Defines an internal diagnostic logger interface which is used to log internal diagnostic\n * messages, you can set the default diagnostic logger via the {@link DiagAPI} setLogger function.\n * API provided implementations include :-\n * - a No-Op {@link createNoopDiagLogger}\n * - a {@link DiagLogLevel} filtering wrapper {@link createLogLevelDiagLogger}\n * - a general Console {@link DiagConsoleLogger} version.\n */\nexport interface DiagLogger {\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  error: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  warn: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  info: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario.\n   * For example: Logging the order of execution of async operations.\n   */\n  debug: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  verbose: DiagLogFunction;\n}\n\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport enum DiagLogLevel {\n  /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n  NONE = 0,\n\n  /** Identifies an error scenario */\n  ERROR = 30,\n\n  /** Identifies a warning scenario */\n  WARN = 50,\n\n  /** General informational log message */\n  INFO = 60,\n\n  /** General debug log message */\n  DEBUG = 70,\n\n  /**\n   * Detailed trace level logging should only be used for development, should only be set\n   * in a development environment.\n   */\n  VERBOSE = 80,\n\n  /** Used to set the logging level to include all logging */\n  ALL = 9999,\n}\n\n/**\n * Defines options for ComponentLogger\n */\nexport interface ComponentLoggerOptions {\n  namespace: string;\n}\n\nexport interface DiagLoggerOptions {\n  /**\n   * The {@link DiagLogLevel} used to filter logs sent to the logger.\n   *\n   * @defaultValue DiagLogLevel.INFO\n   */\n  logLevel?: DiagLogLevel;\n\n  /**\n   * Setting this value to `true` will suppress the warning message normally emitted when registering a logger when another logger is already registered.\n   */\n  suppressOverrideMessage?: boolean;\n}\n\nexport interface DiagLoggerApi {\n  /**\n   * Set the global DiagLogger and DiagLogLevel.\n   * If a global diag logger is already set, this will override it.\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param options - A {@link DiagLoggerOptions} object. If not provided, default values will be set.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, options?: DiagLoggerOptions): boolean;\n\n  /**\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param logLevel - The {@link DiagLogLevel} used to filter logs sent to the logger. If not provided it will default to {@link DiagLogLevel.INFO}.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, logLevel?: DiagLogLevel): boolean;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogFunction, DiagLogger, DiagLogLevel } from '../types';\n\nexport function createLogLevelDiagLogger(\n  maxLevel: DiagLogLevel,\n  logger: DiagLogger\n): DiagLogger {\n  if (maxLevel < DiagLogLevel.NONE) {\n    maxLevel = DiagLogLevel.NONE;\n  } else if (maxLevel > DiagLogLevel.ALL) {\n    maxLevel = DiagLogLevel.ALL;\n  }\n\n  // In case the logger is null or undefined\n  logger = logger || {};\n\n  function _filterFunc(\n    funcName: keyof DiagLogger,\n    theLevel: DiagLogLevel\n  ): DiagLogFunction {\n    const theFunc = logger[funcName];\n\n    if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n      return theFunc.bind(logger);\n    }\n    return function () {};\n  }\n\n  return {\n    error: _filterFunc('error', DiagLogLevel.ERROR),\n    warn: _filterFunc('warn', DiagLogLevel.WARN),\n    info: _filterFunc('info', DiagLogLevel.INFO),\n    debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n    verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n  };\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport {\n  ComponentLoggerOptions,\n  DiagLogFunction,\n  DiagLogger,\n  DiagLoggerApi,\n  DiagLogLevel,\n} from '../diag/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\n\nconst API_NAME = 'diag';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nexport class DiagAPI implements DiagLogger, DiagLoggerApi {\n  private static _instance?: DiagAPI;\n\n  /** Get the singleton instance of the DiagAPI API */\n  public static instance(): DiagAPI {\n    if (!this._instance) {\n      this._instance = new DiagAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Private internal constructor\n   * @private\n   */\n  private constructor() {\n    function _logProxy(funcName: keyof DiagLogger): DiagLogFunction {\n      return function (...args) {\n        const logger = getGlobal('diag');\n        // shortcut if logger not set\n        if (!logger) return;\n        return logger[funcName](...args);\n      };\n    }\n\n    // Using self local variable for minification purposes as 'this' cannot be minified\n    const self = this;\n\n    // DiagAPI specific functions\n\n    const setLogger: DiagLoggerApi['setLogger'] = (\n      logger,\n      optionsOrLogLevel = { logLevel: DiagLogLevel.INFO }\n    ) => {\n      if (logger === self) {\n        // There isn't much we can do here.\n        // Logging to the console might break the user application.\n        // Try to log to self. If a logger was previously registered it will receive the log.\n        const err = new Error(\n          'Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation'\n        );\n        self.error(err.stack ?? err.message);\n        return false;\n      }\n\n      if (typeof optionsOrLogLevel === 'number') {\n        optionsOrLogLevel = {\n          logLevel: optionsOrLogLevel,\n        };\n      }\n\n      const oldLogger = getGlobal('diag');\n      const newLogger = createLogLevelDiagLogger(\n        optionsOrLogLevel.logLevel ?? DiagLogLevel.INFO,\n        logger\n      );\n      // There already is an logger registered. We'll let it know before overwriting it.\n      if (oldLogger && !optionsOrLogLevel.suppressOverrideMessage) {\n        const stack = new Error().stack ?? '<failed to generate stacktrace>';\n        oldLogger.warn(`Current logger will be overwritten from ${stack}`);\n        newLogger.warn(\n          `Current logger will overwrite one already registered from ${stack}`\n        );\n      }\n\n      return registerGlobal('diag', newLogger, self, true);\n    };\n\n    self.setLogger = setLogger;\n\n    self.disable = () => {\n      unregisterGlobal(API_NAME, self);\n    };\n\n    self.createComponentLogger = (options: ComponentLoggerOptions) => {\n      return new DiagComponentLogger(options);\n    };\n\n    self.verbose = _logProxy('verbose');\n    self.debug = _logProxy('debug');\n    self.info = _logProxy('info');\n    self.warn = _logProxy('warn');\n    self.error = _logProxy('error');\n  }\n\n  public setLogger!: DiagLoggerApi['setLogger'];\n  /**\n   *\n   */\n  public createComponentLogger!: (\n    options: ComponentLoggerOptions\n  ) => DiagLogger;\n\n  // DiagLogger implementation\n  public verbose!: DiagLogFunction;\n  public debug!: DiagLogFunction;\n  public info!: DiagLogFunction;\n  public warn!: DiagLogFunction;\n  public error!: DiagLogFunction;\n\n  /**\n   * Unregister the global logger and return to Noop\n   */\n  public disable!: () => void;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Baggage, BaggageEntry } from '../types';\n\nexport class BaggageImpl implements Baggage {\n  private _entries: Map<string, BaggageEntry>;\n\n  constructor(entries?: Map<string, BaggageEntry>) {\n    this._entries = entries ? new Map(entries) : new Map();\n  }\n\n  getEntry(key: string): BaggageEntry | undefined {\n    const entry = this._entries.get(key);\n    if (!entry) {\n      return undefined;\n    }\n\n    return Object.assign({}, entry);\n  }\n\n  getAllEntries(): [string, BaggageEntry][] {\n    return Array.from(this._entries.entries()).map(([k, v]) => [k, v]);\n  }\n\n  setEntry(key: string, entry: BaggageEntry): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.set(key, entry);\n    return newBaggage;\n  }\n\n  removeEntry(key: string): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.delete(key);\n    return newBaggage;\n  }\n\n  removeEntries(...keys: string[]): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    for (const key of keys) {\n      newBaggage._entries.delete(key);\n    }\n    return newBaggage;\n  }\n\n  clear(): BaggageImpl {\n    return new BaggageImpl();\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport const baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nimport { Baggage, BaggageEntry, BaggageEntryMetadata } from './types';\n\nconst diag = DiagAPI.instance();\n\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(\n  entries: Record<string, BaggageEntry> = {}\n): Baggage {\n  return new BaggageImpl(new Map(Object.entries(entries)));\n}\n\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(\n  str: string\n): BaggageEntryMetadata {\n  if (typeof str !== 'string') {\n    diag.error(\n      `Cannot create baggage metadata from unknown type: ${typeof str}`\n    );\n    str = '';\n  }\n\n  return {\n    __TYPE__: baggageEntryMetadataSymbol,\n    toString() {\n      return str;\n    },\n  };\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description: string) {\n  // The specification states that for the same input, multiple calls should\n  // return different keys. Due to the nature of the JS dependency management\n  // system, this creates problems where multiple versions of some package\n  // could hold different keys for the same property.\n  //\n  // Therefore, we use Symbol.for which returns the same key for the same input.\n  return Symbol.for(description);\n}\n\nclass BaseContext implements Context {\n  private _currentContext!: Map<symbol, unknown>;\n\n  /**\n   * Construct a new context which inherits values from an optional parent context.\n   *\n   * @param parentContext a context from which to inherit values\n   */\n  constructor(parentContext?: Map<symbol, unknown>) {\n    // for minification\n    const self = this;\n\n    self._currentContext = parentContext ? new Map(parentContext) : new Map();\n\n    self.getValue = (key: symbol) => self._currentContext.get(key);\n\n    self.setValue = (key: symbol, value: unknown): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.set(key, value);\n      return context;\n    };\n\n    self.deleteValue = (key: symbol): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.delete(key);\n      return context;\n    };\n  }\n\n  /**\n   * Get a value from the context.\n   *\n   * @param key key which identifies a context value\n   */\n  public getValue!: (key: symbol) => unknown;\n\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key context key for which to set the value\n   * @param value value to set for the given key\n   */\n  public setValue!: (key: symbol, value: unknown) => Context;\n\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key context key for which to clear a value\n   */\n  public deleteValue!: (key: symbol) => Context;\n}\n\n/** The root context is used as the default parent context when there is no active context */\nexport const ROOT_CONTEXT: Context = new BaseContext();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogger, DiagLogFunction } from './types';\n\ntype ConsoleMapKeys = 'error' | 'warn' | 'info' | 'debug' | 'trace';\nconst consoleMap: { n: keyof DiagLogger; c: ConsoleMapKeys }[] = [\n  { n: 'error', c: 'error' },\n  { n: 'warn', c: 'warn' },\n  { n: 'info', c: 'info' },\n  { n: 'debug', c: 'debug' },\n  { n: 'verbose', c: 'trace' },\n];\n\n/**\n * A simple Immutable Console based diagnostic logger which will output any messages to the Console.\n * If you want to limit the amount of logging to a specific level or lower use the\n * {@link createLogLevelDiagLogger}\n */\nexport class DiagConsoleLogger implements DiagLogger {\n  constructor() {\n    function _consoleFunc(funcName: ConsoleMapKeys): DiagLogFunction {\n      return function (...args) {\n        if (console) {\n          // Some environments only expose the console when the F12 developer console is open\n          // eslint-disable-next-line no-console\n          let theFunc = console[funcName];\n          if (typeof theFunc !== 'function') {\n            // Not all environments support all functions\n            // eslint-disable-next-line no-console\n            theFunc = console.log;\n          }\n\n          // One last final check\n          if (typeof theFunc === 'function') {\n            return theFunc.apply(console, args);\n          }\n        }\n      };\n    }\n\n    for (let i = 0; i < consoleMap.length; i++) {\n      this[consoleMap[i].n] = _consoleFunc(consoleMap[i].c);\n    }\n  }\n\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  public error!: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  public warn!: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  public info!: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario. Useful scenarios would be to log the execution\n   * order of async operations\n   */\n  public debug!: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  public verbose!: DiagLogFunction;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter } from './Meter';\nimport {\n  BatchObservableCallback,\n  Counter,\n  Gauge,\n  Histogram,\n  MetricAttributes,\n  MetricOptions,\n  Observable,\n  ObservableCallback,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n  UpDownCounter,\n} from './Metric';\n\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nexport class NoopMeter implements Meter {\n  constructor() {}\n\n  /**\n   * @see {@link Meter.createGauge}\n   */\n  createGauge(_name: string, _options?: MetricOptions): Gauge {\n    return NOOP_GAUGE_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createHistogram}\n   */\n  createHistogram(_name: string, _options?: MetricOptions): Histogram {\n    return NOOP_HISTOGRAM_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createCounter}\n   */\n  createCounter(_name: string, _options?: MetricOptions): Counter {\n    return NOOP_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createUpDownCounter}\n   */\n  createUpDownCounter(_name: string, _options?: MetricOptions): UpDownCounter {\n    return NOOP_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableGauge}\n   */\n  createObservableGauge(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableGauge {\n    return NOOP_OBSERVABLE_GAUGE_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableCounter}\n   */\n  createObservableCounter(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableCounter {\n    return NOOP_OBSERVABLE_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableUpDownCounter}\n   */\n  createObservableUpDownCounter(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableUpDownCounter {\n    return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.addBatchObservableCallback}\n   */\n  addBatchObservableCallback(\n    _callback: BatchObservableCallback,\n    _observables: Observable[]\n  ): void {}\n\n  /**\n   * @see {@link Meter.removeBatchObservableCallback}\n   */\n  removeBatchObservableCallback(_callback: BatchObservableCallback): void {}\n}\n\nexport class NoopMetric {}\n\nexport class NoopCounterMetric extends NoopMetric implements Counter {\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopUpDownCounterMetric\n  extends NoopMetric\n  implements UpDownCounter\n{\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopGaugeMetric extends NoopMetric implements Gauge {\n  record(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopHistogramMetric extends NoopMetric implements Histogram {\n  record(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopObservableMetric {\n  addCallback(_callback: ObservableCallback) {}\n\n  removeCallback(_callback: ObservableCallback) {}\n}\n\nexport class NoopObservableCounterMetric\n  extends NoopObservableMetric\n  implements ObservableCounter {}\n\nexport class NoopObservableGaugeMetric\n  extends NoopObservableMetric\n  implements ObservableGauge {}\n\nexport class NoopObservableUpDownCounterMetric\n  extends NoopObservableMetric\n  implements ObservableUpDownCounter {}\n\nexport const NOOP_METER = new NoopMeter();\n\n// Synchronous instruments\nexport const NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport const NOOP_GAUGE_METRIC = new NoopGaugeMetric();\nexport const NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport const NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n\n// Asynchronous instruments\nexport const NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\nexport const NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\nexport const NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC =\n  new NoopObservableUpDownCounterMetric();\n\n/**\n * Create a no-op Meter\n */\nexport function createNoopMeter(): Meter {\n  return NOOP_METER;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes, AttributeValue } from '../common/Attributes';\nimport { Context } from '../context/types';\nimport { BatchObservableResult, ObservableResult } from './ObservableResult';\n\n/**\n * Advisory options influencing aggregation configuration parameters.\n * @experimental\n */\nexport interface MetricAdvice {\n  /**\n   * Hint the explicit bucket boundaries for SDK if the metric is been\n   * aggregated with a HistogramAggregator.\n   */\n  explicitBucketBoundaries?: number[];\n}\n\n/**\n * Options needed for metric creation\n */\nexport interface MetricOptions {\n  /**\n   * The description of the Metric.\n   * @default ''\n   */\n  description?: string;\n\n  /**\n   * The unit of the Metric values.\n   * @default ''\n   */\n  unit?: string;\n\n  /**\n   * Indicates the type of the recorded value.\n   * @default {@link ValueType.DOUBLE}\n   */\n  valueType?: ValueType;\n\n  /**\n   * The advice influencing aggregation configuration parameters.\n   * @experimental\n   */\n  advice?: MetricAdvice;\n}\n\n/** The Type of value. It describes how the data is reported. */\nexport enum ValueType {\n  INT,\n  DOUBLE,\n}\n\n/**\n * Counter is the most common synchronous instrument. This instrument supports\n * an `Add(increment)` function for reporting a sum, and is restricted to\n * non-negative increments. The default aggregation is Sum, as for any additive\n * instrument.\n *\n * Example uses for Counter:\n * <ol>\n *   <li> count the number of bytes received. </li>\n *   <li> count the number of requests completed. </li>\n *   <li> count the number of accounts created. </li>\n *   <li> count the number of checkpoints run. </li>\n *   <li> count the number of 5xx errors. </li>\n * <ol>\n */\nexport interface Counter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Increment value of counter by the input. Inputs must not be negative.\n   */\n  add(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\nexport interface UpDownCounter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Increment value of counter by the input. Inputs may be negative.\n   */\n  add(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\nexport interface Gauge<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Records a measurement.\n   */\n  record(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\nexport interface Histogram<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Records a measurement. Value of the measurement must not be negative.\n   */\n  record(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\n/**\n * @deprecated please use {@link Attributes}\n */\nexport type MetricAttributes = Attributes;\n\n/**\n * @deprecated please use {@link AttributeValue}\n */\nexport type MetricAttributeValue = AttributeValue;\n\n/**\n * The observable callback for Observable instruments.\n */\nexport type ObservableCallback<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = (\n  observableResult: ObservableResult<AttributesTypes>\n) => void | Promise<void>;\n\n/**\n * The observable callback for a batch of Observable instruments.\n */\nexport type BatchObservableCallback<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = (\n  observableResult: BatchObservableResult<AttributesTypes>\n) => void | Promise<void>;\n\nexport interface Observable<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Sets up a function that will be called whenever a metric collection is initiated.\n   *\n   * If the function is already in the list of callbacks for this Observable, the function is not added a second time.\n   */\n  addCallback(callback: ObservableCallback<AttributesTypes>): void;\n\n  /**\n   * Removes a callback previously registered with {@link Observable.addCallback}.\n   */\n  removeCallback(callback: ObservableCallback<AttributesTypes>): void;\n}\n\nexport type ObservableCounter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = Observable<AttributesTypes>;\nexport type ObservableUpDownCounter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = Observable<AttributesTypes>;\nexport type ObservableGauge<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = Observable<AttributesTypes>;\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\n\n/**\n * Injects `Context` into and extracts it from carriers that travel\n * in-band across process boundaries. Encoding is expected to conform to the\n * HTTP Header Field semantics. Values are often encoded as RPC/HTTP request\n * headers.\n *\n * The carrier of propagated data on both the client (injector) and server\n * (extractor) side is usually an object such as http headers. Propagation is\n * usually implemented via library-specific request interceptors, where the\n * client-side injects values and the server-side extracts them.\n */\nexport interface TextMapPropagator<Carrier = any> {\n  /**\n   * Injects values from a given `Context` into a carrier.\n   *\n   * OpenTelemetry defines a common set of format values (TextMapPropagator),\n   * and each has an expected `carrier` type.\n   *\n   * @param context the Context from which to extract values to transmit over\n   *     the wire.\n   * @param carrier the carrier of propagation fields, such as http request\n   *     headers.\n   * @param setter an optional {@link TextMapSetter}. If undefined, values will be\n   *     set by direct object assignment.\n   */\n  inject(\n    context: Context,\n    carrier: Carrier,\n    setter: TextMapSetter<Carrier>\n  ): void;\n\n  /**\n   * Given a `Context` and a carrier, extract context values from a\n   * carrier and return a new context, created from the old context, with the\n   * extracted values.\n   *\n   * @param context the Context from which to extract values to transmit over\n   *     the wire.\n   * @param carrier the carrier of propagation fields, such as http request\n   *     headers.\n   * @param getter an optional {@link TextMapGetter}. If undefined, keys will be all\n   *     own properties, and keys will be accessed by direct object access.\n   */\n  extract(\n    context: Context,\n    carrier: Carrier,\n    getter: TextMapGetter<Carrier>\n  ): Context;\n\n  /**\n   * Return a list of all fields which may be used by the propagator.\n   */\n  fields(): string[];\n}\n\n/**\n * A setter is specified by the caller to define a specific method\n * to set key/value pairs on the carrier within a propagator.\n */\nexport interface TextMapSetter<Carrier = any> {\n  /**\n   * Callback used to set a key/value pair on an object.\n   *\n   * Should be called by the propagator each time a key/value pair\n   * should be set, and should set that key/value pair on the propagator.\n   *\n   * @param carrier object or class which carries key/value pairs\n   * @param key string key to modify\n   * @param value value to be set to the key on the carrier\n   */\n  set(carrier: Carrier, key: string, value: string): void;\n}\n\n/**\n * A getter is specified by the caller to define a specific method\n * to get the value of a key from a carrier.\n */\nexport interface TextMapGetter<Carrier = any> {\n  /**\n   * Get a list of all keys available on the carrier.\n   *\n   * @param carrier\n   */\n  keys(carrier: Carrier): string[];\n\n  /**\n   * Get the value of a specific key from the carrier.\n   *\n   * @param carrier\n   * @param key\n   */\n  get(carrier: Carrier, key: string): undefined | string | string[];\n}\n\nexport const defaultTextMapGetter: TextMapGetter = {\n  get(carrier, key) {\n    if (carrier == null) {\n      return undefined;\n    }\n    return carrier[key];\n  },\n\n  keys(carrier) {\n    if (carrier == null) {\n      return [];\n    }\n    return Object.keys(carrier);\n  },\n};\n\nexport const defaultTextMapSetter: TextMapSetter = {\n  set(carrier, key, value) {\n    if (carrier == null) {\n      return;\n    }\n\n    carrier[key] = value;\n  },\n};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ROOT_CONTEXT } from './context';\nimport * as types from './types';\n\nexport class NoopContextManager implements types.ContextManager {\n  active(): types.Context {\n    return ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    _context: types.Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return fn.call(thisArg, ...args);\n  }\n\n  bind<T>(_context: types.Context, target: T): T {\n    return target;\n  }\n\n  enable(): this {\n    return this;\n  }\n\n  disable(): this {\n    return this;\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { Context, ContextManager } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'context';\nconst NOOP_CONTEXT_MANAGER = new NoopContextManager();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nexport class ContextAPI {\n  private static _instance?: ContextAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Context API */\n  public static getInstance(): ContextAPI {\n    if (!this._instance) {\n      this._instance = new ContextAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current context manager.\n   *\n   * @returns true if the context manager was successfully registered, else false\n   */\n  public setGlobalContextManager(contextManager: ContextManager): boolean {\n    return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n  }\n\n  /**\n   * Get the currently active context\n   */\n  public active(): Context {\n    return this._getContextManager().active();\n  }\n\n  /**\n   * Execute a function with an active context\n   *\n   * @param context context to be active during function execution\n   * @param fn function to execute in a context\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  public with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return this._getContextManager().with(context, fn, thisArg, ...args);\n  }\n\n  /**\n   * Bind a context to a target function or event emitter\n   *\n   * @param context context to bind to the event emitter or function. Defaults to the currently active context\n   * @param target function or event emitter to bind\n   */\n  public bind<T>(context: Context, target: T): T {\n    return this._getContextManager().bind(context, target);\n  }\n\n  private _getContextManager(): ContextManager {\n    return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n  }\n\n  /** Disable and remove the global context manager */\n  public disable() {\n    this._getContextManager().disable();\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum TraceFlags {\n  /** Represents no flag set. */\n  NONE = 0x0,\n  /** Bit to represent whether trace is sampled in trace flags. */\n  SAMPLED = 0x1 << 0,\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanContext } from './span_context';\nimport { TraceFlags } from './trace_flags';\n\nexport const INVALID_SPANID = '0000000000000000';\nexport const INVALID_TRACEID = '00000000000000000000000000000000';\nexport const INVALID_SPAN_CONTEXT: SpanContext = {\n  traceId: INVALID_TRACEID,\n  spanId: INVALID_SPANID,\n  traceFlags: TraceFlags.NONE,\n};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '../common/Exception';\nimport { TimeInput } from '../common/Time';\nimport { SpanAttributes } from './attributes';\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { SpanStatus } from './status';\nimport { Link } from './link';\n\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nexport class NonRecordingSpan implements Span {\n  constructor(\n    private readonly _spanContext: SpanContext = INVALID_SPAN_CONTEXT\n  ) {}\n\n  // Returns a SpanContext.\n  spanContext(): SpanContext {\n    return this._spanContext;\n  }\n\n  // By default does nothing\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  // By default does nothing\n  setAttributes(_attributes: SpanAttributes): this {\n    return this;\n  }\n\n  // By default does nothing\n  addEvent(_name: string, _attributes?: SpanAttributes): this {\n    return this;\n  }\n\n  addLink(_link: Link): this {\n    return this;\n  }\n\n  addLinks(_links: Link[]): this {\n    return this;\n  }\n\n  // By default does nothing\n  setStatus(_status: SpanStatus): this {\n    return this;\n  }\n\n  // By default does nothing\n  updateName(_name: string): this {\n    return this;\n  }\n\n  // By default does nothing\n  end(_endTime?: TimeInput): void {}\n\n  // isRecording always returns false for NonRecordingSpan.\n  isRecording(): boolean {\n    return false;\n  }\n\n  // By default does nothing\n  recordException(_exception: Exception, _time?: TimeInput): void {}\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { ContextAPI } from '../api/context';\n\n/**\n * span key\n */\nconst SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context: Context): Span | undefined {\n  return (context.getValue(SPAN_KEY) as Span) || undefined;\n}\n\n/**\n * Gets the span from the current context, if one exists.\n */\nexport function getActiveSpan(): Span | undefined {\n  return getSpan(ContextAPI.getInstance().active());\n}\n\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context: Context, span: Span): Context {\n  return context.setValue(SPAN_KEY, span);\n}\n\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context: Context): Context {\n  return context.deleteValue(SPAN_KEY);\n}\n\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(\n  context: Context,\n  spanContext: SpanContext\n): Context {\n  return setSpan(context, new NonRecordingSpan(spanContext));\n}\n\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context: Context): SpanContext | undefined {\n  return getSpan(context)?.spanContext();\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\n\nconst VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nconst VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\n\nexport function isValidTraceId(traceId: string): boolean {\n  return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\n\nexport function isValidSpanId(spanId: string): boolean {\n  return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext: SpanContext): boolean {\n  return (\n    isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId)\n  );\n}\n\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext: SpanContext): Span {\n  return new NonRecordingSpan(spanContext);\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextAPI } from '../api/context';\nimport { Context } from '../context/types';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { isSpanContextValid } from './spancontext-utils';\nimport { SpanOptions } from './SpanOptions';\nimport { SpanContext } from './span_context';\nimport { Tracer } from './tracer';\n\nconst contextApi = ContextAPI.getInstance();\n\n/**\n * No-op implementations of {@link Tracer}.\n */\nexport class NoopTracer implements Tracer {\n  // startSpan starts a noop span.\n  startSpan(\n    name: string,\n    options?: SpanOptions,\n    context = contextApi.active()\n  ): Span {\n    const root = Boolean(options?.root);\n    if (root) {\n      return new NonRecordingSpan();\n    }\n\n    const parentFromContext = context && getSpanContext(context);\n\n    if (\n      isSpanContext(parentFromContext) &&\n      isSpanContextValid(parentFromContext)\n    ) {\n      return new NonRecordingSpan(parentFromContext);\n    } else {\n      return new NonRecordingSpan();\n    }\n  }\n\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    ctx: Context | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | SpanOptions,\n    arg3?: F | Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: SpanOptions | undefined;\n    let ctx: Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as SpanOptions | undefined;\n      ctx = arg3 as Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? contextApi.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = setSpan(parentContext, span);\n\n    return contextApi.with(contextWithSpanSet, fn, undefined, span);\n  }\n}\n\nfunction isSpanContext(spanContext: any): spanContext is SpanContext {\n  return (\n    typeof spanContext === 'object' &&\n    typeof spanContext['spanId'] === 'string' &&\n    typeof spanContext['traceId'] === 'string' &&\n    typeof spanContext['traceFlags'] === 'number'\n  );\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { NoopTracer } from './NoopTracer';\nimport { Span } from './span';\nimport { SpanOptions } from './SpanOptions';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER = new NoopTracer();\n\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nexport class ProxyTracer implements Tracer {\n  // When a real implementation is provided, this will be it\n  private _delegate?: Tracer;\n\n  constructor(\n    private _provider: TracerDelegator,\n    public readonly name: string,\n    public readonly version?: string,\n    public readonly options?: TracerOptions\n  ) {}\n\n  startSpan(name: string, options?: SpanOptions, context?: Context): Span {\n    return this._getTracer().startSpan(name, options, context);\n  }\n\n  startActiveSpan<F extends (span: Span) => unknown>(\n    _name: string,\n    _options: F | SpanOptions,\n    _context?: F | Context,\n    _fn?: F\n  ): ReturnType<F> {\n    const tracer = this._getTracer();\n    return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n  }\n\n  /**\n   * Try to get a tracer from the proxy tracer provider.\n   * If the proxy tracer provider has no delegate, return a noop tracer.\n   */\n  private _getTracer() {\n    if (this._delegate) {\n      return this._delegate;\n    }\n\n    const tracer = this._provider.getDelegateTracer(\n      this.name,\n      this.version,\n      this.options\n    );\n\n    if (!tracer) {\n      return NOOP_TRACER;\n    }\n\n    this._delegate = tracer;\n    return this._delegate;\n  }\n}\n\nexport interface TracerDelegator {\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopTracer } from './NoopTracer';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\nimport { TracerProvider } from './tracer_provider';\n\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nexport class NoopTracerProvider implements TracerProvider {\n  getTracer(\n    _name?: string,\n    _version?: string,\n    _options?: TracerOptions\n  ): Tracer {\n    return new NoopTracer();\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Tracer } from './tracer';\nimport { TracerProvider } from './tracer_provider';\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nexport class ProxyTracerProvider implements TracerProvider {\n  private _delegate?: TracerProvider;\n\n  /**\n   * Get a {@link ProxyTracer}\n   */\n  getTracer(name: string, version?: string, options?: TracerOptions): Tracer {\n    return (\n      this.getDelegateTracer(name, version, options) ??\n      new ProxyTracer(this, name, version, options)\n    );\n  }\n\n  getDelegate(): TracerProvider {\n    return this._delegate ?? NOOP_TRACER_PROVIDER;\n  }\n\n  /**\n   * Set the delegate tracer provider\n   */\n  setDelegate(delegate: TracerProvider) {\n    this._delegate = delegate;\n  }\n\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined {\n    return this._delegate?.getTracer(name, version, options);\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanAttributes } from './attributes';\nimport { TraceState } from './trace_state';\n\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport enum SamplingDecision {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  NOT_RECORD,\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  RECORD,\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  RECORD_AND_SAMPLED,\n}\n\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling result contains a decision for a {@link Span} and additional\n * attributes the sampler would like to added to the Span.\n */\nexport interface SamplingResult {\n  /**\n   * A sampling decision, refer to {@link SamplingDecision} for details.\n   */\n  decision: SamplingDecision;\n  /**\n   * The list of attributes returned by SamplingResult MUST be immutable.\n   * Caller may call {@link Sampler}.shouldSample any number of times and\n   * can safely cache the returned value.\n   */\n  attributes?: Readonly<SpanAttributes>;\n  /**\n   * A {@link TraceState} that will be associated with the {@link Span} through\n   * the new {@link SpanContext}. Samplers SHOULD return the TraceState from\n   * the passed-in {@link Context} if they do not intend to change it. Leaving\n   * the value undefined will also leave the TraceState unchanged.\n   */\n  traceState?: TraceState;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum SpanKind {\n  /** Default value. Indicates that the span is used internally. */\n  INTERNAL = 0,\n\n  /**\n   * Indicates that the span covers server-side handling of an RPC or other\n   * remote request.\n   */\n  SERVER = 1,\n\n  /**\n   * Indicates that the span covers the client-side wrapper around an RPC or\n   * other remote request.\n   */\n  CLIENT = 2,\n\n  /**\n   * Indicates that the span describes producer sending a message to a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  PRODUCER = 3,\n\n  /**\n   * Indicates that the span describes consumer receiving a message from a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  CONSUMER = 4,\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport interface SpanStatus {\n  /** The status code of this message. */\n  code: SpanStatusCode;\n  /** A developer-facing error message. */\n  message?: string;\n}\n\n/**\n * An enumeration of status codes.\n */\nexport enum SpanStatusCode {\n  /**\n   * The default status.\n   */\n  UNSET = 0,\n  /**\n   * The operation has been validated by an Application developer or\n   * Operator to have completed successfully.\n   */\n  OK = 1,\n  /**\n   * The operation contains an error.\n   */\n  ERROR = 2,\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TraceState } from '../trace_state';\nimport { validateKey, validateValue } from './tracestate-validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceStateImpl implements TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceStateImpl {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceStateImpl {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceStateImpl {\n    const traceState = new TraceStateImpl();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TraceState } from '../trace_state';\nimport { TraceStateImpl } from './tracestate-impl';\n\nexport function createTraceState(rawTraceState?: string): TraceState {\n  return new TraceStateImpl(rawTraceState);\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport const context = ContextAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport const diag = DiagAPI.instance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from './Meter';\nimport { MeterProvider } from './MeterProvider';\nimport { NOOP_METER } from './NoopMeter';\n\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nexport class NoopMeterProvider implements MeterProvider {\n  getMeter(_name: string, _version?: string, _options?: MeterOptions): Meter {\n    return NOOP_METER;\n  }\n}\n\nexport const NOOP_METER_PROVIDER = new NoopMeterProvider();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from '../metrics/Meter';\nimport { MeterProvider } from '../metrics/MeterProvider';\nimport { NOOP_METER_PROVIDER } from '../metrics/NoopMeterProvider';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'metrics';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nexport class MetricsAPI {\n  private static _instance?: MetricsAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Metrics API */\n  public static getInstance(): MetricsAPI {\n    if (!this._instance) {\n      this._instance = new MetricsAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global meter provider.\n   * Returns true if the meter provider was successfully registered, else false.\n   */\n  public setGlobalMeterProvider(provider: MeterProvider): boolean {\n    return registerGlobal(API_NAME, provider, DiagAPI.instance());\n  }\n\n  /**\n   * Returns the global meter provider.\n   */\n  public getMeterProvider(): MeterProvider {\n    return getGlobal(API_NAME) || NOOP_METER_PROVIDER;\n  }\n\n  /**\n   * Returns a meter from the global meter provider.\n   */\n  public getMeter(\n    name: string,\n    version?: string,\n    options?: MeterOptions\n  ): Meter {\n    return this.getMeterProvider().getMeter(name, version, options);\n  }\n\n  /** Remove the global meter provider */\n  public disable(): void {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport const metrics = MetricsAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { TextMapPropagator } from './TextMapPropagator';\n\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nexport class NoopTextMapPropagator implements TextMapPropagator {\n  /** Noop inject function does nothing */\n  inject(_context: Context, _carrier: unknown): void {}\n  /** Noop extract function does nothing and returns the input context */\n  extract(context: Context, _carrier: unknown): Context {\n    return context;\n  }\n  fields(): string[] {\n    return [];\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextAPI } from '../api/context';\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Baggage } from './types';\n\n/**\n * Baggage key\n */\nconst BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context: Context): Baggage | undefined {\n  return (context.getValue(BAGGAGE_KEY) as Baggage) || undefined;\n}\n\n/**\n * Retrieve the current baggage from the active/current context\n *\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getActiveBaggage(): Baggage | undefined {\n  return getBaggage(ContextAPI.getInstance().active());\n}\n\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context: Context, baggage: Baggage): Context {\n  return context.setValue(BAGGAGE_KEY, baggage);\n}\n\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context: Context): Context {\n  return context.deleteValue(BAGGAGE_KEY);\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport {\n  defaultTextMapGetter,\n  defaultTextMapSetter,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '../propagation/TextMapPropagator';\nimport {\n  getBaggage,\n  getActiveBaggage,\n  setBaggage,\n  deleteBaggage,\n} from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'propagation';\nconst NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nexport class PropagationAPI {\n  private static _instance?: PropagationAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Propagator API */\n  public static getInstance(): PropagationAPI {\n    if (!this._instance) {\n      this._instance = new PropagationAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current propagator.\n   *\n   * @returns true if the propagator was successfully registered, else false\n   */\n  public setGlobalPropagator(propagator: TextMapPropagator): boolean {\n    return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n  }\n\n  /**\n   * Inject context into a carrier to be propagated inter-process\n   *\n   * @param context Context carrying tracing data to inject\n   * @param carrier carrier to inject context into\n   * @param setter Function used to set values on the carrier\n   */\n  public inject<Carrier>(\n    context: Context,\n    carrier: Carrier,\n    setter: TextMapSetter<Carrier> = defaultTextMapSetter\n  ): void {\n    return this._getGlobalPropagator().inject(context, carrier, setter);\n  }\n\n  /**\n   * Extract context from a carrier\n   *\n   * @param context Context which the newly created context will inherit from\n   * @param carrier Carrier to extract context from\n   * @param getter Function used to extract keys from a carrier\n   */\n  public extract<Carrier>(\n    context: Context,\n    carrier: Carrier,\n    getter: TextMapGetter<Carrier> = defaultTextMapGetter\n  ): Context {\n    return this._getGlobalPropagator().extract(context, carrier, getter);\n  }\n\n  /**\n   * Return a list of all fields which may be used by the propagator.\n   */\n  public fields(): string[] {\n    return this._getGlobalPropagator().fields();\n  }\n\n  /** Remove the global propagator */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n\n  public createBaggage = createBaggage;\n\n  public getBaggage = getBaggage;\n\n  public getActiveBaggage = getActiveBaggage;\n\n  public setBaggage = setBaggage;\n\n  public deleteBaggage = deleteBaggage;\n\n  private _getGlobalPropagator(): TextMapPropagator {\n    return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport const propagation = PropagationAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport {\n  isSpanContextValid,\n  wrapSpanContext,\n} from '../trace/spancontext-utils';\nimport { Tracer } from '../trace/tracer';\nimport { TracerProvider } from '../trace/tracer_provider';\nimport {\n  deleteSpan,\n  getActiveSpan,\n  getSpan,\n  getSpanContext,\n  setSpan,\n  setSpanContext,\n} from '../trace/context-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'trace';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nexport class TraceAPI {\n  private static _instance?: TraceAPI;\n\n  private _proxyTracerProvider = new ProxyTracerProvider();\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Trace API */\n  public static getInstance(): TraceAPI {\n    if (!this._instance) {\n      this._instance = new TraceAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global tracer.\n   *\n   * @returns true if the tracer provider was successfully registered, else false\n   */\n  public setGlobalTracerProvider(provider: TracerProvider): boolean {\n    const success = registerGlobal(\n      API_NAME,\n      this._proxyTracerProvider,\n      DiagAPI.instance()\n    );\n    if (success) {\n      this._proxyTracerProvider.setDelegate(provider);\n    }\n    return success;\n  }\n\n  /**\n   * Returns the global tracer provider.\n   */\n  public getTracerProvider(): TracerProvider {\n    return getGlobal(API_NAME) || this._proxyTracerProvider;\n  }\n\n  /**\n   * Returns a tracer from the global tracer provider.\n   */\n  public getTracer(name: string, version?: string): Tracer {\n    return this.getTracerProvider().getTracer(name, version);\n  }\n\n  /** Remove the global tracer provider */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n    this._proxyTracerProvider = new ProxyTracerProvider();\n  }\n\n  public wrapSpanContext = wrapSpanContext;\n\n  public isSpanContextValid = isSpanContextValid;\n\n  public deleteSpan = deleteSpan;\n\n  public getSpan = getSpan;\n\n  public getActiveSpan = getActiveSpan;\n\n  public getSpanContext = getSpanContext;\n\n  public setSpan = setSpan;\n\n  public setSpanContext = setSpanContext;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport const trace = TraceAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { BaggageEntry, BaggageEntryMetadata, Baggage } from './baggage/types';\nexport { baggageEntryMetadataFromString } from './baggage/utils';\nexport { Exception } from './common/Exception';\nexport { HrTime, TimeInput } from './common/Time';\nexport { Attributes, AttributeValue } from './common/Attributes';\n\n// Context APIs\nexport { createContextKey, ROOT_CONTEXT } from './context/context';\nexport { Context, ContextManager } from './context/types';\nexport type { ContextAPI } from './api/context';\n\n// Diag APIs\nexport { DiagConsoleLogger } from './diag/consoleLogger';\nexport {\n  DiagLogFunction,\n  DiagLogger,\n  DiagLogLevel,\n  ComponentLoggerOptions,\n  DiagLoggerOptions,\n} from './diag/types';\nexport type { DiagAPI } from './api/diag';\n\n// Metrics APIs\nexport { createNoopMeter } from './metrics/NoopMeter';\nexport { MeterOptions, Meter } from './metrics/Meter';\nexport { MeterProvider } from './metrics/MeterProvider';\nexport {\n  ValueType,\n  Counter,\n  Gauge,\n  Histogram,\n  MetricOptions,\n  Observable,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n  UpDownCounter,\n  BatchObservableCallback,\n  MetricAdvice,\n  MetricAttributes,\n  MetricAttributeValue,\n  ObservableCallback,\n} from './metrics/Metric';\nexport {\n  BatchObservableResult,\n  ObservableResult,\n} from './metrics/ObservableResult';\nexport type { MetricsAPI } from './api/metrics';\n\n// Propagation APIs\nexport {\n  TextMapPropagator,\n  TextMapSetter,\n  TextMapGetter,\n  defaultTextMapGetter,\n  defaultTextMapSetter,\n} from './propagation/TextMapPropagator';\nexport type { PropagationAPI } from './api/propagation';\n\n// Trace APIs\nexport { SpanAttributes, SpanAttributeValue } from './trace/attributes';\nexport { Link } from './trace/link';\nexport { ProxyTracer, TracerDelegator } from './trace/ProxyTracer';\nexport { ProxyTracerProvider } from './trace/ProxyTracerProvider';\nexport { Sampler } from './trace/Sampler';\nexport { SamplingDecision, SamplingResult } from './trace/SamplingResult';\nexport { SpanContext } from './trace/span_context';\nexport { SpanKind } from './trace/span_kind';\nexport { Span } from './trace/span';\nexport { SpanOptions } from './trace/SpanOptions';\nexport { SpanStatus, SpanStatusCode } from './trace/status';\nexport { TraceFlags } from './trace/trace_flags';\nexport { TraceState } from './trace/trace_state';\nexport { createTraceState } from './trace/internal/utils';\nexport { TracerProvider } from './trace/tracer_provider';\nexport { Tracer } from './trace/tracer';\nexport { TracerOptions } from './trace/tracer_options';\nexport {\n  isSpanContextValid,\n  isValidTraceId,\n  isValidSpanId,\n} from './trace/spancontext-utils';\nexport {\n  INVALID_SPANID,\n  INVALID_TRACEID,\n  INVALID_SPAN_CONTEXT,\n} from './trace/invalid-span-constants';\nexport type { TraceAPI } from './api/trace';\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { context } from './context-api';\nimport { diag } from './diag-api';\nimport { metrics } from './metrics-api';\nimport { propagation } from './propagation-api';\nimport { trace } from './trace-api';\n\n// Named export.\nexport { context, diag, metrics, propagation, trace };\n// Default export.\nexport default {\n  context,\n  diag,\n  metrics,\n  propagation,\n  trace,\n};\n", "export * from '../core/index';\nexport * from '../errors/index';\n\nexport * from './assistant-response';\nexport * as LangChainAdapter from './langchain-adapter';\nexport * as LlamaIndexAdapter from './llamaindex-adapter';\nexport * from './stream-data';\n", "// re-exports:\nexport { createIdGenerator, generateId } from '@ai-sdk/provider-utils';\nexport type { IDGenerator } from '@ai-sdk/provider-utils';\nexport {\n  formatAssistantStreamPart,\n  formatDataStreamPart,\n  jsonSchema,\n  parseAssistantStreamPart,\n  parseDataStreamPart,\n  processDataStream,\n  processTextStream,\n  zodSchema,\n} from '@ai-sdk/ui-utils';\nexport type {\n  AssistantMessage,\n  AssistantStatus,\n  Attachment,\n  ChatRequest,\n  ChatRequestOptions,\n  CreateMessage,\n  DataMessage,\n  DataStreamPart,\n  DeepPartial,\n  IdGenerator,\n  JSONValue,\n  Message,\n  UIMessage,\n  RequestOptions,\n  Schema,\n  ToolInvocation,\n  UseAssistantOptions,\n} from '@ai-sdk/ui-utils';\n\n// directory exports:\nexport * from './data-stream';\nexport * from './embed';\nexport * from './generate-image';\nexport * from './generate-object';\nexport * from './generate-text';\nexport * from './middleware';\nexport * from './prompt';\nexport * from './registry';\nexport * from './tool';\nexport * from './types';\n\n// telemetry types:\nexport type { TelemetrySettings } from './telemetry/telemetry-settings';\n\n// util exports:\nexport { cosineSimilarity } from './util/cosine-similarity';\nexport { simulateReadableStream } from './util/simulate-readable-stream';\n", "import { DataStreamString, formatDataStreamPart } from '@ai-sdk/ui-utils';\nimport { DataStreamWriter } from './data-stream-writer';\n\nexport function createDataStream({\n  execute,\n  onError = () => 'An error occurred.', // mask error messages for safety by default\n}: {\n  execute: (dataStream: DataStreamWriter) => Promise<void> | void;\n  onError?: (error: unknown) => string;\n}): ReadableStream<DataStreamString> {\n  let controller!: ReadableStreamDefaultController<string>;\n\n  const ongoingStreamPromises: Promise<void>[] = [];\n\n  const stream = new ReadableStream({\n    start(controllerArg) {\n      controller = controllerArg;\n    },\n  });\n\n  function safeEnqueue(data: DataStreamString) {\n    try {\n      controller.enqueue(data);\n    } catch (error) {\n      // suppress errors when the stream has been closed\n    }\n  }\n\n  try {\n    const result = execute({\n      write(data: DataStreamString) {\n        safeEnqueue(data);\n      },\n      writeData(data) {\n        safeEnqueue(formatDataStreamPart('data', [data]));\n      },\n      writeMessageAnnotation(annotation) {\n        safeEnqueue(formatDataStreamPart('message_annotations', [annotation]));\n      },\n      writeSource(source) {\n        safeEnqueue(formatDataStreamPart('source', source));\n      },\n      merge(streamArg) {\n        ongoingStreamPromises.push(\n          (async () => {\n            const reader = streamArg.getReader();\n            while (true) {\n              const { done, value } = await reader.read();\n              if (done) break;\n              safeEnqueue(value);\n            }\n          })().catch(error => {\n            safeEnqueue(formatDataStreamPart('error', onError(error)));\n          }),\n        );\n      },\n      onError,\n    });\n\n    if (result) {\n      ongoingStreamPromises.push(\n        result.catch(error => {\n          safeEnqueue(formatDataStreamPart('error', onError(error)));\n        }),\n      );\n    }\n  } catch (error) {\n    safeEnqueue(formatDataStreamPart('error', onError(error)));\n  }\n\n  // Wait until all ongoing streams are done. This approach enables merging\n  // streams even after execute has returned, as long as there is still an\n  // open merged stream. This is important to e.g. forward new streams and\n  // from callbacks.\n  const waitForStreams: Promise<void> = new Promise(async resolve => {\n    while (ongoingStreamPromises.length > 0) {\n      await ongoingStreamPromises.shift();\n    }\n    resolve();\n  });\n\n  waitForStreams.finally(() => {\n    try {\n      controller.close();\n    } catch (error) {\n      // suppress errors when the stream has been closed\n    }\n  });\n\n  return stream;\n}\n", "export function prepareResponseHeaders(\n  headers: HeadersInit | undefined,\n  {\n    contentType,\n    dataStreamVersion,\n  }: { contentType: string; dataStreamVersion?: 'v1' | undefined },\n) {\n  const responseHeaders = new Headers(headers ?? {});\n\n  if (!responseHeaders.has('Content-Type')) {\n    responseHeaders.set('Content-Type', contentType);\n  }\n\n  if (dataStreamVersion !== undefined) {\n    responseHeaders.set('X-Vercel-AI-Data-Stream', dataStreamVersion);\n  }\n\n  return responseHeaders;\n}\n", "import { prepareResponseHeaders } from '../util/prepare-response-headers';\nimport { createDataStream } from './create-data-stream';\nimport { DataStreamWriter } from './data-stream-writer';\n\nexport function createDataStreamResponse({\n  status,\n  statusText,\n  headers,\n  execute,\n  onError,\n}: ResponseInit & {\n  execute: (dataStream: DataStreamWriter) => Promise<void> | void;\n  onError?: (error: unknown) => string;\n}): Response {\n  return new Response(\n    createDataStream({ execute, onError }).pipeThrough(new TextEncoderStream()),\n    {\n      status,\n      statusText,\n      headers: prepareResponseHeaders(headers, {\n        contentType: 'text/plain; charset=utf-8',\n        dataStreamVersion: 'v1',\n      }),\n    },\n  );\n}\n", "export function prepareOutgoingHttpHeaders(\n  headers: HeadersInit | undefined,\n  {\n    contentType,\n    dataStreamVersion,\n  }: { contentType: string; dataStreamVersion?: 'v1' | undefined },\n) {\n  const outgoingHeaders: Record<string, string | number | string[]> = {};\n\n  if (headers != null) {\n    for (const [key, value] of Object.entries(headers)) {\n      outgoingHeaders[key] = value;\n    }\n  }\n\n  if (outgoingHeaders['Content-Type'] == null) {\n    outgoingHeaders['Content-Type'] = contentType;\n  }\n\n  if (dataStreamVersion !== undefined) {\n    outgoingHeaders['X-Vercel-AI-Data-Stream'] = dataStreamVersion;\n  }\n\n  return outgoingHeaders;\n}\n", "import { ServerResponse } from 'node:http';\n\n/**\n * Writes the content of a stream to a server response.\n */\nexport function writeToServerResponse({\n  response,\n  status,\n  statusText,\n  headers,\n  stream,\n}: {\n  response: ServerResponse;\n  status?: number;\n  statusText?: string;\n  headers?: Record<string, string | number | string[]>;\n  stream: ReadableStream<Uint8Array>;\n}): void {\n  response.writeHead(status ?? 200, statusText, headers);\n\n  const reader = stream.getReader();\n  const read = async () => {\n    try {\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n        response.write(value);\n      }\n    } catch (error) {\n      throw error;\n    } finally {\n      response.end();\n    }\n  };\n\n  read();\n}\n", "import { ServerResponse } from 'node:http';\nimport { prepareOutgoingHttpHeaders } from '../util/prepare-outgoing-http-headers';\nimport { writeToServerResponse } from '../util/write-to-server-response';\nimport { createDataStream } from './create-data-stream';\nimport { DataStreamWriter } from './data-stream-writer';\n\nexport function pipeDataStreamToResponse(\n  response: ServerResponse,\n  {\n    status,\n    statusText,\n    headers,\n    execute,\n    onError,\n  }: ResponseInit & {\n    execute: (writer: DataStreamWriter) => Promise<void> | void;\n    onError?: (error: unknown) => string;\n  },\n): void {\n  writeToServerResponse({\n    response,\n    status,\n    statusText,\n    headers: prepareOutgoingHttpHeaders(headers, {\n      contentType: 'text/plain; charset=utf-8',\n      dataStreamVersion: 'v1',\n    }),\n    stream: createDataStream({ execute, onError }).pipeThrough(\n      new TextEncoderStream(),\n    ),\n  });\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidArgumentError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidArgumentError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly parameter: string;\n  readonly value: unknown;\n\n  constructor({\n    parameter,\n    value,\n    message,\n  }: {\n    parameter: string;\n    value: unknown;\n    message: string;\n  }) {\n    super({\n      name,\n      message: `Invalid argument for parameter ${parameter}: ${message}`,\n    });\n\n    this.parameter = parameter;\n    this.value = value;\n  }\n\n  static isInstance(error: unknown): error is InvalidArgumentError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { APICallError } from '@ai-sdk/provider';\nimport { delay, getErrorMessage, isAbortError } from '@ai-sdk/provider-utils';\nimport { RetryError } from './retry-error';\n\nexport type RetryFunction = <OUTPUT>(\n  fn: () => PromiseLike<OUTPUT>,\n) => PromiseLike<OUTPUT>;\n\n/**\nThe `retryWithExponentialBackoff` strategy retries a failed API call with an exponential backoff.\nYou can configure the maximum number of retries, the initial delay, and the backoff factor.\n */\nexport const retryWithExponentialBackoff =\n  ({\n    maxRetries = 2,\n    initialDelayInMs = 2000,\n    backoffFactor = 2,\n  } = {}): RetryFunction =>\n  async <OUTPUT>(f: () => PromiseLike<OUTPUT>) =>\n    _retryWithExponentialBackoff(f, {\n      maxRetries,\n      delayInMs: initialDelayInMs,\n      backoffFactor,\n    });\n\nasync function _retryWithExponentialBackoff<OUTPUT>(\n  f: () => PromiseLike<OUTPUT>,\n  {\n    maxRetries,\n    delayInMs,\n    backoffFactor,\n  }: { maxRetries: number; delayInMs: number; backoffFactor: number },\n  errors: unknown[] = [],\n): Promise<OUTPUT> {\n  try {\n    return await f();\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error; // don't retry when the request was aborted\n    }\n\n    if (maxRetries === 0) {\n      throw error; // don't wrap the error when retries are disabled\n    }\n\n    const errorMessage = getErrorMessage(error);\n    const newErrors = [...errors, error];\n    const tryNumber = newErrors.length;\n\n    if (tryNumber > maxRetries) {\n      throw new RetryError({\n        message: `Failed after ${tryNumber} attempts. Last error: ${errorMessage}`,\n        reason: 'maxRetriesExceeded',\n        errors: newErrors,\n      });\n    }\n\n    if (\n      error instanceof Error &&\n      APICallError.isInstance(error) &&\n      error.isRetryable === true &&\n      tryNumber <= maxRetries\n    ) {\n      await delay(delayInMs);\n      return _retryWithExponentialBackoff(\n        f,\n        { maxRetries, delayInMs: backoffFactor * delayInMs, backoffFactor },\n        newErrors,\n      );\n    }\n\n    if (tryNumber === 1) {\n      throw error; // don't wrap the error when a non-retryable error occurs on the first try\n    }\n\n    throw new RetryError({\n      message: `Failed after ${tryNumber} attempts with non-retryable error: '${errorMessage}'`,\n      reason: 'errorNotRetryable',\n      errors: newErrors,\n    });\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_RetryError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport type RetryErrorReason =\n  | 'maxRetriesExceeded'\n  | 'errorNotRetryable'\n  | 'abort';\n\nexport class RetryError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  // note: property order determines debugging output\n  readonly reason: RetryErrorReason;\n  readonly lastError: unknown;\n  readonly errors: Array<unknown>;\n\n  constructor({\n    message,\n    reason,\n    errors,\n  }: {\n    message: string;\n    reason: RetryErrorReason;\n    errors: Array<unknown>;\n  }) {\n    super({ name, message });\n\n    this.reason = reason;\n    this.errors = errors;\n\n    // separate our last error to make debugging via log easier:\n    this.lastError = errors[errors.length - 1];\n  }\n\n  static isInstance(error: unknown): error is RetryError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { InvalidArgumentError } from '../../errors/invalid-argument-error';\nimport {\n  RetryFunction,\n  retryWithExponentialBackoff,\n} from '../../util/retry-with-exponential-backoff';\n\n/**\n * Validate and prepare retries.\n */\nexport function prepareRetries({\n  maxRetries,\n}: {\n  maxRetries: number | undefined;\n}): {\n  maxRetries: number;\n  retry: RetryFunction;\n} {\n  if (maxRetries != null) {\n    if (!Number.isInteger(maxRetries)) {\n      throw new InvalidArgumentError({\n        parameter: 'maxRetries',\n        value: maxRetries,\n        message: 'maxRetries must be an integer',\n      });\n    }\n\n    if (maxRetries < 0) {\n      throw new InvalidArgumentError({\n        parameter: 'maxRetries',\n        value: maxRetries,\n        message: 'maxRetries must be >= 0',\n      });\n    }\n  }\n\n  const maxRetriesResult = maxRetries ?? 2;\n\n  return {\n    maxRetries: maxRetriesResult,\n    retry: retryWithExponentialBackoff({ maxRetries: maxRetriesResult }),\n  };\n}\n", "import { TelemetrySettings } from './telemetry-settings';\n\nexport function assembleOperationName({\n  operationId,\n  telemetry,\n}: {\n  operationId: string;\n  telemetry?: TelemetrySettings;\n}) {\n  return {\n    // standardized operation and resource name:\n    'operation.name': `${operationId}${\n      telemetry?.functionId != null ? ` ${telemetry.functionId}` : ''\n    }`,\n    'resource.name': telemetry?.functionId,\n\n    // detailed, AI SDK specific data:\n    'ai.operationId': operationId,\n    'ai.telemetry.functionId': telemetry?.functionId,\n  };\n}\n", "import { Attributes } from '@opentelemetry/api';\nimport { CallSettings } from '../prompt/call-settings';\nimport { TelemetrySettings } from './telemetry-settings';\n\nexport function getBaseTelemetryAttributes({\n  model,\n  settings,\n  telemetry,\n  headers,\n}: {\n  model: { modelId: string; provider: string };\n  settings: Omit<CallSettings, 'abortSignal' | 'headers'>;\n  telemetry: TelemetrySettings | undefined;\n  headers: Record<string, string | undefined> | undefined;\n}): Attributes {\n  return {\n    'ai.model.provider': model.provider,\n    'ai.model.id': model.modelId,\n\n    // settings:\n    ...Object.entries(settings).reduce((attributes, [key, value]) => {\n      attributes[`ai.settings.${key}`] = value;\n      return attributes;\n    }, {} as Attributes),\n\n    // add metadata as attributes:\n    ...Object.entries(telemetry?.metadata ?? {}).reduce(\n      (attributes, [key, value]) => {\n        attributes[`ai.telemetry.metadata.${key}`] = value;\n        return attributes;\n      },\n      {} as Attributes,\n    ),\n\n    // request headers\n    ...Object.entries(headers ?? {}).reduce((attributes, [key, value]) => {\n      if (value !== undefined) {\n        attributes[`ai.request.headers.${key}`] = value;\n      }\n      return attributes;\n    }, {} as Attributes),\n  };\n}\n", "import { Tracer, trace } from '@opentelemetry/api';\nimport { noopTracer } from './noop-tracer';\n\nexport function getTracer({\n  isEnabled = false,\n  tracer,\n}: {\n  isEnabled?: boolean;\n  tracer?: Tracer;\n} = {}): Tracer {\n  if (!isEnabled) {\n    return noopTracer;\n  }\n\n  if (tracer) {\n    return tracer;\n  }\n\n  return trace.getTracer('ai');\n}\n", "import { Span, SpanContext, Tracer } from '@opentelemetry/api';\n\n/**\n * Tracer implementation that does nothing (null object).\n */\nexport const noopTracer: Tracer = {\n  startSpan(): Span {\n    return noopSpan;\n  },\n\n  startActiveSpan<F extends (span: Span) => unknown>(\n    name: unknown,\n    arg1: unknown,\n    arg2?: unknown,\n    arg3?: F,\n  ): ReturnType<any> {\n    if (typeof arg1 === 'function') {\n      return arg1(noopSpan);\n    }\n    if (typeof arg2 === 'function') {\n      return arg2(noopSpan);\n    }\n    if (typeof arg3 === 'function') {\n      return arg3(noopSpan);\n    }\n  },\n};\n\nconst noopSpan: Span = {\n  spanContext() {\n    return noopSpanContext;\n  },\n  setAttribute() {\n    return this;\n  },\n  setAttributes() {\n    return this;\n  },\n  addEvent() {\n    return this;\n  },\n  addLink() {\n    return this;\n  },\n  addLinks() {\n    return this;\n  },\n  setStatus() {\n    return this;\n  },\n  updateName() {\n    return this;\n  },\n  end() {\n    return this;\n  },\n  isRecording() {\n    return false;\n  },\n  recordException() {\n    return this;\n  },\n};\n\nconst noopSpanContext: SpanContext = {\n  traceId: '',\n  spanId: '',\n  traceFlags: 0,\n};\n", "import { Attributes, Span, Tracer, SpanStatusCode } from '@opentelemetry/api';\n\nexport function recordSpan<T>({\n  name,\n  tracer,\n  attributes,\n  fn,\n  endWhenDone = true,\n}: {\n  name: string;\n  tracer: Tracer;\n  attributes: Attributes;\n  fn: (span: Span) => Promise<T>;\n  endWhenDone?: boolean;\n}) {\n  return tracer.startActiveSpan(name, { attributes }, async span => {\n    try {\n      const result = await fn(span);\n\n      if (endWhenDone) {\n        span.end();\n      }\n\n      return result;\n    } catch (error) {\n      try {\n        if (error instanceof Error) {\n          span.recordException({\n            name: error.name,\n            message: error.message,\n            stack: error.stack,\n          });\n          span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error.message,\n          });\n        } else {\n          span.setStatus({ code: SpanStatusCode.ERROR });\n        }\n      } finally {\n        // always stop the span when there is an error:\n        span.end();\n      }\n\n      throw error;\n    }\n  });\n}\n", "import type { Attributes, AttributeValue } from '@opentelemetry/api';\nimport type { TelemetrySettings } from './telemetry-settings';\n\nexport function selectTelemetryAttributes({\n  telemetry,\n  attributes,\n}: {\n  telemetry?: TelemetrySettings;\n  attributes: {\n    [attributeKey: string]:\n      | AttributeValue\n      | { input: () => AttributeValue | undefined }\n      | { output: () => AttributeValue | undefined }\n      | undefined;\n  };\n}): Attributes {\n  // when telemetry is disabled, return an empty object to avoid serialization overhead:\n  if (telemetry?.isEnabled !== true) {\n    return {};\n  }\n\n  return Object.entries(attributes).reduce((attributes, [key, value]) => {\n    if (value === undefined) {\n      return attributes;\n    }\n\n    // input value, check if it should be recorded:\n    if (\n      typeof value === 'object' &&\n      'input' in value &&\n      typeof value.input === 'function'\n    ) {\n      // default to true:\n      if (telemetry?.recordInputs === false) {\n        return attributes;\n      }\n\n      const result = value.input();\n\n      return result === undefined\n        ? attributes\n        : { ...attributes, [key]: result };\n    }\n\n    // output value, check if it should be recorded:\n    if (\n      typeof value === 'object' &&\n      'output' in value &&\n      typeof value.output === 'function'\n    ) {\n      // default to true:\n      if (telemetry?.recordOutputs === false) {\n        return attributes;\n      }\n\n      const result = value.output();\n\n      return result === undefined\n        ? attributes\n        : { ...attributes, [key]: result };\n    }\n\n    // value is an attribute value already:\n    return { ...attributes, [key]: value };\n  }, {});\n}\n", "import { prepareRetries } from '../prompt/prepare-retries';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { EmbeddingModel } from '../types';\nimport { EmbedResult } from './embed-result';\n\n/**\nEmbed a value using an embedding model. The type of the value is defined by the embedding model.\n\n@param model - The embedding model to use.\n@param value - The value that should be embedded.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@returns A result object that contains the embedding, the value, and additional information.\n */\nexport async function embed<VALUE>({\n  model,\n  value,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  experimental_telemetry: telemetry,\n}: {\n  /**\nThe embedding model to use.\n     */\n  model: EmbeddingModel<VALUE>;\n\n  /**\nThe value that should be embedded.\n   */\n  value: VALUE;\n\n  /**\nMaximum number of retries per embedding model call. Set to 0 to disable retries.\n\n@default 2\n   */\n  maxRetries?: number;\n\n  /**\nAbort signal.\n */\n  abortSignal?: AbortSignal;\n\n  /**\nAdditional headers to include in the request.\nOnly applicable for HTTP-based providers.\n */\n  headers?: Record<string, string>;\n\n  /**\n   * Optional telemetry configuration (experimental).\n   */\n  experimental_telemetry?: TelemetrySettings;\n}): Promise<EmbedResult<VALUE>> {\n  const { maxRetries, retry } = prepareRetries({ maxRetries: maxRetriesArg });\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { maxRetries },\n  });\n\n  const tracer = getTracer(telemetry);\n\n  return recordSpan({\n    name: 'ai.embed',\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({ operationId: 'ai.embed', telemetry }),\n        ...baseTelemetryAttributes,\n        'ai.value': { input: () => JSON.stringify(value) },\n      },\n    }),\n    tracer,\n    fn: async span => {\n      const { embedding, usage, rawResponse } = await retry(() =>\n        // nested spans to align with the embedMany telemetry data:\n        recordSpan({\n          name: 'ai.embed.doEmbed',\n          attributes: selectTelemetryAttributes({\n            telemetry,\n            attributes: {\n              ...assembleOperationName({\n                operationId: 'ai.embed.doEmbed',\n                telemetry,\n              }),\n              ...baseTelemetryAttributes,\n              // specific settings that only make sense on the outer level:\n              'ai.values': { input: () => [JSON.stringify(value)] },\n            },\n          }),\n          tracer,\n          fn: async doEmbedSpan => {\n            const modelResponse = await model.doEmbed({\n              values: [value],\n              abortSignal,\n              headers,\n            });\n\n            const embedding = modelResponse.embeddings[0];\n            const usage = modelResponse.usage ?? { tokens: NaN };\n\n            doEmbedSpan.setAttributes(\n              selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  'ai.embeddings': {\n                    output: () =>\n                      modelResponse.embeddings.map(embedding =>\n                        JSON.stringify(embedding),\n                      ),\n                  },\n                  'ai.usage.tokens': usage.tokens,\n                },\n              }),\n            );\n\n            return {\n              embedding,\n              usage,\n              rawResponse: modelResponse.rawResponse,\n            };\n          },\n        }),\n      );\n\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            'ai.embedding': { output: () => JSON.stringify(embedding) },\n            'ai.usage.tokens': usage.tokens,\n          },\n        }),\n      );\n\n      return new DefaultEmbedResult({ value, embedding, usage, rawResponse });\n    },\n  });\n}\n\nclass DefaultEmbedResult<VALUE> implements EmbedResult<VALUE> {\n  readonly value: EmbedResult<VALUE>['value'];\n  readonly embedding: EmbedResult<VALUE>['embedding'];\n  readonly usage: EmbedResult<VALUE>['usage'];\n  readonly rawResponse: EmbedResult<VALUE>['rawResponse'];\n\n  constructor(options: {\n    value: EmbedResult<VALUE>['value'];\n    embedding: EmbedResult<VALUE>['embedding'];\n    usage: EmbedResult<VALUE>['usage'];\n    rawResponse?: EmbedResult<VALUE>['rawResponse'];\n  }) {\n    this.value = options.value;\n    this.embedding = options.embedding;\n    this.usage = options.usage;\n    this.rawResponse = options.rawResponse;\n  }\n}\n", "/**\n * Splits an array into chunks of a specified size.\n *\n * @template T - The type of elements in the array.\n * @param {T[]} array - The array to split.\n * @param {number} chunkSize - The size of each chunk.\n * @returns {T[][]} - A new array containing the chunks.\n */\nexport function splitArray<T>(array: T[], chunkSize: number): T[][] {\n  if (chunkSize <= 0) {\n    throw new Error('chunkSize must be greater than 0');\n  }\n\n  const result = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    result.push(array.slice(i, i + chunkSize));\n  }\n\n  return result;\n}\n", "import { prepareRetries } from '../prompt/prepare-retries';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { Embedding, EmbeddingModel } from '../types';\nimport { splitArray } from '../util/split-array';\nimport { EmbedManyResult } from './embed-many-result';\n\n/**\nEmbed several values using an embedding model. The type of the value is defined\nby the embedding model.\n\n`embedMany` automatically splits large requests into smaller chunks if the model\nhas a limit on how many embeddings can be generated in a single call.\n\n@param model - The embedding model to use.\n@param values - The values that should be embedded.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@returns A result object that contains the embeddings, the value, and additional information.\n */\nexport async function embedMany<VALUE>({\n  model,\n  values,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  experimental_telemetry: telemetry,\n}: {\n  /**\nThe embedding model to use.\n     */\n  model: EmbeddingModel<VALUE>;\n\n  /**\nThe values that should be embedded.\n   */\n  values: Array<VALUE>;\n\n  /**\nMaximum number of retries per embedding model call. Set to 0 to disable retries.\n\n@default 2\n   */\n  maxRetries?: number;\n\n  /**\nAbort signal.\n */\n  abortSignal?: AbortSignal;\n\n  /**\nAdditional headers to include in the request.\nOnly applicable for HTTP-based providers.\n */\n  headers?: Record<string, string>;\n\n  /**\n   * Optional telemetry configuration (experimental).\n   */\n  experimental_telemetry?: TelemetrySettings;\n}): Promise<EmbedManyResult<VALUE>> {\n  const { maxRetries, retry } = prepareRetries({ maxRetries: maxRetriesArg });\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { maxRetries },\n  });\n\n  const tracer = getTracer(telemetry);\n\n  return recordSpan({\n    name: 'ai.embedMany',\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({ operationId: 'ai.embedMany', telemetry }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        'ai.values': {\n          input: () => values.map(value => JSON.stringify(value)),\n        },\n      },\n    }),\n    tracer,\n    fn: async span => {\n      const maxEmbeddingsPerCall = model.maxEmbeddingsPerCall;\n\n      // the model has not specified limits on\n      // how many embeddings can be generated in a single call\n      if (maxEmbeddingsPerCall == null) {\n        const { embeddings, usage } = await retry(() => {\n          // nested spans to align with the embedMany telemetry data:\n          return recordSpan({\n            name: 'ai.embedMany.doEmbed',\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: 'ai.embedMany.doEmbed',\n                  telemetry,\n                }),\n                ...baseTelemetryAttributes,\n                // specific settings that only make sense on the outer level:\n                'ai.values': {\n                  input: () => values.map(value => JSON.stringify(value)),\n                },\n              },\n            }),\n            tracer,\n            fn: async doEmbedSpan => {\n              const modelResponse = await model.doEmbed({\n                values,\n                abortSignal,\n                headers,\n              });\n\n              const embeddings = modelResponse.embeddings;\n              const usage = modelResponse.usage ?? { tokens: NaN };\n\n              doEmbedSpan.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    'ai.embeddings': {\n                      output: () =>\n                        embeddings.map(embedding => JSON.stringify(embedding)),\n                    },\n                    'ai.usage.tokens': usage.tokens,\n                  },\n                }),\n              );\n\n              return { embeddings, usage };\n            },\n          });\n        });\n\n        span.setAttributes(\n          selectTelemetryAttributes({\n            telemetry,\n            attributes: {\n              'ai.embeddings': {\n                output: () =>\n                  embeddings.map(embedding => JSON.stringify(embedding)),\n              },\n              'ai.usage.tokens': usage.tokens,\n            },\n          }),\n        );\n\n        return new DefaultEmbedManyResult({ values, embeddings, usage });\n      }\n\n      // split the values into chunks that are small enough for the model:\n      const valueChunks = splitArray(values, maxEmbeddingsPerCall);\n\n      // serially embed the chunks:\n      const embeddings: Array<Embedding> = [];\n      let tokens = 0;\n\n      for (const chunk of valueChunks) {\n        const { embeddings: responseEmbeddings, usage } = await retry(() => {\n          // nested spans to align with the embedMany telemetry data:\n          return recordSpan({\n            name: 'ai.embedMany.doEmbed',\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: 'ai.embedMany.doEmbed',\n                  telemetry,\n                }),\n                ...baseTelemetryAttributes,\n                // specific settings that only make sense on the outer level:\n                'ai.values': {\n                  input: () => chunk.map(value => JSON.stringify(value)),\n                },\n              },\n            }),\n            tracer,\n            fn: async doEmbedSpan => {\n              const modelResponse = await model.doEmbed({\n                values: chunk,\n                abortSignal,\n                headers,\n              });\n\n              const embeddings = modelResponse.embeddings;\n              const usage = modelResponse.usage ?? { tokens: NaN };\n\n              doEmbedSpan.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    'ai.embeddings': {\n                      output: () =>\n                        embeddings.map(embedding => JSON.stringify(embedding)),\n                    },\n                    'ai.usage.tokens': usage.tokens,\n                  },\n                }),\n              );\n\n              return { embeddings, usage };\n            },\n          });\n        });\n\n        embeddings.push(...responseEmbeddings);\n        tokens += usage.tokens;\n      }\n\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            'ai.embeddings': {\n              output: () =>\n                embeddings.map(embedding => JSON.stringify(embedding)),\n            },\n            'ai.usage.tokens': tokens,\n          },\n        }),\n      );\n\n      return new DefaultEmbedManyResult({\n        values,\n        embeddings,\n        usage: { tokens },\n      });\n    },\n  });\n}\n\nclass DefaultEmbedManyResult<VALUE> implements EmbedManyResult<VALUE> {\n  readonly values: EmbedManyResult<VALUE>['values'];\n  readonly embeddings: EmbedManyResult<VALUE>['embeddings'];\n  readonly usage: EmbedManyResult<VALUE>['usage'];\n\n  constructor(options: {\n    values: EmbedManyResult<VALUE>['values'];\n    embeddings: EmbedManyResult<VALUE>['embeddings'];\n    usage: EmbedManyResult<VALUE>['usage'];\n  }) {\n    this.values = options.values;\n    this.embeddings = options.embeddings;\n    this.usage = options.usage;\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\nimport { ImageModelResponseMetadata } from '../core/types/image-model-response-metadata';\n\nconst name = 'AI_NoImageGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when no image could be generated. This can have multiple causes:\n\n- The model failed to generate a response.\n- The model generated a response that could not be parsed.\n */\nexport class NoImageGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  /**\nThe response metadata for each call.\n   */\n  readonly responses: Array<ImageModelResponseMetadata> | undefined;\n\n  constructor({\n    message = 'No image generated.',\n    cause,\n    responses,\n  }: {\n    message?: string;\n    cause?: Error;\n    responses?: Array<ImageModelResponseMetadata>;\n  }) {\n    super({ name, message, cause });\n\n    this.responses = responses;\n  }\n\n  static isInstance(error: unknown): error is NoImageGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import {\n  convertBase64ToUint8Array,\n  convertUint8ArrayToBase64,\n} from '@ai-sdk/provider-utils';\n\n/**\n * A generated file.\n */\nexport interface GeneratedFile {\n  /**\nFile as a base64 encoded string.\n     */\n  readonly base64: string;\n\n  /**\nFile as a Uint8Array.\n     */\n  readonly uint8Array: Uint8Array;\n\n  /**\nMIME type of the file\n   */\n  readonly mimeType: string;\n}\n\nexport class DefaultGeneratedFile implements GeneratedFile {\n  private base64Data: string | undefined;\n  private uint8ArrayData: Uint8Array | undefined;\n\n  readonly mimeType: string;\n\n  constructor({\n    data,\n    mimeType,\n  }: {\n    data: string | Uint8Array;\n    mimeType: string;\n  }) {\n    const isUint8Array = data instanceof Uint8Array;\n    this.base64Data = isUint8Array ? undefined : data;\n    this.uint8ArrayData = isUint8Array ? data : undefined;\n    this.mimeType = mimeType;\n  }\n\n  // lazy conversion with caching to avoid unnecessary conversion overhead:\n  get base64() {\n    if (this.base64Data == null) {\n      this.base64Data = convertUint8ArrayToBase64(this.uint8ArrayData!);\n    }\n    return this.base64Data;\n  }\n\n  // lazy conversion with caching to avoid unnecessary conversion overhead:\n  get uint8Array() {\n    if (this.uint8ArrayData == null) {\n      this.uint8ArrayData = convertBase64ToUint8Array(this.base64Data!);\n    }\n    return this.uint8ArrayData;\n  }\n}\n\nexport class DefaultGeneratedFileWithType extends DefaultGeneratedFile {\n  readonly type = 'file';\n\n  constructor(options: { data: string | Uint8Array; mimeType: string }) {\n    super(options);\n  }\n}\n", "const mimeTypeSignatures = [\n  {\n    mimeType: 'image/gif' as const,\n    bytesPrefix: [0x47, 0x49, 0x46],\n    base64Prefix: 'R0lG',\n  },\n  {\n    mimeType: 'image/png' as const,\n    bytesPrefix: [0x89, 0x50, 0x4e, 0x47],\n    base64Prefix: 'iVBORw',\n  },\n  {\n    mimeType: 'image/jpeg' as const,\n    bytesPrefix: [0xff, 0xd8],\n    base64Prefix: '/9j/',\n  },\n  {\n    mimeType: 'image/webp' as const,\n    bytesPrefix: [0x52, 0x49, 0x46, 0x46],\n    base64Prefix: 'UklGRg',\n  },\n  {\n    mimeType: 'image/bmp' as const,\n    bytesPrefix: [0x42, 0x4d],\n    base64Prefix: 'Qk',\n  },\n  {\n    mimeType: 'image/tiff' as const,\n    bytesPrefix: [0x49, 0x49, 0x2a, 0x00],\n    base64Prefix: 'SUkqAA',\n  },\n  {\n    mimeType: 'image/tiff' as const,\n    bytesPrefix: [0x4d, 0x4d, 0x00, 0x2a],\n    base64Prefix: 'TU0AKg',\n  },\n  {\n    mimeType: 'image/avif' as const,\n    bytesPrefix: [\n      0x00, 0x00, 0x00, 0x20, 0x66, 0x74, 0x79, 0x70, 0x61, 0x76, 0x69, 0x66,\n    ],\n    base64Prefix: 'AAAAIGZ0eXBhdmlm',\n  },\n  {\n    mimeType: 'image/heic' as const,\n    bytesPrefix: [\n      0x00, 0x00, 0x00, 0x20, 0x66, 0x74, 0x79, 0x70, 0x68, 0x65, 0x69, 0x63,\n    ],\n    base64Prefix: 'AAAAIGZ0eXBoZWlj',\n  },\n] as const;\n\nexport function detectImageMimeType(\n  image: Uint8Array | string,\n): (typeof mimeTypeSignatures)[number]['mimeType'] | undefined {\n  for (const signature of mimeTypeSignatures) {\n    if (\n      typeof image === 'string'\n        ? image.startsWith(signature.base64Prefix)\n        : image.length >= signature.bytesPrefix.length &&\n          signature.bytesPrefix.every((byte, index) => image[index] === byte)\n    ) {\n      return signature.mimeType;\n    }\n  }\n\n  return undefined;\n}\n", "import { AISDKError, ImageModelV1, JSONValue } from '@ai-sdk/provider';\nimport { NoImageGeneratedError } from '../../errors/no-image-generated-error';\nimport {\n  DefaultGeneratedFile,\n  GeneratedFile,\n} from '../generate-text/generated-file';\nimport { prepareRetries } from '../prompt/prepare-retries';\nimport { ImageGenerationWarning } from '../types/image-model';\nimport { ImageModelResponseMetadata } from '../types/image-model-response-metadata';\nimport { GenerateImageResult } from './generate-image-result';\nimport { detectImageMimeType } from '../util/detect-image-mimetype';\n\n/**\nGenerates images using an image model.\n\n@param model - The image model to use.\n@param prompt - The prompt that should be used to generate the image.\n@param n - Number of images to generate. Default: 1.\n@param size - Size of the images to generate. Must have the format `{width}x{height}`.\n@param aspectRatio - Aspect ratio of the images to generate. Must have the format `{width}:{height}`.\n@param seed - Seed for the image generation.\n@param providerOptions - Additional provider-specific options that are passed through to the provider\nas body parameters.\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@returns A result object that contains the generated images.\n */\nexport async function generateImage({\n  model,\n  prompt,\n  n = 1,\n  size,\n  aspectRatio,\n  seed,\n  providerOptions,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n}: {\n  /**\nThe image model to use.\n     */\n  model: ImageModelV1;\n\n  /**\nThe prompt that should be used to generate the image.\n   */\n  prompt: string;\n\n  /**\nNumber of images to generate.\n   */\n  n?: number;\n\n  /**\nSize of the images to generate. Must have the format `{width}x{height}`. If not provided, the default size will be used.\n   */\n  size?: `${number}x${number}`;\n\n  /**\nAspect ratio of the images to generate. Must have the format `{width}:{height}`. If not provided, the default aspect ratio will be used.\n   */\n  aspectRatio?: `${number}:${number}`;\n\n  /**\nSeed for the image generation. If not provided, the default seed will be used.\n   */\n  seed?: number;\n\n  /**\nAdditional provider-specific options that are passed through to the provider\nas body parameters.\n\nThe outer record is keyed by the provider name, and the inner\nrecord is keyed by the provider-specific metadata key.\n```ts\n{\n  \"openai\": {\n    \"style\": \"vivid\"\n  }\n}\n```\n     */\n  providerOptions?: Record<string, Record<string, JSONValue>>;\n\n  /**\nMaximum number of retries per embedding model call. Set to 0 to disable retries.\n\n@default 2\n   */\n  maxRetries?: number;\n\n  /**\nAbort signal.\n */\n  abortSignal?: AbortSignal;\n\n  /**\nAdditional headers to include in the request.\nOnly applicable for HTTP-based providers.\n */\n  headers?: Record<string, string>;\n}): Promise<GenerateImageResult> {\n  const { retry } = prepareRetries({ maxRetries: maxRetriesArg });\n\n  // default to 1 if the model has not specified limits on\n  // how many images can be generated in a single call\n  const maxImagesPerCall = model.maxImagesPerCall ?? 1;\n\n  // parallelize calls to the model:\n  const callCount = Math.ceil(n / maxImagesPerCall);\n  const callImageCounts = Array.from({ length: callCount }, (_, i) => {\n    if (i < callCount - 1) {\n      return maxImagesPerCall;\n    }\n\n    const remainder = n % maxImagesPerCall;\n    return remainder === 0 ? maxImagesPerCall : remainder;\n  });\n  const results = await Promise.all(\n    callImageCounts.map(async callImageCount =>\n      retry(() =>\n        model.doGenerate({\n          prompt,\n          n: callImageCount,\n          abortSignal,\n          headers,\n          size,\n          aspectRatio,\n          seed,\n          providerOptions: providerOptions ?? {},\n        }),\n      ),\n    ),\n  );\n\n  // collect result images, warnings, and response metadata\n  const images: Array<DefaultGeneratedFile> = [];\n  const warnings: Array<ImageGenerationWarning> = [];\n  const responses: Array<ImageModelResponseMetadata> = [];\n  for (const result of results) {\n    images.push(\n      ...result.images.map(\n        image =>\n          new DefaultGeneratedFile({\n            data: image,\n            mimeType: detectImageMimeType(image) ?? 'image/png',\n          }),\n      ),\n    );\n    warnings.push(...result.warnings);\n    responses.push(result.response);\n  }\n\n  if (!images.length) {\n    throw new NoImageGeneratedError({ responses });\n  }\n\n  return new DefaultGenerateImageResult({ images, warnings, responses });\n}\n\nclass DefaultGenerateImageResult implements GenerateImageResult {\n  readonly images: Array<GeneratedFile>;\n  readonly warnings: Array<ImageGenerationWarning>;\n  readonly responses: Array<ImageModelResponseMetadata>;\n\n  constructor(options: {\n    images: Array<GeneratedFile>;\n    warnings: Array<ImageGenerationWarning>;\n    responses: Array<ImageModelResponseMetadata>;\n  }) {\n    this.images = options.images;\n    this.warnings = options.warnings;\n    this.responses = options.responses;\n  }\n\n  get image() {\n    return this.images[0];\n  }\n}\n", "import {\n  JSONParseError,\n  JSONValue,\n  TypeValidationError,\n} from '@ai-sdk/provider';\nimport { createIdGenerator, safeParseJSON } from '@ai-sdk/provider-utils';\nimport { Schema } from '@ai-sdk/ui-utils';\nimport { z } from 'zod';\nimport { NoObjectGeneratedError } from '../../errors/no-object-generated-error';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { prepareRetries } from '../prompt/prepare-retries';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport {\n  CallWarning,\n  FinishReason,\n  LanguageModel,\n  LogProbs,\n  ProviderMetadata,\n} from '../types';\nimport { LanguageModelRequestMetadata } from '../types/language-model-request-metadata';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { ProviderOptions } from '../types/provider-metadata';\nimport { calculateLanguageModelUsage } from '../types/usage';\nimport { prepareResponseHeaders } from '../util/prepare-response-headers';\nimport { GenerateObjectResult } from './generate-object-result';\nimport { injectJsonInstruction } from './inject-json-instruction';\nimport { getOutputStrategy } from './output-strategy';\nimport { validateObjectGenerationInput } from './validate-object-generation-input';\n\nconst originalGenerateId = createIdGenerator({ prefix: 'aiobj', size: 24 });\n\n/**\nA function that attempts to repair the raw output of the mode\nto enable JSON parsing.\n\nShould return the repaired text or null if the text cannot be repaired.\n     */\nexport type RepairTextFunction = (options: {\n  text: string;\n  error: JSONParseError | TypeValidationError;\n}) => Promise<string | null>;\n\n/**\nGenerate a structured, typed object for a given prompt and schema using a language model.\n\nThis function does not stream the output. If you want to stream the output, use `streamObject` instead.\n\n@returns\nA result object that contains the generated object, the finish reason, the token usage, and additional information.\n */\nexport async function generateObject<OBJECT>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output?: 'object' | undefined;\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe schema of the object that the model should generate.\n     */\n      schema: z.Schema<OBJECT, z.ZodTypeDef, any> | Schema<OBJECT>;\n\n      /**\nOptional name of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n     */\n      schemaName?: string;\n\n      /**\nOptional description of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n     */\n      schemaDescription?: string;\n\n      /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n     */\n      mode?: 'auto' | 'json' | 'tool';\n\n      /**\nA function that attempts to repair the raw output of the mode\nto enable JSON parsing.\n     */\n      experimental_repairText?: RepairTextFunction;\n\n      /**\nOptional telemetry configuration (experimental).\n       */\n\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n      };\n    },\n): Promise<GenerateObjectResult<OBJECT>>;\n/**\nGenerate an array with structured, typed elements for a given prompt and element schema using a language model.\n\nThis function does not stream the output. If you want to stream the output, use `streamObject` instead.\n\n@return\nA result object that contains the generated object, the finish reason, the token usage, and additional information.\n */\nexport async function generateObject<ELEMENT>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output: 'array';\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe element schema of the array that the model should generate.\n */\n      schema: z.Schema<ELEMENT, z.ZodTypeDef, any> | Schema<ELEMENT>;\n\n      /**\nOptional name of the array that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n     */\n      schemaName?: string;\n\n      /**\nOptional description of the array that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n */\n      schemaDescription?: string;\n\n      /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n     */\n      mode?: 'auto' | 'json' | 'tool';\n\n      /**\nA function that attempts to repair the raw output of the mode\nto enable JSON parsing.\n     */\n      experimental_repairText?: RepairTextFunction;\n\n      /**\nOptional telemetry configuration (experimental).\n     */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n      };\n    },\n): Promise<GenerateObjectResult<Array<ELEMENT>>>;\n/**\nGenerate a value from an enum (limited list of string values) using a language model.\n\nThis function does not stream the output.\n\n@return\nA result object that contains the generated value, the finish reason, the token usage, and additional information.\n */\nexport async function generateObject<ENUM extends string>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output: 'enum';\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe enum values that the model should use.\n     */\n      enum: Array<ENUM>;\n\n      /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n     */\n      mode?: 'auto' | 'json' | 'tool';\n\n      /**\nA function that attempts to repair the raw output of the mode\nto enable JSON parsing.\n     */\n      experimental_repairText?: RepairTextFunction;\n\n      /**\nOptional telemetry configuration (experimental).\n     */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n      };\n    },\n): Promise<GenerateObjectResult<ENUM>>;\n/**\nGenerate JSON with any schema for a given prompt using a language model.\n\nThis function does not stream the output. If you want to stream the output, use `streamObject` instead.\n\n@returns\nA result object that contains the generated object, the finish reason, the token usage, and additional information.\n */\nexport async function generateObject(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output: 'no-schema';\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe mode to use for object generation. Must be \"json\" for no-schema output.\n     */\n      mode?: 'json';\n\n      /**\nA function that attempts to repair the raw output of the mode\nto enable JSON parsing.\n     */\n      experimental_repairText?: RepairTextFunction;\n\n      /**\nOptional telemetry configuration (experimental).\n       */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n      };\n    },\n): Promise<GenerateObjectResult<JSONValue>>;\nexport async function generateObject<SCHEMA, RESULT>({\n  model,\n  enum: enumValues, // rename bc enum is reserved by typescript\n  schema: inputSchema,\n  schemaName,\n  schemaDescription,\n  mode,\n  output = 'object',\n  system,\n  prompt,\n  messages,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  experimental_repairText: repairText,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata,\n  providerOptions = experimental_providerMetadata,\n  _internal: {\n    generateId = originalGenerateId,\n    currentDate = () => new Date(),\n  } = {},\n  ...settings\n}: Omit<CallSettings, 'stopSequences'> &\n  Prompt & {\n    /**\n     * The expected structure of the output.\n     *\n     * - 'object': Generate a single object that conforms to the schema.\n     * - 'array': Generate an array of objects that conform to the schema.\n     * - 'no-schema': Generate any JSON object. No schema is specified.\n     *\n     * Default is 'object' if not specified.\n     */\n    output?: 'object' | 'array' | 'enum' | 'no-schema';\n\n    model: LanguageModel;\n    enum?: Array<SCHEMA>;\n    schema?: z.Schema<SCHEMA, z.ZodTypeDef, any> | Schema<SCHEMA>;\n    schemaName?: string;\n    schemaDescription?: string;\n    mode?: 'auto' | 'json' | 'tool';\n    experimental_repairText?: RepairTextFunction;\n    experimental_telemetry?: TelemetrySettings;\n    experimental_providerMetadata?: ProviderMetadata;\n    providerOptions?: ProviderOptions;\n\n    /**\n     * Internal. For test use only. May change without notice.\n     */\n    _internal?: {\n      generateId?: () => string;\n      currentDate?: () => Date;\n    };\n  }): Promise<GenerateObjectResult<RESULT>> {\n  validateObjectGenerationInput({\n    output,\n    mode,\n    schema: inputSchema,\n    schemaName,\n    schemaDescription,\n    enumValues,\n  });\n\n  const { maxRetries, retry } = prepareRetries({ maxRetries: maxRetriesArg });\n\n  const outputStrategy = getOutputStrategy({\n    output,\n    schema: inputSchema,\n    enumValues,\n  });\n\n  // automatically set mode to 'json' for no-schema output\n  if (outputStrategy.type === 'no-schema' && mode === undefined) {\n    mode = 'json';\n  }\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { ...settings, maxRetries },\n  });\n\n  const tracer = getTracer(telemetry);\n\n  return recordSpan({\n    name: 'ai.generateObject',\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({\n          operationId: 'ai.generateObject',\n          telemetry,\n        }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        'ai.prompt': {\n          input: () => JSON.stringify({ system, prompt, messages }),\n        },\n        'ai.schema':\n          outputStrategy.jsonSchema != null\n            ? { input: () => JSON.stringify(outputStrategy.jsonSchema) }\n            : undefined,\n        'ai.schema.name': schemaName,\n        'ai.schema.description': schemaDescription,\n        'ai.settings.output': outputStrategy.type,\n        'ai.settings.mode': mode,\n      },\n    }),\n    tracer,\n    fn: async span => {\n      // use the default provider mode when the mode is set to 'auto' or unspecified\n      if (mode === 'auto' || mode == null) {\n        mode = model.defaultObjectGenerationMode;\n      }\n\n      let result: string;\n      let finishReason: FinishReason;\n      let usage: Parameters<typeof calculateLanguageModelUsage>[0];\n      let warnings: CallWarning[] | undefined;\n      let rawResponse:\n        | { headers?: Record<string, string>; body?: unknown }\n        | undefined;\n      let response: LanguageModelResponseMetadata;\n      let request: LanguageModelRequestMetadata;\n      let logprobs: LogProbs | undefined;\n      let resultProviderMetadata: ProviderMetadata | undefined;\n\n      switch (mode) {\n        case 'json': {\n          const standardizedPrompt = standardizePrompt({\n            prompt: {\n              system:\n                outputStrategy.jsonSchema == null\n                  ? injectJsonInstruction({ prompt: system })\n                  : model.supportsStructuredOutputs\n                    ? system\n                    : injectJsonInstruction({\n                        prompt: system,\n                        schema: outputStrategy.jsonSchema,\n                      }),\n              prompt,\n              messages,\n            },\n            tools: undefined,\n          });\n\n          const promptMessages = await convertToLanguageModelPrompt({\n            prompt: standardizedPrompt,\n            modelSupportsImageUrls: model.supportsImageUrls,\n            modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context\n          });\n\n          const generateResult = await retry(() =>\n            recordSpan({\n              name: 'ai.generateObject.doGenerate',\n              attributes: selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  ...assembleOperationName({\n                    operationId: 'ai.generateObject.doGenerate',\n                    telemetry,\n                  }),\n                  ...baseTelemetryAttributes,\n                  'ai.prompt.format': {\n                    input: () => standardizedPrompt.type,\n                  },\n                  'ai.prompt.messages': {\n                    input: () => JSON.stringify(promptMessages),\n                  },\n                  'ai.settings.mode': mode,\n\n                  // standardized gen-ai llm span attributes:\n                  'gen_ai.system': model.provider,\n                  'gen_ai.request.model': model.modelId,\n                  'gen_ai.request.frequency_penalty': settings.frequencyPenalty,\n                  'gen_ai.request.max_tokens': settings.maxTokens,\n                  'gen_ai.request.presence_penalty': settings.presencePenalty,\n                  'gen_ai.request.temperature': settings.temperature,\n                  'gen_ai.request.top_k': settings.topK,\n                  'gen_ai.request.top_p': settings.topP,\n                },\n              }),\n              tracer,\n              fn: async span => {\n                const result = await model.doGenerate({\n                  mode: {\n                    type: 'object-json',\n                    schema: outputStrategy.jsonSchema,\n                    name: schemaName,\n                    description: schemaDescription,\n                  },\n                  ...prepareCallSettings(settings),\n                  inputFormat: standardizedPrompt.type,\n                  prompt: promptMessages,\n                  providerMetadata: providerOptions,\n                  abortSignal,\n                  headers,\n                });\n\n                const responseData = {\n                  id: result.response?.id ?? generateId(),\n                  timestamp: result.response?.timestamp ?? currentDate(),\n                  modelId: result.response?.modelId ?? model.modelId,\n                };\n\n                if (result.text === undefined) {\n                  throw new NoObjectGeneratedError({\n                    message:\n                      'No object generated: the model did not return a response.',\n                    response: responseData,\n                    usage: calculateLanguageModelUsage(result.usage),\n                  });\n                }\n\n                // Add response information to the span:\n                span.setAttributes(\n                  selectTelemetryAttributes({\n                    telemetry,\n                    attributes: {\n                      'ai.response.finishReason': result.finishReason,\n                      'ai.response.object': { output: () => result.text },\n                      'ai.response.id': responseData.id,\n                      'ai.response.model': responseData.modelId,\n                      'ai.response.timestamp':\n                        responseData.timestamp.toISOString(),\n\n                      'ai.usage.promptTokens': result.usage.promptTokens,\n                      'ai.usage.completionTokens':\n                        result.usage.completionTokens,\n\n                      // standardized gen-ai llm span attributes:\n                      'gen_ai.response.finish_reasons': [result.finishReason],\n                      'gen_ai.response.id': responseData.id,\n                      'gen_ai.response.model': responseData.modelId,\n                      'gen_ai.usage.prompt_tokens': result.usage.promptTokens,\n                      'gen_ai.usage.completion_tokens':\n                        result.usage.completionTokens,\n                    },\n                  }),\n                );\n\n                return { ...result, objectText: result.text, responseData };\n              },\n            }),\n          );\n\n          result = generateResult.objectText;\n          finishReason = generateResult.finishReason;\n          usage = generateResult.usage;\n          warnings = generateResult.warnings;\n          rawResponse = generateResult.rawResponse;\n          logprobs = generateResult.logprobs;\n          resultProviderMetadata = generateResult.providerMetadata;\n          request = generateResult.request ?? {};\n          response = generateResult.responseData;\n\n          break;\n        }\n\n        case 'tool': {\n          const standardizedPrompt = standardizePrompt({\n            prompt: { system, prompt, messages },\n            tools: undefined,\n          });\n\n          const promptMessages = await convertToLanguageModelPrompt({\n            prompt: standardizedPrompt,\n            modelSupportsImageUrls: model.supportsImageUrls,\n            modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context,\n          });\n          const inputFormat = standardizedPrompt.type;\n\n          const generateResult = await retry(() =>\n            recordSpan({\n              name: 'ai.generateObject.doGenerate',\n              attributes: selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  ...assembleOperationName({\n                    operationId: 'ai.generateObject.doGenerate',\n                    telemetry,\n                  }),\n                  ...baseTelemetryAttributes,\n                  'ai.prompt.format': {\n                    input: () => inputFormat,\n                  },\n                  'ai.prompt.messages': {\n                    input: () => JSON.stringify(promptMessages),\n                  },\n                  'ai.settings.mode': mode,\n\n                  // standardized gen-ai llm span attributes:\n                  'gen_ai.system': model.provider,\n                  'gen_ai.request.model': model.modelId,\n                  'gen_ai.request.frequency_penalty': settings.frequencyPenalty,\n                  'gen_ai.request.max_tokens': settings.maxTokens,\n                  'gen_ai.request.presence_penalty': settings.presencePenalty,\n                  'gen_ai.request.temperature': settings.temperature,\n                  'gen_ai.request.top_k': settings.topK,\n                  'gen_ai.request.top_p': settings.topP,\n                },\n              }),\n              tracer,\n              fn: async span => {\n                const result = await model.doGenerate({\n                  mode: {\n                    type: 'object-tool',\n                    tool: {\n                      type: 'function',\n                      name: schemaName ?? 'json',\n                      description:\n                        schemaDescription ?? 'Respond with a JSON object.',\n                      parameters: outputStrategy.jsonSchema!,\n                    },\n                  },\n                  ...prepareCallSettings(settings),\n                  inputFormat,\n                  prompt: promptMessages,\n                  providerMetadata: providerOptions,\n                  abortSignal,\n                  headers,\n                });\n\n                const objectText = result.toolCalls?.[0]?.args;\n\n                const responseData = {\n                  id: result.response?.id ?? generateId(),\n                  timestamp: result.response?.timestamp ?? currentDate(),\n                  modelId: result.response?.modelId ?? model.modelId,\n                };\n\n                if (objectText === undefined) {\n                  throw new NoObjectGeneratedError({\n                    message: 'No object generated: the tool was not called.',\n                    response: responseData,\n                    usage: calculateLanguageModelUsage(result.usage),\n                  });\n                }\n\n                // Add response information to the span:\n                span.setAttributes(\n                  selectTelemetryAttributes({\n                    telemetry,\n                    attributes: {\n                      'ai.response.finishReason': result.finishReason,\n                      'ai.response.object': { output: () => objectText },\n                      'ai.response.id': responseData.id,\n                      'ai.response.model': responseData.modelId,\n                      'ai.response.timestamp':\n                        responseData.timestamp.toISOString(),\n\n                      'ai.usage.promptTokens': result.usage.promptTokens,\n                      'ai.usage.completionTokens':\n                        result.usage.completionTokens,\n\n                      // standardized gen-ai llm span attributes:\n                      'gen_ai.response.finish_reasons': [result.finishReason],\n                      'gen_ai.response.id': responseData.id,\n                      'gen_ai.response.model': responseData.modelId,\n                      'gen_ai.usage.input_tokens': result.usage.promptTokens,\n                      'gen_ai.usage.output_tokens':\n                        result.usage.completionTokens,\n                    },\n                  }),\n                );\n\n                return { ...result, objectText, responseData };\n              },\n            }),\n          );\n\n          result = generateResult.objectText;\n          finishReason = generateResult.finishReason;\n          usage = generateResult.usage;\n          warnings = generateResult.warnings;\n          rawResponse = generateResult.rawResponse;\n          logprobs = generateResult.logprobs;\n          resultProviderMetadata = generateResult.providerMetadata;\n          request = generateResult.request ?? {};\n          response = generateResult.responseData;\n\n          break;\n        }\n\n        case undefined: {\n          throw new Error(\n            'Model does not have a default object generation mode.',\n          );\n        }\n\n        default: {\n          const _exhaustiveCheck: never = mode;\n          throw new Error(`Unsupported mode: ${_exhaustiveCheck}`);\n        }\n      }\n\n      function processResult(result: string): RESULT {\n        const parseResult = safeParseJSON({ text: result });\n\n        if (!parseResult.success) {\n          throw new NoObjectGeneratedError({\n            message: 'No object generated: could not parse the response.',\n            cause: parseResult.error,\n            text: result,\n            response,\n            usage: calculateLanguageModelUsage(usage),\n          });\n        }\n\n        const validationResult = outputStrategy.validateFinalResult(\n          parseResult.value,\n          {\n            text: result,\n            response,\n            usage: calculateLanguageModelUsage(usage),\n          },\n        );\n\n        if (!validationResult.success) {\n          throw new NoObjectGeneratedError({\n            message: 'No object generated: response did not match schema.',\n            cause: validationResult.error,\n            text: result,\n            response,\n            usage: calculateLanguageModelUsage(usage),\n          });\n        }\n\n        return validationResult.value;\n      }\n\n      let object: RESULT;\n      try {\n        object = processResult(result);\n      } catch (error) {\n        if (\n          repairText != null &&\n          NoObjectGeneratedError.isInstance(error) &&\n          (JSONParseError.isInstance(error.cause) ||\n            TypeValidationError.isInstance(error.cause))\n        ) {\n          const repairedText = await repairText({\n            text: result,\n            error: error.cause,\n          });\n\n          if (repairedText === null) {\n            throw error;\n          }\n\n          object = processResult(repairedText);\n        } else {\n          throw error;\n        }\n      }\n\n      // Add response information to the span:\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            'ai.response.finishReason': finishReason,\n            'ai.response.object': {\n              output: () => JSON.stringify(object),\n            },\n\n            'ai.usage.promptTokens': usage.promptTokens,\n            'ai.usage.completionTokens': usage.completionTokens,\n          },\n        }),\n      );\n\n      return new DefaultGenerateObjectResult({\n        object,\n        finishReason,\n        usage: calculateLanguageModelUsage(usage),\n        warnings,\n        request,\n        response: {\n          ...response,\n          headers: rawResponse?.headers,\n          body: rawResponse?.body,\n        },\n        logprobs,\n        providerMetadata: resultProviderMetadata,\n      });\n    },\n  });\n}\n\nclass DefaultGenerateObjectResult<T> implements GenerateObjectResult<T> {\n  readonly object: GenerateObjectResult<T>['object'];\n  readonly finishReason: GenerateObjectResult<T>['finishReason'];\n  readonly usage: GenerateObjectResult<T>['usage'];\n  readonly warnings: GenerateObjectResult<T>['warnings'];\n  readonly logprobs: GenerateObjectResult<T>['logprobs'];\n  readonly experimental_providerMetadata: GenerateObjectResult<T>['experimental_providerMetadata'];\n  readonly providerMetadata: GenerateObjectResult<T>['providerMetadata'];\n  readonly response: GenerateObjectResult<T>['response'];\n  readonly request: GenerateObjectResult<T>['request'];\n\n  constructor(options: {\n    object: GenerateObjectResult<T>['object'];\n    finishReason: GenerateObjectResult<T>['finishReason'];\n    usage: GenerateObjectResult<T>['usage'];\n    warnings: GenerateObjectResult<T>['warnings'];\n    logprobs: GenerateObjectResult<T>['logprobs'];\n    providerMetadata: GenerateObjectResult<T>['providerMetadata'];\n    response: GenerateObjectResult<T>['response'];\n    request: GenerateObjectResult<T>['request'];\n  }) {\n    this.object = options.object;\n    this.finishReason = options.finishReason;\n    this.usage = options.usage;\n    this.warnings = options.warnings;\n    this.providerMetadata = options.providerMetadata;\n    this.experimental_providerMetadata = options.providerMetadata;\n    this.response = options.response;\n    this.request = options.request;\n    this.logprobs = options.logprobs;\n  }\n\n  toJsonResponse(init?: ResponseInit): Response {\n    return new Response(JSON.stringify(this.object), {\n      status: init?.status ?? 200,\n      headers: prepareResponseHeaders(init?.headers, {\n        contentType: 'application/json; charset=utf-8',\n      }),\n    });\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\nimport { LanguageModelResponseMetadata } from '../core/types/language-model-response-metadata';\nimport { LanguageModelUsage } from '../core/types/usage';\n\nconst name = 'AI_NoObjectGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when no object could be generated. This can have several causes:\n\n- The model failed to generate a response.\n- The model generated a response that could not be parsed.\n- The model generated a response that could not be validated against the schema.\n\nThe error contains the following properties:\n\n- `text`: The text that was generated by the model. This can be the raw text or the tool call text, depending on the model.\n */\nexport class NoObjectGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  /**\n  The text that was generated by the model. This can be the raw text or the tool call text, depending on the model.\n   */\n  readonly text: string | undefined;\n\n  /**\n  The response metadata.\n   */\n  readonly response: LanguageModelResponseMetadata | undefined;\n\n  /**\n  The usage of the model.\n   */\n  readonly usage: LanguageModelUsage | undefined;\n\n  constructor({\n    message = 'No object generated.',\n    cause,\n    text,\n    response,\n    usage,\n  }: {\n    message?: string;\n    cause?: Error;\n    text?: string;\n    response: LanguageModelResponseMetadata;\n    usage: LanguageModelUsage;\n  }) {\n    super({ name, message, cause });\n\n    this.text = text;\n    this.response = response;\n    this.usage = usage;\n  }\n\n  static isInstance(error: unknown): error is NoObjectGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n\nexport function verifyNoObjectGeneratedError(\n  error: unknown,\n  expected: {\n    message: string;\n    response: LanguageModelResponseMetadata;\n    usage: LanguageModelUsage;\n  },\n) {\n  expect(NoObjectGeneratedError.isInstance(error)).toBeTruthy();\n  const noObjectGeneratedError = error as NoObjectGeneratedError;\n  expect(noObjectGeneratedError.message).toStrictEqual(expected.message);\n  expect(noObjectGeneratedError.response).toStrictEqual(expected.response);\n  expect(noObjectGeneratedError.usage).toStrictEqual(expected.usage);\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_DownloadError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class DownloadError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly url: string;\n  readonly statusCode?: number;\n  readonly statusText?: string;\n\n  constructor({\n    url,\n    statusCode,\n    statusText,\n    cause,\n    message = cause == null\n      ? `Failed to download ${url}: ${statusCode} ${statusText}`\n      : `Failed to download ${url}: ${cause}`,\n  }: {\n    url: string;\n    statusCode?: number;\n    statusText?: string;\n    message?: string;\n    cause?: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.url = url;\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n  }\n\n  static isInstance(error: unknown): error is DownloadError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { DownloadError } from './download-error';\n\nexport async function download({\n  url,\n  fetchImplementation = fetch,\n}: {\n  url: URL;\n  fetchImplementation?: typeof fetch;\n}): Promise<{\n  data: Uint8Array;\n  mimeType: string | undefined;\n}> {\n  const urlText = url.toString();\n  try {\n    const response = await fetchImplementation(urlText);\n\n    if (!response.ok) {\n      throw new DownloadError({\n        url: urlText,\n        statusCode: response.status,\n        statusText: response.statusText,\n      });\n    }\n\n    return {\n      data: new Uint8Array(await response.arrayBuffer()),\n      mimeType: response.headers.get('content-type') ?? undefined,\n    };\n  } catch (error) {\n    if (DownloadError.isInstance(error)) {\n      throw error;\n    }\n\n    throw new DownloadError({ url: urlText, cause: error });\n  }\n}\n", "import {\n  convertBase64ToUint8Array,\n  convertUint8ArrayToBase64,\n} from '@ai-sdk/provider-utils';\nimport { InvalidDataContentError } from './invalid-data-content-error';\nimport { z } from 'zod';\n\n/**\nData content. Can either be a base64-encoded string, a Uint8Array, an ArrayBuffer, or a Buffer.\n */\nexport type DataContent = string | Uint8Array | ArrayBuffer | Buffer;\n\n/**\n@internal\n */\nexport const dataContentSchema: z.ZodType<DataContent> = z.union([\n  z.string(),\n  z.instanceof(Uint8Array),\n  z.instanceof(ArrayBuffer),\n  z.custom(\n    // Buffer might not be available in some environments such as CloudFlare:\n    (value: unknown): value is Buffer =>\n      globalThis.Buffer?.isBuffer(value) ?? false,\n    { message: 'Must be a Buffer' },\n  ),\n]);\n\n/**\nConverts data content to a base64-encoded string.\n\n@param content - Data content to convert.\n@returns Base64-encoded string.\n*/\nexport function convertDataContentToBase64String(content: DataContent): string {\n  if (typeof content === 'string') {\n    return content;\n  }\n\n  if (content instanceof ArrayBuffer) {\n    return convertUint8ArrayToBase64(new Uint8Array(content));\n  }\n\n  return convertUint8ArrayToBase64(content);\n}\n\n/**\nConverts data content to a Uint8Array.\n\n@param content - Data content to convert.\n@returns Uint8Array.\n */\nexport function convertDataContentToUint8Array(\n  content: DataContent,\n): Uint8Array {\n  if (content instanceof Uint8Array) {\n    return content;\n  }\n\n  if (typeof content === 'string') {\n    try {\n      return convertBase64ToUint8Array(content);\n    } catch (error) {\n      throw new InvalidDataContentError({\n        message:\n          'Invalid data content. Content string is not a base64-encoded media.',\n        content,\n        cause: error,\n      });\n    }\n  }\n\n  if (content instanceof ArrayBuffer) {\n    return new Uint8Array(content);\n  }\n\n  throw new InvalidDataContentError({ content });\n}\n\n/**\n * Converts a Uint8Array to a string of text.\n *\n * @param uint8Array - The Uint8Array to convert.\n * @returns The converted string.\n */\nexport function convertUint8ArrayToText(uint8Array: Uint8Array): string {\n  try {\n    return new TextDecoder().decode(uint8Array);\n  } catch (error) {\n    throw new Error('Error decoding Uint8Array to text');\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidDataContentError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidDataContentError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly content: unknown;\n\n  constructor({\n    content,\n    cause,\n    message = `Invalid data content. Expected a base64 string, Uint8Array, ArrayBuffer, or Buffer, but got ${typeof content}.`,\n  }: {\n    content: unknown;\n    cause?: unknown;\n    message?: string;\n  }) {\n    super({ name, message, cause });\n\n    this.content = content;\n  }\n\n  static isInstance(error: unknown): error is InvalidDataContentError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidMessageRoleError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidMessageRoleError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly role: string;\n\n  constructor({\n    role,\n    message = `Invalid message role: '${role}'. Must be one of: \"system\", \"user\", \"assistant\", \"tool\".`,\n  }: {\n    role: string;\n    message?: string;\n  }) {\n    super({ name, message });\n\n    this.role = role;\n  }\n\n  static isInstance(error: unknown): error is InvalidMessageRoleError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "export function splitDataUrl(dataUrl: string): {\n  mimeType: string | undefined;\n  base64Content: string | undefined;\n} {\n  try {\n    const [header, base64Content] = dataUrl.split(',');\n    return {\n      mimeType: header.split(';')[0].split(':')[1],\n      base64Content,\n    };\n  } catch (error) {\n    return {\n      mimeType: undefined,\n      base64Content: undefined,\n    };\n  }\n}\n", "import {\n  LanguageModelV1FilePart,\n  LanguageModelV1ImagePart,\n  LanguageModelV1Message,\n  LanguageModelV1Prompt,\n  LanguageModelV1TextPart,\n} from '@ai-sdk/provider';\nimport { download } from '../../util/download';\nimport { CoreMessage } from '../prompt/message';\nimport { detectImageMimeType } from '../util/detect-image-mimetype';\nimport { FilePart, ImagePart, TextPart } from './content-part';\nimport {\n  convertDataContentToBase64String,\n  convertDataContentToUint8Array,\n  DataContent,\n} from './data-content';\nimport { InvalidMessageRoleError } from './invalid-message-role-error';\nimport { splitDataUrl } from './split-data-url';\nimport { StandardizedPrompt } from './standardize-prompt';\nimport { convertUint8ArrayToBase64 } from '@ai-sdk/provider-utils';\n\nexport async function convertToLanguageModelPrompt({\n  prompt,\n  modelSupportsImageUrls = true,\n  modelSupportsUrl = () => false,\n  downloadImplementation = download,\n}: {\n  prompt: StandardizedPrompt;\n  modelSupportsImageUrls: boolean | undefined;\n  modelSupportsUrl: undefined | ((url: URL) => boolean);\n  downloadImplementation?: typeof download;\n}): Promise<LanguageModelV1Prompt> {\n  const downloadedAssets = await downloadAssets(\n    prompt.messages,\n    downloadImplementation,\n    modelSupportsImageUrls,\n    modelSupportsUrl,\n  );\n\n  return [\n    ...(prompt.system != null\n      ? [{ role: 'system' as const, content: prompt.system }]\n      : []),\n    ...prompt.messages.map(message =>\n      convertToLanguageModelMessage(message, downloadedAssets),\n    ),\n  ];\n}\n\n/**\n * Convert a CoreMessage to a LanguageModelV1Message.\n *\n * @param message The CoreMessage to convert.\n * @param downloadedAssets A map of URLs to their downloaded data. Only\n *   available if the model does not support URLs, null otherwise.\n */\nexport function convertToLanguageModelMessage(\n  message: CoreMessage,\n  downloadedAssets: Record<\n    string,\n    { mimeType: string | undefined; data: Uint8Array }\n  >,\n): LanguageModelV1Message {\n  const role = message.role;\n  switch (role) {\n    case 'system': {\n      return {\n        role: 'system',\n        content: message.content,\n        providerMetadata:\n          message.providerOptions ?? message.experimental_providerMetadata,\n      };\n    }\n\n    case 'user': {\n      if (typeof message.content === 'string') {\n        return {\n          role: 'user',\n          content: [{ type: 'text', text: message.content }],\n          providerMetadata:\n            message.providerOptions ?? message.experimental_providerMetadata,\n        };\n      }\n\n      return {\n        role: 'user',\n        content: message.content\n          .map(part => convertPartToLanguageModelPart(part, downloadedAssets))\n          // remove empty text parts:\n          .filter(part => part.type !== 'text' || part.text !== ''),\n        providerMetadata:\n          message.providerOptions ?? message.experimental_providerMetadata,\n      };\n    }\n\n    case 'assistant': {\n      if (typeof message.content === 'string') {\n        return {\n          role: 'assistant',\n          content: [{ type: 'text', text: message.content }],\n          providerMetadata:\n            message.providerOptions ?? message.experimental_providerMetadata,\n        };\n      }\n\n      return {\n        role: 'assistant',\n        content: message.content\n          .filter(\n            // remove empty text parts:\n            part => part.type !== 'text' || part.text !== '',\n          )\n          .map(part => {\n            const providerOptions =\n              part.providerOptions ?? part.experimental_providerMetadata;\n\n            switch (part.type) {\n              case 'file': {\n                return {\n                  type: 'file',\n                  data:\n                    part.data instanceof URL\n                      ? part.data\n                      : convertDataContentToBase64String(part.data),\n                  filename: part.filename,\n                  mimeType: part.mimeType,\n                  providerMetadata: providerOptions,\n                };\n              }\n              case 'reasoning': {\n                return {\n                  type: 'reasoning',\n                  text: part.text,\n                  signature: part.signature,\n                  providerMetadata: providerOptions,\n                };\n              }\n              case 'redacted-reasoning': {\n                return {\n                  type: 'redacted-reasoning',\n                  data: part.data,\n                  providerMetadata: providerOptions,\n                };\n              }\n              case 'text': {\n                return {\n                  type: 'text' as const,\n                  text: part.text,\n                  providerMetadata: providerOptions,\n                };\n              }\n              case 'tool-call': {\n                return {\n                  type: 'tool-call' as const,\n                  toolCallId: part.toolCallId,\n                  toolName: part.toolName,\n                  args: part.args,\n                  providerMetadata: providerOptions,\n                };\n              }\n            }\n          }),\n        providerMetadata:\n          message.providerOptions ?? message.experimental_providerMetadata,\n      };\n    }\n\n    case 'tool': {\n      return {\n        role: 'tool',\n        content: message.content.map(part => ({\n          type: 'tool-result',\n          toolCallId: part.toolCallId,\n          toolName: part.toolName,\n          result: part.result,\n          content: part.experimental_content,\n          isError: part.isError,\n          providerMetadata:\n            part.providerOptions ?? part.experimental_providerMetadata,\n        })),\n        providerMetadata:\n          message.providerOptions ?? message.experimental_providerMetadata,\n      };\n    }\n\n    default: {\n      const _exhaustiveCheck: never = role;\n      throw new InvalidMessageRoleError({ role: _exhaustiveCheck });\n    }\n  }\n}\n\n/**\n * Downloads images and files from URLs in the messages.\n */\nasync function downloadAssets(\n  messages: CoreMessage[],\n  downloadImplementation: typeof download,\n  modelSupportsImageUrls: boolean | undefined,\n  modelSupportsUrl: (url: URL) => boolean,\n): Promise<Record<string, { mimeType: string | undefined; data: Uint8Array }>> {\n  const urls = messages\n    .filter(message => message.role === 'user')\n    .map(message => message.content)\n    .filter((content): content is Array<TextPart | ImagePart | FilePart> =>\n      Array.isArray(content),\n    )\n    .flat()\n    .filter(\n      (part): part is ImagePart | FilePart =>\n        part.type === 'image' || part.type === 'file',\n    )\n    /**\n     * Filter out image parts if the model supports image URLs, before letting it\n     * decide if it supports a particular URL.\n     */\n    .filter(\n      (part): part is ImagePart | FilePart =>\n        !(part.type === 'image' && modelSupportsImageUrls === true),\n    )\n    .map(part => (part.type === 'image' ? part.image : part.data))\n    .map(part =>\n      // support string urls:\n      typeof part === 'string' &&\n      (part.startsWith('http:') || part.startsWith('https:'))\n        ? new URL(part)\n        : part,\n    )\n    .filter((image): image is URL => image instanceof URL)\n    /**\n     * Filter out URLs that the model supports natively, so we don't download them.\n     */\n    .filter(url => !modelSupportsUrl(url));\n\n  // download in parallel:\n  const downloadedImages = await Promise.all(\n    urls.map(async url => ({\n      url,\n      data: await downloadImplementation({ url }),\n    })),\n  );\n\n  return Object.fromEntries(\n    downloadedImages.map(({ url, data }) => [url.toString(), data]),\n  );\n}\n\n/**\n * Convert part of a message to a LanguageModelV1Part.\n * @param part The part to convert.\n * @param downloadedAssets A map of URLs to their downloaded data. Only\n *  available if the model does not support URLs, null otherwise.\n *\n * @returns The converted part.\n */\nfunction convertPartToLanguageModelPart(\n  part: TextPart | ImagePart | FilePart,\n  downloadedAssets: Record<\n    string,\n    { mimeType: string | undefined; data: Uint8Array }\n  >,\n):\n  | LanguageModelV1TextPart\n  | LanguageModelV1ImagePart\n  | LanguageModelV1FilePart {\n  if (part.type === 'text') {\n    return {\n      type: 'text',\n      text: part.text,\n      providerMetadata:\n        part.providerOptions ?? part.experimental_providerMetadata,\n    };\n  }\n\n  let mimeType: string | undefined = part.mimeType;\n  let data: DataContent | URL;\n  let content: URL | ArrayBuffer | string;\n  let normalizedData: Uint8Array | URL;\n\n  const type = part.type;\n  switch (type) {\n    case 'image':\n      data = part.image;\n      break;\n    case 'file':\n      data = part.data;\n      break;\n    default:\n      throw new Error(`Unsupported part type: ${type}`);\n  }\n\n  // Attempt to create a URL from the data. If it fails, we can assume the data\n  // is not a URL and likely some other sort of data.\n  try {\n    content = typeof data === 'string' ? new URL(data) : data;\n  } catch (error) {\n    content = data;\n  }\n\n  // If we successfully created a URL, we can use that to normalize the data\n  // either by passing it through or converting normalizing the base64 content\n  // to a Uint8Array.\n  if (content instanceof URL) {\n    // If the content is a data URL, we want to convert that to a Uint8Array\n    if (content.protocol === 'data:') {\n      const { mimeType: dataUrlMimeType, base64Content } = splitDataUrl(\n        content.toString(),\n      );\n\n      if (dataUrlMimeType == null || base64Content == null) {\n        throw new Error(`Invalid data URL format in part ${type}`);\n      }\n\n      mimeType = dataUrlMimeType;\n      normalizedData = convertDataContentToUint8Array(base64Content);\n    } else {\n      /**\n       * If the content is a URL, we should first see if it was downloaded. And if not,\n       * we can let the model decide if it wants to support the URL. This also allows\n       * for non-HTTP URLs to be passed through (e.g. gs://).\n       */\n      const downloadedFile = downloadedAssets[content.toString()];\n      if (downloadedFile) {\n        normalizedData = downloadedFile.data;\n        mimeType ??= downloadedFile.mimeType;\n      } else {\n        normalizedData = content;\n      }\n    }\n  } else {\n    // Since we know now the content is not a URL, we can attempt to normalize\n    // the data assuming it is some sort of data.\n    normalizedData = convertDataContentToUint8Array(content);\n  }\n\n  // Now that we have the normalized data either as a URL or a Uint8Array,\n  // we can create the LanguageModelV1Part.\n  switch (type) {\n    case 'image': {\n      // When possible, try to detect the mimetype automatically\n      // to deal with incorrect mimetype inputs.\n      // When detection fails, use provided mimetype.\n\n      if (normalizedData instanceof Uint8Array) {\n        mimeType = detectImageMimeType(normalizedData) ?? mimeType;\n      }\n      return {\n        type: 'image',\n        image: normalizedData,\n        mimeType,\n        providerMetadata:\n          part.providerOptions ?? part.experimental_providerMetadata,\n      };\n    }\n\n    case 'file': {\n      // We should have a mimeType at this point, if not, throw an error.\n      if (mimeType == null) {\n        throw new Error(`Mime type is missing for file part`);\n      }\n\n      return {\n        type: 'file',\n        data:\n          normalizedData instanceof Uint8Array\n            ? convertDataContentToBase64String(normalizedData)\n            : normalizedData,\n        filename: part.filename,\n        mimeType,\n        providerMetadata:\n          part.providerOptions ?? part.experimental_providerMetadata,\n      };\n    }\n  }\n}\n", "import { InvalidArgumentError } from '../../errors/invalid-argument-error';\nimport { CallSettings } from './call-settings';\n\n/**\n * Validates call settings and sets default values.\n */\nexport function prepareCallSettings({\n  maxTokens,\n  temperature,\n  topP,\n  topK,\n  presencePenalty,\n  frequencyPenalty,\n  stopSequences,\n  seed,\n}: Omit<CallSettings, 'abortSignal' | 'headers' | 'maxRetries'>): Omit<\n  CallSettings,\n  'abortSignal' | 'headers' | 'maxRetries'\n> {\n  if (maxTokens != null) {\n    if (!Number.isInteger(maxTokens)) {\n      throw new InvalidArgumentError({\n        parameter: 'maxTokens',\n        value: maxTokens,\n        message: 'maxTokens must be an integer',\n      });\n    }\n\n    if (maxTokens < 1) {\n      throw new InvalidArgumentError({\n        parameter: 'maxTokens',\n        value: maxTokens,\n        message: 'maxTokens must be >= 1',\n      });\n    }\n  }\n\n  if (temperature != null) {\n    if (typeof temperature !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'temperature',\n        value: temperature,\n        message: 'temperature must be a number',\n      });\n    }\n  }\n\n  if (topP != null) {\n    if (typeof topP !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'topP',\n        value: topP,\n        message: 'topP must be a number',\n      });\n    }\n  }\n\n  if (topK != null) {\n    if (typeof topK !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'topK',\n        value: topK,\n        message: 'topK must be a number',\n      });\n    }\n  }\n\n  if (presencePenalty != null) {\n    if (typeof presencePenalty !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'presencePenalty',\n        value: presencePenalty,\n        message: 'presencePenalty must be a number',\n      });\n    }\n  }\n\n  if (frequencyPenalty != null) {\n    if (typeof frequencyPenalty !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'frequencyPenalty',\n        value: frequencyPenalty,\n        message: 'frequencyPenalty must be a number',\n      });\n    }\n  }\n\n  if (seed != null) {\n    if (!Number.isInteger(seed)) {\n      throw new InvalidArgumentError({\n        parameter: 'seed',\n        value: seed,\n        message: 'seed must be an integer',\n      });\n    }\n  }\n\n  return {\n    maxTokens,\n    // TODO v5 remove default 0 for temperature\n    temperature: temperature ?? 0,\n    topP,\n    topK,\n    presencePenalty,\n    frequencyPenalty,\n    stopSequences:\n      stopSequences != null && stopSequences.length > 0\n        ? stopSequences\n        : undefined,\n    seed,\n  };\n}\n", "import { InvalidPromptError } from '@ai-sdk/provider';\nimport { safeValidateTypes } from '@ai-sdk/provider-utils';\nimport { Message } from '@ai-sdk/ui-utils';\nimport { z } from 'zod';\nimport { ToolSet } from '../generate-text/tool-set';\nimport { convertToCoreMessages } from './convert-to-core-messages';\nimport { detectPromptType } from './detect-prompt-type';\nimport { CoreMessage, coreMessageSchema } from './message';\nimport { Prompt } from './prompt';\n\nexport type StandardizedPrompt = {\n  /**\n   * Original prompt type. This is forwarded to the providers and can be used\n   * to write send raw text to providers that support it.\n   */\n  type: 'prompt' | 'messages';\n\n  /**\n   * System message.\n   */\n  system?: string;\n\n  /**\n   * Messages.\n   */\n  messages: CoreMessage[];\n};\n\nexport function standardizePrompt<TOOLS extends ToolSet>({\n  prompt,\n  tools,\n}: {\n  prompt: Prompt;\n  tools: undefined | TOOLS;\n}): StandardizedPrompt {\n  if (prompt.prompt == null && prompt.messages == null) {\n    throw new InvalidPromptError({\n      prompt,\n      message: 'prompt or messages must be defined',\n    });\n  }\n\n  if (prompt.prompt != null && prompt.messages != null) {\n    throw new InvalidPromptError({\n      prompt,\n      message: 'prompt and messages cannot be defined at the same time',\n    });\n  }\n\n  // validate that system is a string\n  if (prompt.system != null && typeof prompt.system !== 'string') {\n    throw new InvalidPromptError({\n      prompt,\n      message: 'system must be a string',\n    });\n  }\n\n  // type: prompt\n  if (prompt.prompt != null) {\n    // validate that prompt is a string\n    if (typeof prompt.prompt !== 'string') {\n      throw new InvalidPromptError({\n        prompt,\n        message: 'prompt must be a string',\n      });\n    }\n\n    return {\n      type: 'prompt',\n      system: prompt.system,\n      messages: [\n        {\n          role: 'user',\n          content: prompt.prompt,\n        },\n      ],\n    };\n  }\n\n  // type: messages\n  if (prompt.messages != null) {\n    const promptType = detectPromptType(prompt.messages);\n\n    if (promptType === 'other') {\n      throw new InvalidPromptError({\n        prompt,\n        message: 'messages must be an array of CoreMessage or UIMessage',\n      });\n    }\n\n    const messages: CoreMessage[] =\n      promptType === 'ui-messages'\n        ? convertToCoreMessages(prompt.messages as Omit<Message, 'id'>[], {\n            tools,\n          })\n        : (prompt.messages as CoreMessage[]);\n\n    const validationResult = safeValidateTypes({\n      value: messages,\n      schema: z.array(coreMessageSchema),\n    });\n\n    if (!validationResult.success) {\n      throw new InvalidPromptError({\n        prompt,\n        message: 'messages must be an array of CoreMessage or UIMessage',\n        cause: validationResult.error,\n      });\n    }\n\n    return {\n      type: 'messages',\n      messages,\n      system: prompt.system,\n    };\n  }\n\n  throw new Error('unreachable');\n}\n", "import { Attachment } from '@ai-sdk/ui-utils';\nimport { FilePart, ImagePart, TextPart } from './content-part';\nimport {\n  convertDataContentToUint8Array,\n  convertUint8ArrayToText,\n} from './data-content';\n\ntype ContentPart = TextPart | ImagePart | FilePart;\n\n/**\n * Converts a list of attachments to a list of content parts\n * for consumption by `ai/core` functions.\n * Currently only supports images and text attachments.\n */\nexport function attachmentsToParts(attachments: Attachment[]): ContentPart[] {\n  const parts: ContentPart[] = [];\n\n  for (const attachment of attachments) {\n    let url;\n\n    try {\n      url = new URL(attachment.url);\n    } catch (error) {\n      throw new Error(`Invalid URL: ${attachment.url}`);\n    }\n\n    switch (url.protocol) {\n      case 'http:':\n      case 'https:': {\n        if (attachment.contentType?.startsWith('image/')) {\n          parts.push({ type: 'image', image: url });\n        } else {\n          if (!attachment.contentType) {\n            throw new Error(\n              'If the attachment is not an image, it must specify a content type',\n            );\n          }\n\n          parts.push({\n            type: 'file',\n            data: url,\n            mimeType: attachment.contentType,\n          });\n        }\n        break;\n      }\n\n      case 'data:': {\n        let header;\n        let base64Content;\n        let mimeType;\n\n        try {\n          [header, base64Content] = attachment.url.split(',');\n          mimeType = header.split(';')[0].split(':')[1];\n        } catch (error) {\n          throw new Error(`Error processing data URL: ${attachment.url}`);\n        }\n\n        if (mimeType == null || base64Content == null) {\n          throw new Error(`Invalid data URL format: ${attachment.url}`);\n        }\n\n        if (attachment.contentType?.startsWith('image/')) {\n          parts.push({\n            type: 'image',\n            image: convertDataContentToUint8Array(base64Content),\n          });\n        } else if (attachment.contentType?.startsWith('text/')) {\n          parts.push({\n            type: 'text',\n            text: convertUint8ArrayToText(\n              convertDataContentToUint8Array(base64Content),\n            ),\n          });\n        } else {\n          if (!attachment.contentType) {\n            throw new Error(\n              'If the attachment is not an image or text, it must specify a content type',\n            );\n          }\n\n          parts.push({\n            type: 'file',\n            data: base64Content,\n            mimeType: attachment.contentType,\n          });\n        }\n\n        break;\n      }\n\n      default: {\n        throw new Error(`Unsupported URL protocol: ${url.protocol}`);\n      }\n    }\n  }\n\n  return parts;\n}\n", "import { AISDKError } from '@ai-sdk/provider';\nimport { Message } from '@ai-sdk/ui-utils';\n\nconst name = 'AI_MessageConversionError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class MessageConversionError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly originalMessage: Omit<Message, 'id'>;\n\n  constructor({\n    originalMessage,\n    message,\n  }: {\n    originalMessage: Omit<Message, 'id'>;\n    message: string;\n  }) {\n    super({ name, message });\n\n    this.originalMessage = originalMessage;\n  }\n\n  static isInstance(error: unknown): error is MessageConversionError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import {\n  FileUIPart,\n  Message,\n  ReasoningUIPart,\n  TextUIPart,\n  ToolInvocationUIPart,\n} from '@ai-sdk/ui-utils';\nimport { ToolSet } from '../generate-text/tool-set';\nimport {\n  AssistantContent,\n  CoreMessage,\n  ToolCallPart,\n  ToolResultPart,\n} from '../prompt';\nimport { attachmentsToParts } from './attachments-to-parts';\nimport { MessageConversionError } from './message-conversion-error';\n\n/**\nConverts an array of messages from useChat into an array of CoreMessages that can be used\nwith the AI core functions (e.g. `streamText`).\n */\nexport function convertToCoreMessages<TOOLS extends ToolSet = never>(\n  messages: Array<Omit<Message, 'id'>>,\n  options?: { tools?: TOOLS },\n) {\n  const tools = options?.tools ?? ({} as TOOLS);\n  const coreMessages: CoreMessage[] = [];\n\n  for (let i = 0; i < messages.length; i++) {\n    const message = messages[i];\n    const isLastMessage = i === messages.length - 1;\n    const { role, content, experimental_attachments } = message;\n\n    switch (role) {\n      case 'system': {\n        coreMessages.push({\n          role: 'system',\n          content,\n        });\n        break;\n      }\n\n      case 'user': {\n        coreMessages.push({\n          role: 'user',\n          content: experimental_attachments\n            ? [\n                { type: 'text', text: content },\n                ...attachmentsToParts(experimental_attachments),\n              ]\n            : content,\n        });\n        break;\n      }\n\n      case 'assistant': {\n        if (message.parts != null) {\n          let currentStep = 0;\n          let blockHasToolInvocations = false;\n          let block: Array<\n            TextUIPart | ToolInvocationUIPart | ReasoningUIPart | FileUIPart\n          > = [];\n\n          function processBlock() {\n            const content: AssistantContent = [];\n\n            for (const part of block) {\n              switch (part.type) {\n                case 'file':\n                case 'text': {\n                  content.push(part);\n                  break;\n                }\n                case 'reasoning': {\n                  for (const detail of part.details) {\n                    switch (detail.type) {\n                      case 'text':\n                        content.push({\n                          type: 'reasoning' as const,\n                          text: detail.text,\n                          signature: detail.signature,\n                        });\n                        break;\n                      case 'redacted':\n                        content.push({\n                          type: 'redacted-reasoning' as const,\n                          data: detail.data,\n                        });\n                        break;\n                    }\n                  }\n                  break;\n                }\n                case 'tool-invocation':\n                  content.push({\n                    type: 'tool-call' as const,\n                    toolCallId: part.toolInvocation.toolCallId,\n                    toolName: part.toolInvocation.toolName,\n                    args: part.toolInvocation.args,\n                  });\n                  break;\n                default: {\n                  const _exhaustiveCheck: never = part;\n                  throw new Error(`Unsupported part: ${_exhaustiveCheck}`);\n                }\n              }\n            }\n\n            coreMessages.push({\n              role: 'assistant',\n              content,\n            });\n\n            // check if there are tool invocations with results in the block\n            const stepInvocations = block\n              .filter(\n                (\n                  part:\n                    | TextUIPart\n                    | ToolInvocationUIPart\n                    | ReasoningUIPart\n                    | FileUIPart,\n                ): part is ToolInvocationUIPart =>\n                  part.type === 'tool-invocation',\n              )\n              .map(part => part.toolInvocation);\n\n            // tool message with tool results\n            if (stepInvocations.length > 0) {\n              coreMessages.push({\n                role: 'tool',\n                content: stepInvocations.map(\n                  (toolInvocation): ToolResultPart => {\n                    if (!('result' in toolInvocation)) {\n                      throw new MessageConversionError({\n                        originalMessage: message,\n                        message:\n                          'ToolInvocation must have a result: ' +\n                          JSON.stringify(toolInvocation),\n                      });\n                    }\n\n                    const { toolCallId, toolName, result } = toolInvocation;\n\n                    const tool = tools[toolName];\n                    return tool?.experimental_toToolResultContent != null\n                      ? {\n                          type: 'tool-result',\n                          toolCallId,\n                          toolName,\n                          result: tool.experimental_toToolResultContent(result),\n                          experimental_content:\n                            tool.experimental_toToolResultContent(result),\n                        }\n                      : {\n                          type: 'tool-result',\n                          toolCallId,\n                          toolName,\n                          result,\n                        };\n                  },\n                ),\n              });\n            }\n\n            // updates for next block\n            block = [];\n            blockHasToolInvocations = false;\n            currentStep++;\n          }\n\n          for (const part of message.parts) {\n            switch (part.type) {\n              case 'text': {\n                if (blockHasToolInvocations) {\n                  processBlock(); // text must come before tool invocations\n                }\n                block.push(part);\n                break;\n              }\n              case 'file':\n              case 'reasoning': {\n                block.push(part);\n                break;\n              }\n              case 'tool-invocation': {\n                if ((part.toolInvocation.step ?? 0) !== currentStep) {\n                  processBlock();\n                }\n                block.push(part);\n                blockHasToolInvocations = true;\n                break;\n              }\n            }\n          }\n\n          processBlock();\n\n          break;\n        }\n\n        const toolInvocations = message.toolInvocations;\n\n        if (toolInvocations == null || toolInvocations.length === 0) {\n          coreMessages.push({ role: 'assistant', content });\n          break;\n        }\n\n        const maxStep = toolInvocations.reduce((max, toolInvocation) => {\n          return Math.max(max, toolInvocation.step ?? 0);\n        }, 0);\n\n        for (let i = 0; i <= maxStep; i++) {\n          const stepInvocations = toolInvocations.filter(\n            toolInvocation => (toolInvocation.step ?? 0) === i,\n          );\n\n          if (stepInvocations.length === 0) {\n            continue;\n          }\n\n          // assistant message with tool calls\n          coreMessages.push({\n            role: 'assistant',\n            content: [\n              ...(isLastMessage && content && i === 0\n                ? [{ type: 'text' as const, text: content }]\n                : []),\n              ...stepInvocations.map(\n                ({ toolCallId, toolName, args }): ToolCallPart => ({\n                  type: 'tool-call' as const,\n                  toolCallId,\n                  toolName,\n                  args,\n                }),\n              ),\n            ],\n          });\n\n          // tool message with tool results\n          coreMessages.push({\n            role: 'tool',\n            content: stepInvocations.map((toolInvocation): ToolResultPart => {\n              if (!('result' in toolInvocation)) {\n                throw new MessageConversionError({\n                  originalMessage: message,\n                  message:\n                    'ToolInvocation must have a result: ' +\n                    JSON.stringify(toolInvocation),\n                });\n              }\n\n              const { toolCallId, toolName, result } = toolInvocation;\n\n              const tool = tools[toolName];\n              return tool?.experimental_toToolResultContent != null\n                ? {\n                    type: 'tool-result',\n                    toolCallId,\n                    toolName,\n                    result: tool.experimental_toToolResultContent(result),\n                    experimental_content:\n                      tool.experimental_toToolResultContent(result),\n                  }\n                : {\n                    type: 'tool-result',\n                    toolCallId,\n                    toolName,\n                    result,\n                  };\n            }),\n          });\n        }\n\n        if (content && !isLastMessage) {\n          coreMessages.push({ role: 'assistant', content });\n        }\n\n        break;\n      }\n\n      case 'data': {\n        // ignore\n        break;\n      }\n\n      default: {\n        const _exhaustiveCheck: never = role;\n        throw new MessageConversionError({\n          originalMessage: message,\n          message: `Unsupported role: ${_exhaustiveCheck}`,\n        });\n      }\n    }\n  }\n\n  return coreMessages;\n}\n", "export function detectPromptType(\n  prompt: Array<any>,\n): 'ui-messages' | 'messages' | 'other' {\n  if (!Array.isArray(prompt)) {\n    return 'other';\n  }\n\n  if (prompt.length === 0) {\n    return 'messages';\n  }\n\n  const characteristics = prompt.map(detectSingleMessageCharacteristics);\n\n  if (characteristics.some(c => c === 'has-ui-specific-parts')) {\n    return 'ui-messages';\n  } else if (\n    characteristics.every(\n      c => c === 'has-core-specific-parts' || c === 'message',\n    )\n  ) {\n    return 'messages';\n  } else {\n    return 'other';\n  }\n}\n\nfunction detectSingleMessageCharacteristics(\n  message: any,\n): 'has-ui-specific-parts' | 'has-core-specific-parts' | 'message' | 'other' {\n  if (\n    typeof message === 'object' &&\n    message !== null &&\n    (message.role === 'function' || // UI-only role\n      message.role === 'data' || // UI-only role\n      'toolInvocations' in message || // UI-specific field\n      'parts' in message || // UI-specific field\n      'experimental_attachments' in message)\n  ) {\n    return 'has-ui-specific-parts';\n  } else if (\n    typeof message === 'object' &&\n    message !== null &&\n    'content' in message &&\n    (Array.isArray(message.content) || // Core messages can have array content\n      'experimental_providerMetadata' in message ||\n      'providerOptions' in message)\n  ) {\n    return 'has-core-specific-parts';\n  } else if (\n    typeof message === 'object' &&\n    message !== null &&\n    'role' in message &&\n    'content' in message &&\n    typeof message.content === 'string' &&\n    ['system', 'user', 'assistant', 'tool'].includes(message.role)\n  ) {\n    return 'message';\n  } else {\n    return 'other';\n  }\n}\n", "import { z } from 'zod';\nimport { ProviderMetadata } from '../types';\nimport {\n  providerMetadataSchema,\n  ProviderOptions,\n} from '../types/provider-metadata';\nimport {\n  FilePart,\n  filePartSchema,\n  ImagePart,\n  imagePartSchema,\n  ReasoningPart,\n  reasoningPartSchema,\n  RedactedReasoningPart,\n  redactedReasoningPartSchema,\n  TextPart,\n  textPartSchema,\n  ToolCallPart,\n  toolCallPartSchema,\n  ToolResultPart,\n  toolResultPartSchema,\n} from './content-part';\n\n/**\n A system message. It can contain system information.\n\n Note: using the \"system\" part of the prompt is strongly preferred\n to increase the resilience against prompt injection attacks,\n and because not all providers support several system messages.\n */\nexport type CoreSystemMessage = {\n  role: 'system';\n  content: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n};\n\nexport const coreSystemMessageSchema: z.ZodType<CoreSystemMessage> = z.object({\n  role: z.literal('system'),\n  content: z.string(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nA user message. It can contain text or a combination of text and images.\n */\nexport type CoreUserMessage = {\n  role: 'user';\n  content: UserContent;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n*/\n  experimental_providerMetadata?: ProviderMetadata;\n};\n\nexport const coreUserMessageSchema: z.ZodType<CoreUserMessage> = z.object({\n  role: z.literal('user'),\n  content: z.union([\n    z.string(),\n    z.array(z.union([textPartSchema, imagePartSchema, filePartSchema])),\n  ]),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nContent of a user message. It can be a string or an array of text and image parts.\n */\nexport type UserContent = string | Array<TextPart | ImagePart | FilePart>;\n\n/**\nAn assistant message. It can contain text, tool calls, or a combination of text and tool calls.\n */\nexport type CoreAssistantMessage = {\n  role: 'assistant';\n  content: AssistantContent;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n*/\n  experimental_providerMetadata?: ProviderMetadata;\n};\n\nexport const coreAssistantMessageSchema: z.ZodType<CoreAssistantMessage> =\n  z.object({\n    role: z.literal('assistant'),\n    content: z.union([\n      z.string(),\n      z.array(\n        z.union([\n          textPartSchema,\n          filePartSchema,\n          reasoningPartSchema,\n          redactedReasoningPartSchema,\n          toolCallPartSchema,\n        ]),\n      ),\n    ]),\n    providerOptions: providerMetadataSchema.optional(),\n    experimental_providerMetadata: providerMetadataSchema.optional(),\n  });\n\n/**\nContent of an assistant message.\nIt can be a string or an array of text, image, reasoning, redacted reasoning, and tool call parts.\n */\nexport type AssistantContent =\n  | string\n  | Array<\n      TextPart | FilePart | ReasoningPart | RedactedReasoningPart | ToolCallPart\n    >;\n\n/**\nA tool message. It contains the result of one or more tool calls.\n */\nexport type CoreToolMessage = {\n  role: 'tool';\n  content: ToolContent;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n*/\n  experimental_providerMetadata?: ProviderMetadata;\n};\n\nexport const coreToolMessageSchema: z.ZodType<CoreToolMessage> = z.object({\n  role: z.literal('tool'),\n  content: z.array(toolResultPartSchema),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nContent of a tool message. It is an array of tool result parts.\n */\nexport type ToolContent = Array<ToolResultPart>;\n\n/**\nA message that can be used in the `messages` field of a prompt.\nIt can be a user message, an assistant message, or a tool message.\n */\nexport type CoreMessage =\n  | CoreSystemMessage\n  | CoreUserMessage\n  | CoreAssistantMessage\n  | CoreToolMessage;\n\nexport const coreMessageSchema: z.ZodType<CoreMessage> = z.union([\n  coreSystemMessageSchema,\n  coreUserMessageSchema,\n  coreAssistantMessageSchema,\n  coreToolMessageSchema,\n]);\n", "import { LanguageModelV1ProviderMetadata } from '@ai-sdk/provider';\nimport { z } from 'zod';\nimport { jsonValueSchema } from './json-value';\n\n/**\nAdditional provider-specific metadata that is returned from the provider.\n\nThis is needed to enable provider-specific functionality that can be\nfully encapsulated in the provider.\n */\nexport type ProviderMetadata = LanguageModelV1ProviderMetadata;\n\n/**\nAdditional provider-specific options.\n\nThey are passed through to the provider from the AI SDK and enable\nprovider-specific functionality that can be fully encapsulated in the provider.\n */\n// TODO change to LanguageModelV2ProviderOptions in language model v2\nexport type ProviderOptions = LanguageModelV1ProviderMetadata;\n\nexport const providerMetadataSchema: z.ZodType<ProviderMetadata> = z.record(\n  z.string(),\n  z.record(z.string(), jsonValueSchema),\n);\n", "import { JSONValue } from '@ai-sdk/provider';\nimport { z } from 'zod';\n\nexport const jsonValueSchema: z.ZodType<JSONValue> = z.lazy(() =>\n  z.union([\n    z.null(),\n    z.string(),\n    z.number(),\n    z.boolean(),\n    z.record(z.string(), jsonValueSchema),\n    z.array(jsonValueSchema),\n  ]),\n);\n", "import { z } from 'zod';\nimport {\n  ProviderMetadata,\n  providerMetadataSchema,\n  ProviderOptions,\n} from '../types/provider-metadata';\nimport { DataContent, dataContentSchema } from './data-content';\nimport {\n  ToolResultContent,\n  toolResultContentSchema,\n} from './tool-result-content';\n\n/**\nText content part of a prompt. It contains a string of text.\n */\nexport interface TextPart {\n  type: 'text';\n\n  /**\nThe text content.\n   */\n  text: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const textPartSchema: z.ZodType<TextPart> = z.object({\n  type: z.literal('text'),\n  text: z.string(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nImage content part of a prompt. It contains an image.\n */\nexport interface ImagePart {\n  type: 'image';\n\n  /**\nImage data. Can either be:\n\n- data: a base64-encoded string, a Uint8Array, an ArrayBuffer, or a Buffer\n- URL: a URL that points to the image\n   */\n  image: DataContent | URL;\n\n  /**\nOptional mime type of the image.\n   */\n  mimeType?: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const imagePartSchema: z.ZodType<ImagePart> = z.object({\n  type: z.literal('image'),\n  image: z.union([dataContentSchema, z.instanceof(URL)]),\n  mimeType: z.string().optional(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nFile content part of a prompt. It contains a file.\n */\nexport interface FilePart {\n  type: 'file';\n\n  /**\nFile data. Can either be:\n\n- data: a base64-encoded string, a Uint8Array, an ArrayBuffer, or a Buffer\n- URL: a URL that points to the image\n   */\n  data: DataContent | URL;\n\n  /**\nOptional filename of the file.\n   */\n  filename?: string;\n\n  /**\nMime type of the file.\n   */\n  mimeType: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const filePartSchema: z.ZodType<FilePart> = z.object({\n  type: z.literal('file'),\n  data: z.union([dataContentSchema, z.instanceof(URL)]),\n  filename: z.string().optional(),\n  mimeType: z.string(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\n * Reasoning content part of a prompt. It contains a reasoning.\n */\nexport interface ReasoningPart {\n  type: 'reasoning';\n\n  /**\nThe reasoning text.\n   */\n  text: string;\n\n  /**\nAn optional signature for verifying that the reasoning originated from the model.\n   */\n  signature?: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const reasoningPartSchema: z.ZodType<ReasoningPart> = z.object({\n  type: z.literal('reasoning'),\n  text: z.string(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n});\n\n/**\nRedacted reasoning content part of a prompt.\n */\nexport interface RedactedReasoningPart {\n  type: 'redacted-reasoning';\n\n  /**\nRedacted reasoning data.\n   */\n  data: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const redactedReasoningPartSchema: z.ZodType<RedactedReasoningPart> =\n  z.object({\n    type: z.literal('redacted-reasoning'),\n    data: z.string(),\n    providerOptions: providerMetadataSchema.optional(),\n    experimental_providerMetadata: providerMetadataSchema.optional(),\n  });\n\n/**\nTool call content part of a prompt. It contains a tool call (usually generated by the AI model).\n */\nexport interface ToolCallPart {\n  type: 'tool-call';\n\n  /**\nID of the tool call. This ID is used to match the tool call with the tool result.\n */\n  toolCallId: string;\n\n  /**\nName of the tool that is being called.\n */\n  toolName: string;\n\n  /**\nArguments of the tool call. This is a JSON-serializable object that matches the tool's input schema.\n   */\n  args: unknown;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const toolCallPartSchema: z.ZodType<ToolCallPart> = z.object({\n  type: z.literal('tool-call'),\n  toolCallId: z.string(),\n  toolName: z.string(),\n  args: z.unknown(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n}) as z.ZodType<ToolCallPart>; // necessary bc args is optional on Zod type\n\n/**\nTool result content part of a prompt. It contains the result of the tool call with the matching ID.\n */\nexport interface ToolResultPart {\n  type: 'tool-result';\n\n  /**\nID of the tool call that this result is associated with.\n */\n  toolCallId: string;\n\n  /**\nName of the tool that generated this result.\n  */\n  toolName: string;\n\n  /**\nResult of the tool call. This is a JSON-serializable object.\n   */\n  result: unknown;\n\n  /**\nMulti-part content of the tool result. Only for tools that support multipart results.\n   */\n  experimental_content?: ToolResultContent;\n\n  /**\nOptional flag if the result is an error or an error message.\n   */\n  isError?: boolean;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n\n  /**\n@deprecated Use `providerOptions` instead.\n */\n  experimental_providerMetadata?: ProviderMetadata;\n}\n\n/**\n@internal\n */\nexport const toolResultPartSchema: z.ZodType<ToolResultPart> = z.object({\n  type: z.literal('tool-result'),\n  toolCallId: z.string(),\n  toolName: z.string(),\n  result: z.unknown(),\n  content: toolResultContentSchema.optional(),\n  isError: z.boolean().optional(),\n  providerOptions: providerMetadataSchema.optional(),\n  experimental_providerMetadata: providerMetadataSchema.optional(),\n}) as z.ZodType<ToolResultPart>; // necessary bc result is optional on Zod type\n", "import { z } from 'zod';\n\nexport type ToolResultContent = Array<\n  | {\n      type: 'text';\n      text: string;\n    }\n  | {\n      type: 'image';\n      data: string; // base64 encoded png image, e.g. screenshot\n      mimeType?: string; // e.g. 'image/png';\n    }\n>;\n\nexport const toolResultContentSchema: z.ZodType<ToolResultContent> = z.array(\n  z.union([\n    z.object({ type: z.literal('text'), text: z.string() }),\n    z.object({\n      type: z.literal('image'),\n      data: z.string(),\n      mimeType: z.string().optional(),\n    }),\n  ]),\n);\n\nexport function isToolResultContent(\n  value: unknown,\n): value is ToolResultContent {\n  if (!Array.isArray(value) || value.length === 0) {\n    return false;\n  }\n\n  return value.every(part => {\n    if (typeof part !== 'object' || part === null) {\n      return false;\n    }\n\n    if (part.type === 'text') {\n      return typeof part.text === 'string';\n    }\n\n    if (part.type === 'image') {\n      return (\n        typeof part.data === 'string' &&\n        (part.mimeType === undefined || typeof part.mimeType === 'string')\n      );\n    }\n\n    return false;\n  });\n}\n", "/**\nRepresents the number of tokens used in a prompt and completion.\n */\nexport type LanguageModelUsage = {\n  /**\nThe number of tokens used in the prompt.\n   */\n  promptTokens: number;\n\n  /**\nThe number of tokens used in the completion.\n */\n  completionTokens: number;\n\n  /**\nThe total number of tokens used (promptTokens + completionTokens).\n   */\n  totalTokens: number;\n};\n\n/**\nRepresents the number of tokens used in an embedding.\n */\nexport type EmbeddingModelUsage = {\n  /**\nThe number of tokens used in the embedding.\n   */\n  tokens: number;\n};\n\nexport function calculateLanguageModelUsage({\n  promptTokens,\n  completionTokens,\n}: {\n  promptTokens: number;\n  completionTokens: number;\n}): LanguageModelUsage {\n  return {\n    promptTokens,\n    completionTokens,\n    totalTokens: promptTokens + completionTokens,\n  };\n}\n\nexport function addLanguageModelUsage(\n  usage1: LanguageModelUsage,\n  usage2: LanguageModelUsage,\n): LanguageModelUsage {\n  return {\n    promptTokens: usage1.promptTokens + usage2.promptTokens,\n    completionTokens: usage1.completionTokens + usage2.completionTokens,\n    totalTokens: usage1.totalTokens + usage2.totalTokens,\n  };\n}\n", "import { JSONSchema7 } from '@ai-sdk/provider';\n\nconst DEFAULT_SCHEMA_PREFIX = 'JSON schema:';\nconst DEFAULT_SCHEMA_SUFFIX =\n  'You MUST answer with a JSON object that matches the JSON schema above.';\nconst DEFAULT_GENERIC_SUFFIX = 'You MUST answer with JSON.';\n\nexport function injectJsonInstruction({\n  prompt,\n  schema,\n  schemaPrefix = schema != null ? DEFAULT_SCHEMA_PREFIX : undefined,\n  schemaSuffix = schema != null\n    ? DEFAULT_SCHEMA_SUFFIX\n    : DEFAULT_GENERIC_SUFFIX,\n}: {\n  prompt?: string;\n  schema?: JSONSchema7;\n  schemaPrefix?: string;\n  schemaSuffix?: string;\n}): string {\n  return [\n    prompt != null && prompt.length > 0 ? prompt : undefined,\n    prompt != null && prompt.length > 0 ? '' : undefined, // add a newline if prompt is not null\n    schemaPrefix,\n    schema != null ? JSON.stringify(schema) : undefined,\n    schemaSuffix,\n  ]\n    .filter(line => line != null)\n    .join('\\n');\n}\n", "import {\n  isJSONArray,\n  isJSONObject,\n  JSONObject,\n  JSONSchema7,\n  JSONValue,\n  TypeValidationError,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport { safeValidateTypes, ValidationResult } from '@ai-sdk/provider-utils';\nimport { asSchema, DeepPartial, Schema } from '@ai-sdk/ui-utils';\nimport { z } from 'zod';\nimport { NoObjectGeneratedError } from '../../errors/no-object-generated-error';\nimport {\n  AsyncIterableStream,\n  createAsyncIterableStream,\n} from '../util/async-iterable-stream';\nimport { ObjectStreamPart } from './stream-object-result';\nimport { LanguageModelResponseMetadata, LanguageModelUsage } from '../types';\n\nexport interface OutputStrategy<PARTIAL, RESULT, ELEMENT_STREAM> {\n  readonly type: 'object' | 'array' | 'enum' | 'no-schema';\n  readonly jsonSchema: JSONSchema7 | undefined;\n\n  validatePartialResult({\n    value,\n    textDelta,\n    isFinalDelta,\n  }: {\n    value: JSONValue;\n    textDelta: string;\n    isFirstDelta: boolean;\n    isFinalDelta: boolean;\n    latestObject: PARTIAL | undefined;\n  }): ValidationResult<{\n    partial: PARTIAL;\n    textDelta: string;\n  }>;\n  validateFinalResult(\n    value: JSONValue | undefined,\n    context: {\n      text: string;\n      response: LanguageModelResponseMetadata;\n      usage: LanguageModelUsage;\n    },\n  ): ValidationResult<RESULT>;\n\n  createElementStream(\n    originalStream: ReadableStream<ObjectStreamPart<PARTIAL>>,\n  ): ELEMENT_STREAM;\n}\n\nconst noSchemaOutputStrategy: OutputStrategy<JSONValue, JSONValue, never> = {\n  type: 'no-schema',\n  jsonSchema: undefined,\n\n  validatePartialResult({ value, textDelta }) {\n    return { success: true, value: { partial: value, textDelta } };\n  },\n\n  validateFinalResult(\n    value: JSONValue | undefined,\n    context: {\n      text: string;\n      response: LanguageModelResponseMetadata;\n      usage: LanguageModelUsage;\n    },\n  ): ValidationResult<JSONValue> {\n    return value === undefined\n      ? {\n          success: false,\n          error: new NoObjectGeneratedError({\n            message: 'No object generated: response did not match schema.',\n            text: context.text,\n            response: context.response,\n            usage: context.usage,\n          }),\n        }\n      : { success: true, value };\n  },\n\n  createElementStream() {\n    throw new UnsupportedFunctionalityError({\n      functionality: 'element streams in no-schema mode',\n    });\n  },\n};\n\nconst objectOutputStrategy = <OBJECT>(\n  schema: Schema<OBJECT>,\n): OutputStrategy<DeepPartial<OBJECT>, OBJECT, never> => ({\n  type: 'object',\n  jsonSchema: schema.jsonSchema,\n\n  validatePartialResult({ value, textDelta }) {\n    return {\n      success: true,\n      value: {\n        // Note: currently no validation of partial results:\n        partial: value as DeepPartial<OBJECT>,\n        textDelta,\n      },\n    };\n  },\n\n  validateFinalResult(value: JSONValue | undefined): ValidationResult<OBJECT> {\n    return safeValidateTypes({ value, schema });\n  },\n\n  createElementStream() {\n    throw new UnsupportedFunctionalityError({\n      functionality: 'element streams in object mode',\n    });\n  },\n});\n\nconst arrayOutputStrategy = <ELEMENT>(\n  schema: Schema<ELEMENT>,\n): OutputStrategy<ELEMENT[], ELEMENT[], AsyncIterableStream<ELEMENT>> => {\n  // remove $schema from schema.jsonSchema:\n  const { $schema, ...itemSchema } = schema.jsonSchema;\n\n  return {\n    type: 'enum',\n\n    // wrap in object that contains array of elements, since most LLMs will not\n    // be able to generate an array directly:\n    // possible future optimization: use arrays directly when model supports grammar-guided generation\n    jsonSchema: {\n      $schema: 'http://json-schema.org/draft-07/schema#',\n      type: 'object',\n      properties: {\n        elements: { type: 'array', items: itemSchema },\n      },\n      required: ['elements'],\n      additionalProperties: false,\n    },\n\n    validatePartialResult({ value, latestObject, isFirstDelta, isFinalDelta }) {\n      // check that the value is an object that contains an array of elements:\n      if (!isJSONObject(value) || !isJSONArray(value.elements)) {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause: 'value must be an object that contains an array of elements',\n          }),\n        };\n      }\n\n      const inputArray = value.elements as Array<JSONObject>;\n      const resultArray: Array<ELEMENT> = [];\n\n      for (let i = 0; i < inputArray.length; i++) {\n        const element = inputArray[i];\n        const result = safeValidateTypes({ value: element, schema });\n\n        // special treatment for last processed element:\n        // ignore parse or validation failures, since they indicate that the\n        // last element is incomplete and should not be included in the result,\n        // unless it is the final delta\n        if (i === inputArray.length - 1 && !isFinalDelta) {\n          continue;\n        }\n\n        if (!result.success) {\n          return result;\n        }\n\n        resultArray.push(result.value);\n      }\n\n      // calculate delta:\n      const publishedElementCount = latestObject?.length ?? 0;\n\n      let textDelta = '';\n\n      if (isFirstDelta) {\n        textDelta += '[';\n      }\n\n      if (publishedElementCount > 0) {\n        textDelta += ',';\n      }\n\n      textDelta += resultArray\n        .slice(publishedElementCount) // only new elements\n        .map(element => JSON.stringify(element))\n        .join(',');\n\n      if (isFinalDelta) {\n        textDelta += ']';\n      }\n\n      return {\n        success: true,\n        value: {\n          partial: resultArray,\n          textDelta,\n        },\n      };\n    },\n\n    validateFinalResult(\n      value: JSONValue | undefined,\n    ): ValidationResult<Array<ELEMENT>> {\n      // check that the value is an object that contains an array of elements:\n      if (!isJSONObject(value) || !isJSONArray(value.elements)) {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause: 'value must be an object that contains an array of elements',\n          }),\n        };\n      }\n\n      const inputArray = value.elements as Array<JSONObject>;\n\n      // check that each element in the array is of the correct type:\n      for (const element of inputArray) {\n        const result = safeValidateTypes({ value: element, schema });\n        if (!result.success) {\n          return result;\n        }\n      }\n\n      return { success: true, value: inputArray as Array<ELEMENT> };\n    },\n\n    createElementStream(\n      originalStream: ReadableStream<ObjectStreamPart<ELEMENT[]>>,\n    ) {\n      let publishedElements = 0;\n\n      return createAsyncIterableStream(\n        originalStream.pipeThrough(\n          new TransformStream<ObjectStreamPart<ELEMENT[]>, ELEMENT>({\n            transform(chunk, controller) {\n              switch (chunk.type) {\n                case 'object': {\n                  const array = chunk.object;\n\n                  // publish new elements one by one:\n                  for (\n                    ;\n                    publishedElements < array.length;\n                    publishedElements++\n                  ) {\n                    controller.enqueue(array[publishedElements]);\n                  }\n\n                  break;\n                }\n\n                case 'text-delta':\n                case 'finish':\n                case 'error': // suppress error (use onError instead)\n                  break;\n\n                default: {\n                  const _exhaustiveCheck: never = chunk;\n                  throw new Error(\n                    `Unsupported chunk type: ${_exhaustiveCheck}`,\n                  );\n                }\n              }\n            },\n          }),\n        ),\n      );\n    },\n  };\n};\n\nconst enumOutputStrategy = <ENUM extends string>(\n  enumValues: Array<ENUM>,\n): OutputStrategy<ENUM, ENUM, never> => {\n  return {\n    type: 'enum',\n\n    // wrap in object that contains result, since most LLMs will not\n    // be able to generate an enum value directly:\n    // possible future optimization: use enums directly when model supports top-level enums\n    jsonSchema: {\n      $schema: 'http://json-schema.org/draft-07/schema#',\n      type: 'object',\n      properties: {\n        result: { type: 'string', enum: enumValues },\n      },\n      required: ['result'],\n      additionalProperties: false,\n    },\n\n    validateFinalResult(value: JSONValue | undefined): ValidationResult<ENUM> {\n      // check that the value is an object that contains an array of elements:\n      if (!isJSONObject(value) || typeof value.result !== 'string') {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause:\n              'value must be an object that contains a string in the \"result\" property.',\n          }),\n        };\n      }\n\n      const result = value.result as string;\n\n      return enumValues.includes(result as ENUM)\n        ? { success: true, value: result as ENUM }\n        : {\n            success: false,\n            error: new TypeValidationError({\n              value,\n              cause: 'value must be a string in the enum',\n            }),\n          };\n    },\n\n    validatePartialResult() {\n      // no streaming in enum mode\n      throw new UnsupportedFunctionalityError({\n        functionality: 'partial results in enum mode',\n      });\n    },\n\n    createElementStream() {\n      // no streaming in enum mode\n      throw new UnsupportedFunctionalityError({\n        functionality: 'element streams in enum mode',\n      });\n    },\n  };\n};\n\nexport function getOutputStrategy<SCHEMA>({\n  output,\n  schema,\n  enumValues,\n}: {\n  output: 'object' | 'array' | 'enum' | 'no-schema';\n  schema?: z.Schema<SCHEMA, z.ZodTypeDef, any> | Schema<SCHEMA>;\n  enumValues?: Array<SCHEMA>;\n}): OutputStrategy<any, any, any> {\n  switch (output) {\n    case 'object':\n      return objectOutputStrategy(asSchema(schema!));\n    case 'array':\n      return arrayOutputStrategy(asSchema(schema!));\n    case 'enum':\n      return enumOutputStrategy(enumValues! as Array<string>);\n    case 'no-schema':\n      return noSchemaOutputStrategy;\n    default: {\n      const _exhaustiveCheck: never = output;\n      throw new Error(`Unsupported output: ${_exhaustiveCheck}`);\n    }\n  }\n}\n", "export type AsyncIterableStream<T> = AsyncIterable<T> & ReadableStream<T>;\n\nexport function createAsyncIterableStream<T>(\n  source: ReadableStream<T>,\n): AsyncIterableStream<T> {\n  const stream = source.pipeThrough(new TransformStream<T, T>());\n\n  (stream as AsyncIterableStream<T>)[Symbol.asyncIterator] = () => {\n    const reader = stream.getReader();\n    return {\n      async next(): Promise<IteratorResult<T>> {\n        const { done, value } = await reader.read();\n        return done ? { done: true, value: undefined } : { done: false, value };\n      },\n    };\n  };\n\n  return stream as AsyncIterableStream<T>;\n}\n", "import { z } from 'zod';\nimport { InvalidArgumentError } from '../../errors/invalid-argument-error';\nimport { Schema } from '@ai-sdk/ui-utils';\n\nexport function validateObjectGenerationInput({\n  output,\n  mode,\n  schema,\n  schemaName,\n  schemaDescription,\n  enumValues,\n}: {\n  output?: 'object' | 'array' | 'enum' | 'no-schema';\n  schema?: z.Schema<any, z.ZodTypeDef, any> | Schema<any>;\n  schemaName?: string;\n  schemaDescription?: string;\n  enumValues?: Array<unknown>;\n  mode?: 'auto' | 'json' | 'tool';\n}) {\n  if (\n    output != null &&\n    output !== 'object' &&\n    output !== 'array' &&\n    output !== 'enum' &&\n    output !== 'no-schema'\n  ) {\n    throw new InvalidArgumentError({\n      parameter: 'output',\n      value: output,\n      message: 'Invalid output type.',\n    });\n  }\n\n  if (output === 'no-schema') {\n    if (mode === 'auto' || mode === 'tool') {\n      throw new InvalidArgumentError({\n        parameter: 'mode',\n        value: mode,\n        message: 'Mode must be \"json\" for no-schema output.',\n      });\n    }\n\n    if (schema != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Schema is not supported for no-schema output.',\n      });\n    }\n\n    if (schemaDescription != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaDescription',\n        value: schemaDescription,\n        message: 'Schema description is not supported for no-schema output.',\n      });\n    }\n\n    if (schemaName != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaName',\n        value: schemaName,\n        message: 'Schema name is not supported for no-schema output.',\n      });\n    }\n\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are not supported for no-schema output.',\n      });\n    }\n  }\n\n  if (output === 'object') {\n    if (schema == null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Schema is required for object output.',\n      });\n    }\n\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are not supported for object output.',\n      });\n    }\n  }\n\n  if (output === 'array') {\n    if (schema == null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Element schema is required for array output.',\n      });\n    }\n\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are not supported for array output.',\n      });\n    }\n  }\n\n  if (output === 'enum') {\n    if (schema != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Schema is not supported for enum output.',\n      });\n    }\n\n    if (schemaDescription != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaDescription',\n        value: schemaDescription,\n        message: 'Schema description is not supported for enum output.',\n      });\n    }\n\n    if (schemaName != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaName',\n        value: schemaName,\n        message: 'Schema name is not supported for enum output.',\n      });\n    }\n\n    if (enumValues == null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are required for enum output.',\n      });\n    }\n\n    for (const value of enumValues) {\n      if (typeof value !== 'string') {\n        throw new InvalidArgumentError({\n          parameter: 'enumValues',\n          value,\n          message: 'Enum values must be strings.',\n        });\n      }\n    }\n  }\n}\n", "import {\n  JSONValue,\n  LanguageModelV1CallOptions,\n  LanguageModelV1FinishReason,\n  LanguageModelV1StreamPart,\n} from '@ai-sdk/provider';\nimport { createIdGenerator } from '@ai-sdk/provider-utils';\nimport {\n  DeepPartial,\n  Schema,\n  isDeepEqualData,\n  parsePartialJson,\n} from '@ai-sdk/ui-utils';\nimport { ServerResponse } from 'http';\nimport { z } from 'zod';\nimport { NoObjectGeneratedError } from '../../errors/no-object-generated-error';\nimport { DelayedPromise } from '../../util/delayed-promise';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { prepareRetries } from '../prompt/prepare-retries';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport {\n  CallWarning,\n  FinishReason,\n  LanguageModel,\n  LogProbs,\n} from '../types/language-model';\nimport { LanguageModelRequestMetadata } from '../types/language-model-request-metadata';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { ProviderMetadata, ProviderOptions } from '../types/provider-metadata';\nimport {\n  LanguageModelUsage,\n  calculateLanguageModelUsage,\n} from '../types/usage';\nimport {\n  AsyncIterableStream,\n  createAsyncIterableStream,\n} from '../util/async-iterable-stream';\nimport { createStitchableStream } from '../util/create-stitchable-stream';\nimport { now as originalNow } from '../util/now';\nimport { prepareOutgoingHttpHeaders } from '../util/prepare-outgoing-http-headers';\nimport { prepareResponseHeaders } from '../util/prepare-response-headers';\nimport { writeToServerResponse } from '../util/write-to-server-response';\nimport { injectJsonInstruction } from './inject-json-instruction';\nimport { OutputStrategy, getOutputStrategy } from './output-strategy';\nimport { ObjectStreamPart, StreamObjectResult } from './stream-object-result';\nimport { validateObjectGenerationInput } from './validate-object-generation-input';\n\nconst originalGenerateId = createIdGenerator({ prefix: 'aiobj', size: 24 });\n\n/**\nCallback that is set using the `onError` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamObjectOnErrorCallback = (event: {\n  error: unknown;\n}) => Promise<void> | void;\n\n/**\nCallback that is set using the `onFinish` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamObjectOnFinishCallback<RESULT> = (event: {\n  /**\nThe token usage of the generated response.\n*/\n  usage: LanguageModelUsage;\n\n  /**\nThe generated object. Can be undefined if the final object does not match the schema.\n*/\n  object: RESULT | undefined;\n\n  /**\nOptional error object. This is e.g. a TypeValidationError when the final object does not match the schema.\n*/\n  error: unknown | undefined;\n\n  /**\nResponse metadata.\n */\n  response: LanguageModelResponseMetadata;\n\n  /**\nWarnings from the model provider (e.g. unsupported settings).\n*/\n  warnings?: CallWarning[];\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n*/\n  providerMetadata: ProviderMetadata | undefined;\n\n  /**\n@deprecated Use `providerMetadata` instead.\n*/\n  experimental_providerMetadata?: ProviderMetadata;\n}) => Promise<void> | void;\n\n/**\nGenerate a structured, typed object for a given prompt and schema using a language model.\n\nThis function streams the output. If you do not want to stream the output, use `generateObject` instead.\n\n@return\nA result object for accessing the partial object stream and additional information.\n */\nexport function streamObject<OBJECT>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output?: 'object' | undefined;\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe schema of the object that the model should generate.\n */\n      schema: z.Schema<OBJECT, z.ZodTypeDef, any> | Schema<OBJECT>;\n\n      /**\nOptional name of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n     */\n      schemaName?: string;\n\n      /**\nOptional description of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n */\n      schemaDescription?: string;\n\n      /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n     */\n      mode?: 'auto' | 'json' | 'tool';\n\n      /**\nOptional telemetry configuration (experimental).\n     */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\nCallback that is invoked when an error occurs during streaming.\nYou can use it to log errors.\nThe stream processing will pause until the callback promise is resolved.\n     */\n      onError?: StreamObjectOnErrorCallback;\n\n      /**\nCallback that is called when the LLM response and the final object validation are finished.\n     */\n      onFinish?: StreamObjectOnFinishCallback<OBJECT>;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n        now?: () => number;\n      };\n    },\n): StreamObjectResult<DeepPartial<OBJECT>, OBJECT, never>;\n/**\nGenerate an array with structured, typed elements for a given prompt and element schema using a language model.\n\nThis function streams the output. If you do not want to stream the output, use `generateObject` instead.\n\n@return\nA result object for accessing the partial object stream and additional information.\n */\nexport function streamObject<ELEMENT>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output: 'array';\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe element schema of the array that the model should generate.\n */\n      schema: z.Schema<ELEMENT, z.ZodTypeDef, any> | Schema<ELEMENT>;\n\n      /**\nOptional name of the array that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n     */\n      schemaName?: string;\n\n      /**\nOptional description of the array that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n */\n      schemaDescription?: string;\n\n      /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n     */\n      mode?: 'auto' | 'json' | 'tool';\n\n      /**\nOptional telemetry configuration (experimental).\n     */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\nCallback that is invoked when an error occurs during streaming.\nYou can use it to log errors.\nThe stream processing will pause until the callback promise is resolved.\n     */\n      onError?: StreamObjectOnErrorCallback;\n\n      /**\nCallback that is called when the LLM response and the final object validation are finished.\n     */\n      onFinish?: StreamObjectOnFinishCallback<Array<ELEMENT>>;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n        now?: () => number;\n      };\n    },\n): StreamObjectResult<\n  Array<ELEMENT>,\n  Array<ELEMENT>,\n  AsyncIterableStream<ELEMENT>\n>;\n/**\nGenerate JSON with any schema for a given prompt using a language model.\n\nThis function streams the output. If you do not want to stream the output, use `generateObject` instead.\n\n@return\nA result object for accessing the partial object stream and additional information.\n */\nexport function streamObject(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt & {\n      output: 'no-schema';\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nThe mode to use for object generation. Must be \"json\" for no-schema output.\n     */\n      mode?: 'json';\n\n      /**\nOptional telemetry configuration (experimental).\n     */\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\n@deprecated Use `providerOptions` instead.\n*/\n      experimental_providerMetadata?: ProviderMetadata;\n\n      /**\nCallback that is invoked when an error occurs during streaming.\nYou can use it to log errors.\nThe stream processing will pause until the callback promise is resolved.\n     */\n      onError?: StreamObjectOnErrorCallback;\n\n      /**\nCallback that is called when the LLM response and the final object validation are finished.\n     */\n      onFinish?: StreamObjectOnFinishCallback<JSONValue>;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n        now?: () => number;\n      };\n    },\n): StreamObjectResult<JSONValue, JSONValue, never>;\nexport function streamObject<SCHEMA, PARTIAL, RESULT, ELEMENT_STREAM>({\n  model,\n  schema: inputSchema,\n  schemaName,\n  schemaDescription,\n  mode,\n  output = 'object',\n  system,\n  prompt,\n  messages,\n  maxRetries,\n  abortSignal,\n  headers,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata,\n  providerOptions = experimental_providerMetadata,\n  onError,\n  onFinish,\n  _internal: {\n    generateId = originalGenerateId,\n    currentDate = () => new Date(),\n    now = originalNow,\n  } = {},\n  ...settings\n}: Omit<CallSettings, 'stopSequences'> &\n  Prompt & {\n    /**\n     * The expected structure of the output.\n     *\n     * - 'object': Generate a single object that conforms to the schema.\n     * - 'array': Generate an array of objects that conform to the schema.\n     * - 'no-schema': Generate any JSON object. No schema is specified.\n     *\n     * Default is 'object' if not specified.\n     */\n    output?: 'object' | 'array' | 'no-schema';\n\n    model: LanguageModel;\n    schema?: z.Schema<SCHEMA, z.ZodTypeDef, any> | Schema<SCHEMA>;\n    schemaName?: string;\n    schemaDescription?: string;\n    mode?: 'auto' | 'json' | 'tool';\n    experimental_telemetry?: TelemetrySettings;\n    providerOptions?: ProviderOptions;\n    experimental_providerMetadata?: ProviderMetadata;\n    onError?: StreamObjectOnErrorCallback;\n    onFinish?: StreamObjectOnFinishCallback<RESULT>;\n    _internal?: {\n      generateId?: () => string;\n      currentDate?: () => Date;\n      now?: () => number;\n    };\n  }): StreamObjectResult<PARTIAL, RESULT, ELEMENT_STREAM> {\n  validateObjectGenerationInput({\n    output,\n    mode,\n    schema: inputSchema,\n    schemaName,\n    schemaDescription,\n  });\n\n  const outputStrategy = getOutputStrategy({ output, schema: inputSchema });\n\n  // automatically set mode to 'json' for no-schema output\n  if (outputStrategy.type === 'no-schema' && mode === undefined) {\n    mode = 'json';\n  }\n\n  return new DefaultStreamObjectResult({\n    model,\n    telemetry,\n    headers,\n    settings,\n    maxRetries,\n    abortSignal,\n    outputStrategy,\n    system,\n    prompt,\n    messages,\n    schemaName,\n    schemaDescription,\n    providerOptions,\n    mode,\n    onError,\n    onFinish,\n    generateId,\n    currentDate,\n    now,\n  });\n}\n\nclass DefaultStreamObjectResult<PARTIAL, RESULT, ELEMENT_STREAM>\n  implements StreamObjectResult<PARTIAL, RESULT, ELEMENT_STREAM>\n{\n  private readonly objectPromise = new DelayedPromise<RESULT>();\n  private readonly usagePromise = new DelayedPromise<LanguageModelUsage>();\n  private readonly providerMetadataPromise = new DelayedPromise<\n    ProviderMetadata | undefined\n  >();\n  private readonly warningsPromise = new DelayedPromise<\n    CallWarning[] | undefined\n  >();\n  private readonly requestPromise =\n    new DelayedPromise<LanguageModelRequestMetadata>();\n  private readonly responsePromise =\n    new DelayedPromise<LanguageModelResponseMetadata>();\n\n  private readonly baseStream: ReadableStream<ObjectStreamPart<PARTIAL>>;\n\n  private readonly outputStrategy: OutputStrategy<\n    PARTIAL,\n    RESULT,\n    ELEMENT_STREAM\n  >;\n\n  constructor({\n    model,\n    headers,\n    telemetry,\n    settings,\n    maxRetries: maxRetriesArg,\n    abortSignal,\n    outputStrategy,\n    system,\n    prompt,\n    messages,\n    schemaName,\n    schemaDescription,\n    providerOptions,\n    mode,\n    onError,\n    onFinish,\n    generateId,\n    currentDate,\n    now,\n  }: {\n    model: LanguageModel;\n    telemetry: TelemetrySettings | undefined;\n    headers: Record<string, string | undefined> | undefined;\n    settings: Omit<CallSettings, 'abortSignal' | 'headers'>;\n    maxRetries: number | undefined;\n    abortSignal: AbortSignal | undefined;\n    outputStrategy: OutputStrategy<PARTIAL, RESULT, ELEMENT_STREAM>;\n    system: Prompt['system'];\n    prompt: Prompt['prompt'];\n    messages: Prompt['messages'];\n    schemaName: string | undefined;\n    schemaDescription: string | undefined;\n    providerOptions: ProviderOptions | undefined;\n    mode: 'auto' | 'json' | 'tool' | undefined;\n    onError: StreamObjectOnErrorCallback | undefined;\n    onFinish: StreamObjectOnFinishCallback<RESULT> | undefined;\n    generateId: () => string;\n    currentDate: () => Date;\n    now: () => number;\n  }) {\n    const { maxRetries, retry } = prepareRetries({\n      maxRetries: maxRetriesArg,\n    });\n\n    const baseTelemetryAttributes = getBaseTelemetryAttributes({\n      model,\n      telemetry,\n      headers,\n      settings: { ...settings, maxRetries },\n    });\n\n    const tracer = getTracer(telemetry);\n    const self = this;\n\n    const stitchableStream =\n      createStitchableStream<ObjectStreamPart<PARTIAL>>();\n\n    const eventProcessor = new TransformStream<\n      ObjectStreamPart<PARTIAL>,\n      ObjectStreamPart<PARTIAL>\n    >({\n      transform(chunk, controller) {\n        controller.enqueue(chunk);\n\n        if (chunk.type === 'error') {\n          onError?.({ error: chunk.error });\n        }\n      },\n    });\n\n    this.baseStream = stitchableStream.stream.pipeThrough(eventProcessor);\n\n    recordSpan({\n      name: 'ai.streamObject',\n      attributes: selectTelemetryAttributes({\n        telemetry,\n        attributes: {\n          ...assembleOperationName({\n            operationId: 'ai.streamObject',\n            telemetry,\n          }),\n          ...baseTelemetryAttributes,\n          // specific settings that only make sense on the outer level:\n          'ai.prompt': {\n            input: () => JSON.stringify({ system, prompt, messages }),\n          },\n          'ai.schema':\n            outputStrategy.jsonSchema != null\n              ? { input: () => JSON.stringify(outputStrategy.jsonSchema) }\n              : undefined,\n          'ai.schema.name': schemaName,\n          'ai.schema.description': schemaDescription,\n          'ai.settings.output': outputStrategy.type,\n          'ai.settings.mode': mode,\n        },\n      }),\n      tracer,\n      endWhenDone: false,\n      fn: async rootSpan => {\n        // use the default provider mode when the mode is set to 'auto' or unspecified\n        if (mode === 'auto' || mode == null) {\n          mode = model.defaultObjectGenerationMode;\n        }\n\n        let callOptions: LanguageModelV1CallOptions;\n        let transformer: Transformer<\n          LanguageModelV1StreamPart,\n          string | Omit<LanguageModelV1StreamPart, 'text-delta'>\n        >;\n\n        switch (mode) {\n          case 'json': {\n            const standardizedPrompt = standardizePrompt({\n              prompt: {\n                system:\n                  outputStrategy.jsonSchema == null\n                    ? injectJsonInstruction({ prompt: system })\n                    : model.supportsStructuredOutputs\n                      ? system\n                      : injectJsonInstruction({\n                          prompt: system,\n                          schema: outputStrategy.jsonSchema,\n                        }),\n                prompt,\n                messages,\n              },\n              tools: undefined,\n            });\n\n            callOptions = {\n              mode: {\n                type: 'object-json',\n                schema: outputStrategy.jsonSchema,\n                name: schemaName,\n                description: schemaDescription,\n              },\n              ...prepareCallSettings(settings),\n              inputFormat: standardizedPrompt.type,\n              prompt: await convertToLanguageModelPrompt({\n                prompt: standardizedPrompt,\n                modelSupportsImageUrls: model.supportsImageUrls,\n                modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context\n              }),\n              providerMetadata: providerOptions,\n              abortSignal,\n              headers,\n            };\n\n            transformer = {\n              transform: (chunk, controller) => {\n                switch (chunk.type) {\n                  case 'text-delta':\n                    controller.enqueue(chunk.textDelta);\n                    break;\n                  case 'response-metadata':\n                  case 'finish':\n                  case 'error':\n                    controller.enqueue(chunk);\n                    break;\n                }\n              },\n            };\n\n            break;\n          }\n\n          case 'tool': {\n            const standardizedPrompt = standardizePrompt({\n              prompt: { system, prompt, messages },\n              tools: undefined,\n            });\n\n            callOptions = {\n              mode: {\n                type: 'object-tool',\n                tool: {\n                  type: 'function',\n                  name: schemaName ?? 'json',\n                  description:\n                    schemaDescription ?? 'Respond with a JSON object.',\n                  parameters: outputStrategy.jsonSchema!,\n                },\n              },\n              ...prepareCallSettings(settings),\n              inputFormat: standardizedPrompt.type,\n              prompt: await convertToLanguageModelPrompt({\n                prompt: standardizedPrompt,\n                modelSupportsImageUrls: model.supportsImageUrls,\n                modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context,\n              }),\n              providerMetadata: providerOptions,\n              abortSignal,\n              headers,\n            };\n\n            transformer = {\n              transform(chunk, controller) {\n                switch (chunk.type) {\n                  case 'tool-call-delta':\n                    controller.enqueue(chunk.argsTextDelta);\n                    break;\n                  case 'response-metadata':\n                  case 'finish':\n                  case 'error':\n                    controller.enqueue(chunk);\n                    break;\n                }\n              },\n            };\n\n            break;\n          }\n\n          case undefined: {\n            throw new Error(\n              'Model does not have a default object generation mode.',\n            );\n          }\n\n          default: {\n            const _exhaustiveCheck: never = mode;\n            throw new Error(`Unsupported mode: ${_exhaustiveCheck}`);\n          }\n        }\n\n        const {\n          result: { stream, warnings, rawResponse, request },\n          doStreamSpan,\n          startTimestampMs,\n        } = await retry(() =>\n          recordSpan({\n            name: 'ai.streamObject.doStream',\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: 'ai.streamObject.doStream',\n                  telemetry,\n                }),\n                ...baseTelemetryAttributes,\n                'ai.prompt.format': {\n                  input: () => callOptions.inputFormat,\n                },\n                'ai.prompt.messages': {\n                  input: () => JSON.stringify(callOptions.prompt),\n                },\n                'ai.settings.mode': mode,\n\n                // standardized gen-ai llm span attributes:\n                'gen_ai.system': model.provider,\n                'gen_ai.request.model': model.modelId,\n                'gen_ai.request.frequency_penalty': settings.frequencyPenalty,\n                'gen_ai.request.max_tokens': settings.maxTokens,\n                'gen_ai.request.presence_penalty': settings.presencePenalty,\n                'gen_ai.request.temperature': settings.temperature,\n                'gen_ai.request.top_k': settings.topK,\n                'gen_ai.request.top_p': settings.topP,\n              },\n            }),\n            tracer,\n            endWhenDone: false,\n            fn: async doStreamSpan => ({\n              startTimestampMs: now(),\n              doStreamSpan,\n              result: await model.doStream(callOptions),\n            }),\n          }),\n        );\n\n        self.requestPromise.resolve(request ?? {});\n\n        // store information for onFinish callback:\n        let usage: LanguageModelUsage | undefined;\n        let finishReason: LanguageModelV1FinishReason | undefined;\n        let providerMetadata: ProviderMetadata | undefined;\n        let object: RESULT | undefined;\n        let error: unknown | undefined;\n\n        // pipe chunks through a transformation stream that extracts metadata:\n        let accumulatedText = '';\n        let textDelta = '';\n        let response: {\n          id: string;\n          timestamp: Date;\n          modelId: string;\n        } = {\n          id: generateId(),\n          timestamp: currentDate(),\n          modelId: model.modelId,\n        };\n\n        // Keep track of raw parse result before type validation, since e.g. Zod might\n        // change the object by mapping properties.\n        let latestObjectJson: JSONValue | undefined = undefined;\n        let latestObject: PARTIAL | undefined = undefined;\n        let isFirstChunk = true;\n        let isFirstDelta = true;\n\n        const transformedStream = stream\n          .pipeThrough(new TransformStream(transformer))\n          .pipeThrough(\n            new TransformStream<\n              string | ObjectStreamInputPart,\n              ObjectStreamPart<PARTIAL>\n            >({\n              async transform(chunk, controller): Promise<void> {\n                // Telemetry event for first chunk:\n                if (isFirstChunk) {\n                  const msToFirstChunk = now() - startTimestampMs;\n\n                  isFirstChunk = false;\n\n                  doStreamSpan.addEvent('ai.stream.firstChunk', {\n                    'ai.stream.msToFirstChunk': msToFirstChunk,\n                  });\n\n                  doStreamSpan.setAttributes({\n                    'ai.stream.msToFirstChunk': msToFirstChunk,\n                  });\n                }\n\n                // process partial text chunks\n                if (typeof chunk === 'string') {\n                  accumulatedText += chunk;\n                  textDelta += chunk;\n\n                  const { value: currentObjectJson, state: parseState } =\n                    parsePartialJson(accumulatedText);\n\n                  if (\n                    currentObjectJson !== undefined &&\n                    !isDeepEqualData(latestObjectJson, currentObjectJson)\n                  ) {\n                    const validationResult =\n                      outputStrategy.validatePartialResult({\n                        value: currentObjectJson,\n                        textDelta,\n                        latestObject,\n                        isFirstDelta,\n                        isFinalDelta: parseState === 'successful-parse',\n                      });\n\n                    if (\n                      validationResult.success &&\n                      !isDeepEqualData(\n                        latestObject,\n                        validationResult.value.partial,\n                      )\n                    ) {\n                      // inside inner check to correctly parse the final element in array mode:\n                      latestObjectJson = currentObjectJson;\n                      latestObject = validationResult.value.partial;\n\n                      controller.enqueue({\n                        type: 'object',\n                        object: latestObject,\n                      });\n\n                      controller.enqueue({\n                        type: 'text-delta',\n                        textDelta: validationResult.value.textDelta,\n                      });\n\n                      textDelta = '';\n                      isFirstDelta = false;\n                    }\n                  }\n\n                  return;\n                }\n\n                switch (chunk.type) {\n                  case 'response-metadata': {\n                    response = {\n                      id: chunk.id ?? response.id,\n                      timestamp: chunk.timestamp ?? response.timestamp,\n                      modelId: chunk.modelId ?? response.modelId,\n                    };\n                    break;\n                  }\n\n                  case 'finish': {\n                    // send final text delta:\n                    if (textDelta !== '') {\n                      controller.enqueue({ type: 'text-delta', textDelta });\n                    }\n\n                    // store finish reason for telemetry:\n                    finishReason = chunk.finishReason;\n\n                    // store usage and metadata for promises and onFinish callback:\n                    usage = calculateLanguageModelUsage(chunk.usage);\n                    providerMetadata = chunk.providerMetadata;\n\n                    controller.enqueue({ ...chunk, usage, response });\n\n                    // resolve promises that can be resolved now:\n                    self.usagePromise.resolve(usage);\n                    self.providerMetadataPromise.resolve(providerMetadata);\n                    self.responsePromise.resolve({\n                      ...response,\n                      headers: rawResponse?.headers,\n                    });\n\n                    // resolve the object promise with the latest object:\n                    const validationResult = outputStrategy.validateFinalResult(\n                      latestObjectJson,\n                      {\n                        text: accumulatedText,\n                        response,\n                        usage,\n                      },\n                    );\n\n                    if (validationResult.success) {\n                      object = validationResult.value;\n                      self.objectPromise.resolve(object);\n                    } else {\n                      error = new NoObjectGeneratedError({\n                        message:\n                          'No object generated: response did not match schema.',\n                        cause: validationResult.error,\n                        text: accumulatedText,\n                        response,\n                        usage,\n                      });\n                      self.objectPromise.reject(error);\n                    }\n\n                    break;\n                  }\n\n                  default: {\n                    controller.enqueue(chunk);\n                    break;\n                  }\n                }\n              },\n\n              // invoke onFinish callback and resolve toolResults promise when the stream is about to close:\n              async flush(controller) {\n                try {\n                  const finalUsage = usage ?? {\n                    promptTokens: NaN,\n                    completionTokens: NaN,\n                    totalTokens: NaN,\n                  };\n\n                  doStreamSpan.setAttributes(\n                    selectTelemetryAttributes({\n                      telemetry,\n                      attributes: {\n                        'ai.response.finishReason': finishReason,\n                        'ai.response.object': {\n                          output: () => JSON.stringify(object),\n                        },\n                        'ai.response.id': response.id,\n                        'ai.response.model': response.modelId,\n                        'ai.response.timestamp':\n                          response.timestamp.toISOString(),\n\n                        'ai.usage.promptTokens': finalUsage.promptTokens,\n                        'ai.usage.completionTokens':\n                          finalUsage.completionTokens,\n\n                        // standardized gen-ai llm span attributes:\n                        'gen_ai.response.finish_reasons': [finishReason],\n                        'gen_ai.response.id': response.id,\n                        'gen_ai.response.model': response.modelId,\n                        'gen_ai.usage.input_tokens': finalUsage.promptTokens,\n                        'gen_ai.usage.output_tokens':\n                          finalUsage.completionTokens,\n                      },\n                    }),\n                  );\n\n                  // finish doStreamSpan before other operations for correct timing:\n                  doStreamSpan.end();\n\n                  // Add response information to the root span:\n                  rootSpan.setAttributes(\n                    selectTelemetryAttributes({\n                      telemetry,\n                      attributes: {\n                        'ai.usage.promptTokens': finalUsage.promptTokens,\n                        'ai.usage.completionTokens':\n                          finalUsage.completionTokens,\n                        'ai.response.object': {\n                          output: () => JSON.stringify(object),\n                        },\n                      },\n                    }),\n                  );\n\n                  // call onFinish callback:\n                  await onFinish?.({\n                    usage: finalUsage,\n                    object,\n                    error,\n                    response: {\n                      ...response,\n                      headers: rawResponse?.headers,\n                    },\n                    warnings,\n                    providerMetadata,\n                    experimental_providerMetadata: providerMetadata,\n                  });\n                } catch (error) {\n                  controller.enqueue({ type: 'error', error });\n                } finally {\n                  rootSpan.end();\n                }\n              },\n            }),\n          );\n\n        stitchableStream.addStream(transformedStream);\n      },\n    })\n      .catch(error => {\n        // add an empty stream with an error to break the stream:\n        stitchableStream.addStream(\n          new ReadableStream({\n            start(controller) {\n              controller.enqueue({ type: 'error', error });\n              controller.close();\n            },\n          }),\n        );\n      })\n      .finally(() => {\n        stitchableStream.close();\n      });\n\n    this.outputStrategy = outputStrategy;\n  }\n\n  get object() {\n    return this.objectPromise.value;\n  }\n\n  get usage() {\n    return this.usagePromise.value;\n  }\n\n  get experimental_providerMetadata() {\n    return this.providerMetadataPromise.value;\n  }\n\n  get providerMetadata() {\n    return this.providerMetadataPromise.value;\n  }\n\n  get warnings() {\n    return this.warningsPromise.value;\n  }\n\n  get request() {\n    return this.requestPromise.value;\n  }\n\n  get response() {\n    return this.responsePromise.value;\n  }\n\n  get partialObjectStream(): AsyncIterableStream<PARTIAL> {\n    return createAsyncIterableStream(\n      this.baseStream.pipeThrough(\n        new TransformStream<ObjectStreamPart<PARTIAL>, PARTIAL>({\n          transform(chunk, controller) {\n            switch (chunk.type) {\n              case 'object':\n                controller.enqueue(chunk.object);\n                break;\n\n              case 'text-delta':\n              case 'finish':\n              case 'error': // suppress error (use onError instead)\n                break;\n\n              default: {\n                const _exhaustiveCheck: never = chunk;\n                throw new Error(`Unsupported chunk type: ${_exhaustiveCheck}`);\n              }\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  get elementStream(): ELEMENT_STREAM {\n    return this.outputStrategy.createElementStream(this.baseStream);\n  }\n\n  get textStream(): AsyncIterableStream<string> {\n    return createAsyncIterableStream(\n      this.baseStream.pipeThrough(\n        new TransformStream<ObjectStreamPart<PARTIAL>, string>({\n          transform(chunk, controller) {\n            switch (chunk.type) {\n              case 'text-delta':\n                controller.enqueue(chunk.textDelta);\n                break;\n\n              case 'object':\n              case 'finish':\n              case 'error': // suppress error (use onError instead)\n                break;\n\n              default: {\n                const _exhaustiveCheck: never = chunk;\n                throw new Error(`Unsupported chunk type: ${_exhaustiveCheck}`);\n              }\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  get fullStream(): AsyncIterableStream<ObjectStreamPart<PARTIAL>> {\n    return createAsyncIterableStream(this.baseStream);\n  }\n\n  pipeTextStreamToResponse(response: ServerResponse, init?: ResponseInit) {\n    writeToServerResponse({\n      response,\n      status: init?.status,\n      statusText: init?.statusText,\n      headers: prepareOutgoingHttpHeaders(init?.headers, {\n        contentType: 'text/plain; charset=utf-8',\n      }),\n      stream: this.textStream.pipeThrough(new TextEncoderStream()),\n    });\n  }\n\n  toTextStreamResponse(init?: ResponseInit): Response {\n    return new Response(this.textStream.pipeThrough(new TextEncoderStream()), {\n      status: init?.status ?? 200,\n      headers: prepareResponseHeaders(init?.headers, {\n        contentType: 'text/plain; charset=utf-8',\n      }),\n    });\n  }\n}\n\nexport type ObjectStreamInputPart =\n  | {\n      type: 'error';\n      error: unknown;\n    }\n  | {\n      type: 'response-metadata';\n      id?: string;\n      timestamp?: Date;\n      modelId?: string;\n    }\n  | {\n      type: 'finish';\n      finishReason: FinishReason;\n      logprobs?: LogProbs;\n      usage: LanguageModelUsage;\n      providerMetadata?: ProviderMetadata;\n    };\n", "/**\n * Delayed promise. It is only constructed once the value is accessed.\n * This is useful to avoid unhandled promise rejections when the promise is created\n * but not accessed.\n */\nexport class DelayedPromise<T> {\n  private status:\n    | { type: 'pending' }\n    | { type: 'resolved'; value: T }\n    | { type: 'rejected'; error: unknown } = { type: 'pending' };\n  private promise: Promise<T> | undefined;\n  private _resolve: undefined | ((value: T) => void) = undefined;\n  private _reject: undefined | ((error: unknown) => void) = undefined;\n\n  get value(): Promise<T> {\n    if (this.promise) {\n      return this.promise;\n    }\n\n    this.promise = new Promise<T>((resolve, reject) => {\n      if (this.status.type === 'resolved') {\n        resolve(this.status.value);\n      } else if (this.status.type === 'rejected') {\n        reject(this.status.error);\n      }\n\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n\n    return this.promise;\n  }\n\n  resolve(value: T): void {\n    this.status = { type: 'resolved', value };\n\n    if (this.promise) {\n      this._resolve?.(value);\n    }\n  }\n\n  reject(error: unknown): void {\n    this.status = { type: 'rejected', error };\n\n    if (this.promise) {\n      this._reject?.(error);\n    }\n  }\n}\n", "/**\n * Creates a Promise with externally accessible resolve and reject functions.\n *\n * @template T - The type of the value that the Promise will resolve to.\n * @returns An object containing:\n *   - promise: A Promise that can be resolved or rejected externally.\n *   - resolve: A function to resolve the Promise with a value of type T.\n *   - reject: A function to reject the Promise with an error.\n */\nexport function createResolvablePromise<T = any>(): {\n  promise: Promise<T>;\n  resolve: (value: T) => void;\n  reject: (error: unknown) => void;\n} {\n  let resolve: (value: T) => void;\n  let reject: (error: unknown) => void;\n\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return {\n    promise,\n    resolve: resolve!,\n    reject: reject!,\n  };\n}\n", "import { createResolvablePromise } from '../../util/create-resolvable-promise';\n\n/**\n * Creates a stitchable stream that can pipe one stream at a time.\n *\n * @template T - The type of values emitted by the streams.\n * @returns {Object} An object containing the stitchable stream and control methods.\n */\nexport function createStitchableStream<T>(): {\n  stream: ReadableStream<T>;\n  addStream: (innerStream: ReadableStream<T>) => void;\n  close: () => void;\n  terminate: () => void;\n} {\n  let innerStreamReaders: ReadableStreamDefaultReader<T>[] = [];\n  let controller: ReadableStreamDefaultController<T> | null = null;\n  let isClosed = false;\n  let waitForNewStream = createResolvablePromise<void>();\n\n  const processPull = async () => {\n    // Case 1: Outer stream is closed and no more inner streams\n    if (isClosed && innerStreamReaders.length === 0) {\n      controller?.close();\n      return;\n    }\n\n    // Case 2: No inner streams available, but outer stream is open\n    // wait for a new inner stream to be added or the outer stream to close\n    if (innerStreamReaders.length === 0) {\n      waitForNewStream = createResolvablePromise<void>();\n      await waitForNewStream.promise;\n      return processPull();\n    }\n\n    try {\n      const { value, done } = await innerStreamReaders[0].read();\n\n      if (done) {\n        // Case 3: Current inner stream is done\n        innerStreamReaders.shift(); // Remove the finished stream\n\n        // Continue pulling from the next stream if available\n        if (innerStreamReaders.length > 0) {\n          await processPull();\n        } else if (isClosed) {\n          controller?.close();\n        }\n      } else {\n        // Case 4: Current inner stream returns an item\n        controller?.enqueue(value);\n      }\n    } catch (error) {\n      // Case 5: Current inner stream throws an error\n      controller?.error(error);\n      innerStreamReaders.shift(); // Remove the errored stream\n\n      if (isClosed && innerStreamReaders.length === 0) {\n        controller?.close();\n      }\n    }\n  };\n\n  return {\n    stream: new ReadableStream<T>({\n      start(controllerParam) {\n        controller = controllerParam;\n      },\n      pull: processPull,\n      async cancel() {\n        for (const reader of innerStreamReaders) {\n          await reader.cancel();\n        }\n        innerStreamReaders = [];\n        isClosed = true;\n      },\n    }),\n    addStream: (innerStream: ReadableStream<T>) => {\n      if (isClosed) {\n        throw new Error('Cannot add inner stream: outer stream is closed');\n      }\n\n      innerStreamReaders.push(innerStream.getReader());\n      waitForNewStream.resolve();\n    },\n\n    /**\n     * Gracefully close the outer stream. This will let the inner streams\n     * finish processing and then close the outer stream.\n     */\n    close: () => {\n      isClosed = true;\n      waitForNewStream.resolve();\n\n      if (innerStreamReaders.length === 0) {\n        controller?.close();\n      }\n    },\n\n    /**\n     * Immediately close the outer stream. This will cancel all inner streams\n     * and close the outer stream.\n     */\n    terminate: () => {\n      isClosed = true;\n      waitForNewStream.resolve();\n\n      innerStreamReaders.forEach(reader => reader.cancel());\n      innerStreamReaders = [];\n      controller?.close();\n    },\n  };\n}\n", "// Shim for performance.now() to support environments that don't have it:\nexport function now(): number {\n  return globalThis?.performance?.now() ?? Date.now();\n}\n", "import { createIdGenerator, IDGenerator } from '@ai-sdk/provider-utils';\nimport { Tracer } from '@opentelemetry/api';\nimport { InvalidArgumentError } from '../../errors/invalid-argument-error';\nimport { NoOutputSpecifiedError } from '../../errors/no-output-specified-error';\nimport { ToolExecutionError } from '../../errors/tool-execution-error';\nimport { CoreAssistantMessage, CoreMessage } from '../prompt';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { prepareRetries } from '../prompt/prepare-retries';\nimport { prepareToolsAndToolChoice } from '../prompt/prepare-tools-and-tool-choice';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { LanguageModel, ToolChoice } from '../types';\nimport { ProviderMetadata, ProviderOptions } from '../types/provider-metadata';\nimport {\n  addLanguageModelUsage,\n  calculateLanguageModelUsage,\n  LanguageModelUsage,\n} from '../types/usage';\nimport { removeTextAfterLastWhitespace } from '../util/remove-text-after-last-whitespace';\nimport { GenerateTextResult } from './generate-text-result';\nimport { DefaultGeneratedFile, GeneratedFile } from './generated-file';\nimport { Output } from './output';\nimport { parseToolCall } from './parse-tool-call';\nimport { asReasoningText, ReasoningDetail } from './reasoning-detail';\nimport { ResponseMessage, StepResult } from './step-result';\nimport { toResponseMessages } from './to-response-messages';\nimport { ToolCallArray } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair';\nimport { ToolResultArray } from './tool-result';\nimport { ToolSet } from './tool-set';\n\nconst originalGenerateId = createIdGenerator({\n  prefix: 'aitxt',\n  size: 24,\n});\n\nconst originalGenerateMessageId = createIdGenerator({\n  prefix: 'msg',\n  size: 24,\n});\n\n/**\nCallback that is set using the `onStepFinish` option.\n\n@param stepResult - The result of the step.\n */\nexport type GenerateTextOnStepFinishCallback<TOOLS extends ToolSet> = (\n  stepResult: StepResult<TOOLS>,\n) => Promise<void> | void;\n\n/**\nGenerate a text and call tools for a given prompt using a language model.\n\nThis function does not stream the output. If you want to stream the output, use `streamText` instead.\n\n@param model - The language model to use.\n\n@param tools - Tools that are accessible to and can be called by the model. The model needs to support calling tools.\n@param toolChoice - The tool choice strategy. Default: 'auto'.\n\n@param system - A system message that will be part of the prompt.\n@param prompt - A simple text prompt. You can either use `prompt` or `messages` but not both.\n@param messages - A list of messages. You can either use `prompt` or `messages` but not both.\n\n@param maxTokens - Maximum number of tokens to generate.\n@param temperature - Temperature setting.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topP - Nucleus sampling.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topK - Only sample from the top K options for each subsequent token.\nUsed to remove \"long tail\" low probability responses.\nRecommended for advanced use cases only. You usually only need to use temperature.\n@param presencePenalty - Presence penalty setting.\nIt affects the likelihood of the model to repeat information that is already in the prompt.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param frequencyPenalty - Frequency penalty setting.\nIt affects the likelihood of the model to repeatedly use the same words or phrases.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param stopSequences - Stop sequences.\nIf set, the model will stop generating text when one of the stop sequences is generated.\n@param seed - The seed (integer) to use for random sampling.\nIf set and supported by the model, calls will generate deterministic results.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@param maxSteps - Maximum number of sequential LLM calls (steps), e.g. when you use tool calls.\n@param experimental_generateMessageId - Generate a unique ID for each message.\n\n@param onStepFinish - Callback that is called when each step (LLM call) is finished, including intermediate steps.\n\n@returns\nA result object that contains the generated text, the results of the tool calls, and additional information.\n */\nexport async function generateText<\n  TOOLS extends ToolSet,\n  OUTPUT = never,\n  OUTPUT_PARTIAL = never,\n>({\n  model,\n  tools,\n  toolChoice,\n  system,\n  prompt,\n  messages,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  maxSteps = 1,\n  experimental_generateMessageId: generateMessageId = originalGenerateMessageId,\n  experimental_output: output,\n  experimental_continueSteps: continueSteps = false,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata,\n  providerOptions = experimental_providerMetadata,\n  experimental_activeTools: activeTools,\n  experimental_repairToolCall: repairToolCall,\n  _internal: {\n    generateId = originalGenerateId,\n    currentDate = () => new Date(),\n  } = {},\n  onStepFinish,\n  ...settings\n}: CallSettings &\n  Prompt & {\n    /**\nThe language model to use.\n     */\n    model: LanguageModel;\n\n    /**\nThe tools that the model can call. The model needs to support calling tools.\n*/\n    tools?: TOOLS;\n\n    /**\nThe tool choice strategy. Default: 'auto'.\n     */\n    toolChoice?: ToolChoice<TOOLS>;\n\n    /**\nMaximum number of sequential LLM calls (steps), e.g. when you use tool calls. Must be at least 1.\n\nA maximum number is required to prevent infinite loops in the case of misconfigured tools.\n\nBy default, it's set to 1, which means that only a single LLM call is made.\n     */\n    maxSteps?: number;\n\n    /**\nGenerate a unique ID for each message.\n     */\n    experimental_generateMessageId?: IDGenerator;\n\n    /**\nWhen enabled, the model will perform additional steps if the finish reason is \"length\" (experimental).\n\nBy default, it's set to false.\n     */\n    experimental_continueSteps?: boolean;\n\n    /**\nOptional telemetry configuration (experimental).\n     */\n    experimental_telemetry?: TelemetrySettings;\n\n    /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n    providerOptions?: ProviderOptions;\n\n    /**\n@deprecated Use `providerOptions` instead.\n     */\n    experimental_providerMetadata?: ProviderMetadata;\n\n    /**\nLimits the tools that are available for the model to call without\nchanging the tool call and result types in the result.\n     */\n    experimental_activeTools?: Array<keyof TOOLS>;\n\n    /**\nOptional specification for parsing structured outputs from the LLM response.\n     */\n    experimental_output?: Output<OUTPUT, OUTPUT_PARTIAL>;\n\n    /**\nA function that attempts to repair a tool call that failed to parse.\n     */\n    experimental_repairToolCall?: ToolCallRepairFunction<TOOLS>;\n\n    /**\n    Callback that is called when each step (LLM call) is finished, including intermediate steps.\n    */\n    onStepFinish?: GenerateTextOnStepFinishCallback<TOOLS>;\n\n    /**\n     * Internal. For test use only. May change without notice.\n     */\n    _internal?: {\n      generateId?: IDGenerator;\n      currentDate?: () => Date;\n    };\n  }): Promise<GenerateTextResult<TOOLS, OUTPUT>> {\n  if (maxSteps < 1) {\n    throw new InvalidArgumentError({\n      parameter: 'maxSteps',\n      value: maxSteps,\n      message: 'maxSteps must be at least 1',\n    });\n  }\n\n  const { maxRetries, retry } = prepareRetries({ maxRetries: maxRetriesArg });\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { ...settings, maxRetries },\n  });\n\n  const initialPrompt = standardizePrompt({\n    prompt: {\n      system: output?.injectIntoSystemPrompt({ system, model }) ?? system,\n      prompt,\n      messages,\n    },\n    tools,\n  });\n\n  const tracer = getTracer(telemetry);\n\n  return recordSpan({\n    name: 'ai.generateText',\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({\n          operationId: 'ai.generateText',\n          telemetry,\n        }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        'ai.prompt': {\n          input: () => JSON.stringify({ system, prompt, messages }),\n        },\n        'ai.settings.maxSteps': maxSteps,\n      },\n    }),\n    tracer,\n    fn: async span => {\n      const mode = {\n        type: 'regular' as const,\n        ...prepareToolsAndToolChoice({ tools, toolChoice, activeTools }),\n      };\n\n      const callSettings = prepareCallSettings(settings);\n\n      let currentModelResponse: Awaited<\n        ReturnType<LanguageModel['doGenerate']>\n      > & { response: { id: string; timestamp: Date; modelId: string } };\n      let currentToolCalls: ToolCallArray<TOOLS> = [];\n      let currentToolResults: ToolResultArray<TOOLS> = [];\n      let currentReasoningDetails: Array<ReasoningDetail> = [];\n      let stepCount = 0;\n      const responseMessages: Array<ResponseMessage> = [];\n      let text = '';\n      const sources: GenerateTextResult<TOOLS, OUTPUT>['sources'] = [];\n      const steps: GenerateTextResult<TOOLS, OUTPUT>['steps'] = [];\n      let usage: LanguageModelUsage = {\n        completionTokens: 0,\n        promptTokens: 0,\n        totalTokens: 0,\n      };\n\n      let stepType: 'initial' | 'tool-result' | 'continue' | 'done' = 'initial';\n\n      do {\n        // after the 1st step, we need to switch to messages format:\n        const promptFormat = stepCount === 0 ? initialPrompt.type : 'messages';\n\n        const stepInputMessages = [\n          ...initialPrompt.messages,\n          ...responseMessages,\n        ];\n\n        const promptMessages = await convertToLanguageModelPrompt({\n          prompt: {\n            type: promptFormat,\n            system: initialPrompt.system,\n            messages: stepInputMessages,\n          },\n          modelSupportsImageUrls: model.supportsImageUrls,\n          modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context\n        });\n\n        currentModelResponse = await retry(() =>\n          recordSpan({\n            name: 'ai.generateText.doGenerate',\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: 'ai.generateText.doGenerate',\n                  telemetry,\n                }),\n                ...baseTelemetryAttributes,\n                'ai.prompt.format': { input: () => promptFormat },\n                'ai.prompt.messages': {\n                  input: () => JSON.stringify(promptMessages),\n                },\n                'ai.prompt.tools': {\n                  // convert the language model level tools:\n                  input: () => mode.tools?.map(tool => JSON.stringify(tool)),\n                },\n                'ai.prompt.toolChoice': {\n                  input: () =>\n                    mode.toolChoice != null\n                      ? JSON.stringify(mode.toolChoice)\n                      : undefined,\n                },\n\n                // standardized gen-ai llm span attributes:\n                'gen_ai.system': model.provider,\n                'gen_ai.request.model': model.modelId,\n                'gen_ai.request.frequency_penalty': settings.frequencyPenalty,\n                'gen_ai.request.max_tokens': settings.maxTokens,\n                'gen_ai.request.presence_penalty': settings.presencePenalty,\n                'gen_ai.request.stop_sequences': settings.stopSequences,\n                'gen_ai.request.temperature': settings.temperature,\n                'gen_ai.request.top_k': settings.topK,\n                'gen_ai.request.top_p': settings.topP,\n              },\n            }),\n            tracer,\n            fn: async span => {\n              const result = await model.doGenerate({\n                mode,\n                ...callSettings,\n                inputFormat: promptFormat,\n                responseFormat: output?.responseFormat({ model }),\n                prompt: promptMessages,\n                providerMetadata: providerOptions,\n                abortSignal,\n                headers,\n              });\n\n              // Fill in default values:\n              const responseData = {\n                id: result.response?.id ?? generateId(),\n                timestamp: result.response?.timestamp ?? currentDate(),\n                modelId: result.response?.modelId ?? model.modelId,\n              };\n\n              // Add response information to the span:\n              span.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    'ai.response.finishReason': result.finishReason,\n                    'ai.response.text': {\n                      output: () => result.text,\n                    },\n                    'ai.response.toolCalls': {\n                      output: () => JSON.stringify(result.toolCalls),\n                    },\n                    'ai.response.id': responseData.id,\n                    'ai.response.model': responseData.modelId,\n                    'ai.response.timestamp':\n                      responseData.timestamp.toISOString(),\n\n                    'ai.usage.promptTokens': result.usage.promptTokens,\n                    'ai.usage.completionTokens': result.usage.completionTokens,\n\n                    // standardized gen-ai llm span attributes:\n                    'gen_ai.response.finish_reasons': [result.finishReason],\n                    'gen_ai.response.id': responseData.id,\n                    'gen_ai.response.model': responseData.modelId,\n                    'gen_ai.usage.input_tokens': result.usage.promptTokens,\n                    'gen_ai.usage.output_tokens': result.usage.completionTokens,\n                  },\n                }),\n              );\n\n              return { ...result, response: responseData };\n            },\n          }),\n        );\n\n        // parse tool calls:\n        currentToolCalls = await Promise.all(\n          (currentModelResponse.toolCalls ?? []).map(toolCall =>\n            parseToolCall({\n              toolCall,\n              tools,\n              repairToolCall,\n              system,\n              messages: stepInputMessages,\n            }),\n          ),\n        );\n\n        // execute tools:\n        currentToolResults =\n          tools == null\n            ? []\n            : await executeTools({\n                toolCalls: currentToolCalls,\n                tools,\n                tracer,\n                telemetry,\n                messages: stepInputMessages,\n                abortSignal,\n              });\n\n        // token usage:\n        const currentUsage = calculateLanguageModelUsage(\n          currentModelResponse.usage,\n        );\n        usage = addLanguageModelUsage(usage, currentUsage);\n\n        // check if another step is needed:\n        let nextStepType: 'done' | 'continue' | 'tool-result' = 'done';\n        if (++stepCount < maxSteps) {\n          if (\n            continueSteps &&\n            currentModelResponse.finishReason === 'length' &&\n            // only use continue when there are no tool calls:\n            currentToolCalls.length === 0\n          ) {\n            nextStepType = 'continue';\n          } else if (\n            // there are tool calls:\n            currentToolCalls.length > 0 &&\n            // all current tool calls have results:\n            currentToolResults.length === currentToolCalls.length\n          ) {\n            nextStepType = 'tool-result';\n          }\n        }\n\n        // text:\n        const originalText = currentModelResponse.text ?? '';\n        const stepTextLeadingWhitespaceTrimmed =\n          stepType === 'continue' && // only for continue steps\n          text.trimEnd() !== text // only trim when there is preceding whitespace\n            ? originalText.trimStart()\n            : originalText;\n        const stepText =\n          nextStepType === 'continue'\n            ? removeTextAfterLastWhitespace(stepTextLeadingWhitespaceTrimmed)\n            : stepTextLeadingWhitespaceTrimmed;\n\n        text =\n          nextStepType === 'continue' || stepType === 'continue'\n            ? text + stepText\n            : stepText;\n\n        currentReasoningDetails = asReasoningDetails(\n          currentModelResponse.reasoning,\n        );\n\n        // sources:\n        sources.push(...(currentModelResponse.sources ?? []));\n\n        // append to messages for potential next step:\n        if (stepType === 'continue') {\n          // continue step: update the last assistant message\n          // continue is only possible when there are no tool calls,\n          // so we can assume that there is a single last assistant message:\n          const lastMessage = responseMessages[\n            responseMessages.length - 1\n          ] as CoreAssistantMessage;\n\n          if (typeof lastMessage.content === 'string') {\n            lastMessage.content += stepText;\n          } else {\n            lastMessage.content.push({\n              text: stepText,\n              type: 'text',\n            });\n          }\n        } else {\n          responseMessages.push(\n            ...toResponseMessages({\n              text,\n              files: asFiles(currentModelResponse.files),\n              reasoning: asReasoningDetails(currentModelResponse.reasoning),\n              tools: tools ?? ({} as TOOLS),\n              toolCalls: currentToolCalls,\n              toolResults: currentToolResults,\n              messageId: generateMessageId(),\n              generateMessageId,\n            }),\n          );\n        }\n\n        // Add step information (after response messages are updated):\n        const currentStepResult: StepResult<TOOLS> = {\n          stepType,\n          text: stepText,\n          // TODO v5: rename reasoning to reasoningText (and use reasoning for composite array)\n          reasoning: asReasoningText(currentReasoningDetails),\n          reasoningDetails: currentReasoningDetails,\n          files: asFiles(currentModelResponse.files),\n          sources: currentModelResponse.sources ?? [],\n          toolCalls: currentToolCalls,\n          toolResults: currentToolResults,\n          finishReason: currentModelResponse.finishReason,\n          usage: currentUsage,\n          warnings: currentModelResponse.warnings,\n          logprobs: currentModelResponse.logprobs,\n          request: currentModelResponse.request ?? {},\n          response: {\n            ...currentModelResponse.response,\n            headers: currentModelResponse.rawResponse?.headers,\n            body: currentModelResponse.rawResponse?.body,\n\n            // deep clone msgs to avoid mutating past messages in multi-step:\n            messages: structuredClone(responseMessages),\n          },\n          providerMetadata: currentModelResponse.providerMetadata,\n          experimental_providerMetadata: currentModelResponse.providerMetadata,\n          isContinued: nextStepType === 'continue',\n        };\n        steps.push(currentStepResult);\n        await onStepFinish?.(currentStepResult);\n\n        stepType = nextStepType;\n      } while (stepType !== 'done');\n\n      // Add response information to the span:\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            'ai.response.finishReason': currentModelResponse.finishReason,\n            'ai.response.text': {\n              output: () => currentModelResponse.text,\n            },\n            'ai.response.toolCalls': {\n              output: () => JSON.stringify(currentModelResponse.toolCalls),\n            },\n\n            'ai.usage.promptTokens': currentModelResponse.usage.promptTokens,\n            'ai.usage.completionTokens':\n              currentModelResponse.usage.completionTokens,\n          },\n        }),\n      );\n\n      return new DefaultGenerateTextResult({\n        text,\n        files: asFiles(currentModelResponse.files),\n        reasoning: asReasoningText(currentReasoningDetails),\n        reasoningDetails: currentReasoningDetails,\n        sources,\n        outputResolver: () => {\n          if (output == null) {\n            throw new NoOutputSpecifiedError();\n          }\n\n          return output.parseOutput(\n            { text },\n            { response: currentModelResponse.response, usage },\n          );\n        },\n        toolCalls: currentToolCalls,\n        toolResults: currentToolResults,\n        finishReason: currentModelResponse.finishReason,\n        usage,\n        warnings: currentModelResponse.warnings,\n        request: currentModelResponse.request ?? {},\n        response: {\n          ...currentModelResponse.response,\n          headers: currentModelResponse.rawResponse?.headers,\n          body: currentModelResponse.rawResponse?.body,\n          messages: responseMessages,\n        },\n        logprobs: currentModelResponse.logprobs,\n        steps,\n        providerMetadata: currentModelResponse.providerMetadata,\n      });\n    },\n  });\n}\n\nasync function executeTools<TOOLS extends ToolSet>({\n  toolCalls,\n  tools,\n  tracer,\n  telemetry,\n  messages,\n  abortSignal,\n}: {\n  toolCalls: ToolCallArray<TOOLS>;\n  tools: TOOLS;\n  tracer: Tracer;\n  telemetry: TelemetrySettings | undefined;\n  messages: CoreMessage[];\n  abortSignal: AbortSignal | undefined;\n}): Promise<ToolResultArray<TOOLS>> {\n  const toolResults = await Promise.all(\n    toolCalls.map(async ({ toolCallId, toolName, args }) => {\n      const tool = tools[toolName];\n\n      if (tool?.execute == null) {\n        return undefined;\n      }\n\n      const result = await recordSpan({\n        name: 'ai.toolCall',\n        attributes: selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            ...assembleOperationName({\n              operationId: 'ai.toolCall',\n              telemetry,\n            }),\n            'ai.toolCall.name': toolName,\n            'ai.toolCall.id': toolCallId,\n            'ai.toolCall.args': {\n              output: () => JSON.stringify(args),\n            },\n          },\n        }),\n        tracer,\n        fn: async span => {\n          try {\n            const result = await tool.execute!(args, {\n              toolCallId,\n              messages,\n              abortSignal,\n            });\n\n            try {\n              span.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    'ai.toolCall.result': {\n                      output: () => JSON.stringify(result),\n                    },\n                  },\n                }),\n              );\n            } catch (ignored) {\n              // JSON stringify might fail if the result is not serializable,\n              // in which case we just ignore it. In the future we might want to\n              // add an optional serialize method to the tool interface and warn\n              // if the result is not serializable.\n            }\n\n            return result;\n          } catch (error) {\n            throw new ToolExecutionError({\n              toolCallId,\n              toolName,\n              toolArgs: args,\n              cause: error,\n            });\n          }\n        },\n      });\n\n      return {\n        type: 'tool-result',\n        toolCallId,\n        toolName,\n        args,\n        result,\n      } as ToolResultArray<TOOLS>[number];\n    }),\n  );\n\n  return toolResults.filter(\n    (result): result is NonNullable<typeof result> => result != null,\n  );\n}\n\nclass DefaultGenerateTextResult<TOOLS extends ToolSet, OUTPUT>\n  implements GenerateTextResult<TOOLS, OUTPUT>\n{\n  readonly text: GenerateTextResult<TOOLS, OUTPUT>['text'];\n  readonly files: GenerateTextResult<TOOLS, OUTPUT>['files'];\n  readonly reasoning: GenerateTextResult<TOOLS, OUTPUT>['reasoning'];\n  readonly reasoningDetails: GenerateTextResult<\n    TOOLS,\n    OUTPUT\n  >['reasoningDetails'];\n  readonly toolCalls: GenerateTextResult<TOOLS, OUTPUT>['toolCalls'];\n  readonly toolResults: GenerateTextResult<TOOLS, OUTPUT>['toolResults'];\n  readonly finishReason: GenerateTextResult<TOOLS, OUTPUT>['finishReason'];\n  readonly usage: GenerateTextResult<TOOLS, OUTPUT>['usage'];\n  readonly warnings: GenerateTextResult<TOOLS, OUTPUT>['warnings'];\n  readonly steps: GenerateTextResult<TOOLS, OUTPUT>['steps'];\n  readonly logprobs: GenerateTextResult<TOOLS, OUTPUT>['logprobs'];\n  readonly experimental_providerMetadata: GenerateTextResult<\n    TOOLS,\n    OUTPUT\n  >['experimental_providerMetadata'];\n  readonly providerMetadata: GenerateTextResult<\n    TOOLS,\n    OUTPUT\n  >['providerMetadata'];\n  readonly response: GenerateTextResult<TOOLS, OUTPUT>['response'];\n  readonly request: GenerateTextResult<TOOLS, OUTPUT>['request'];\n  readonly sources: GenerateTextResult<TOOLS, OUTPUT>['sources'];\n\n  private readonly outputResolver: () => GenerateTextResult<\n    TOOLS,\n    OUTPUT\n  >['experimental_output'];\n\n  constructor(options: {\n    text: GenerateTextResult<TOOLS, OUTPUT>['text'];\n    files: GenerateTextResult<TOOLS, OUTPUT>['files'];\n    reasoning: GenerateTextResult<TOOLS, OUTPUT>['reasoning'];\n    reasoningDetails: GenerateTextResult<TOOLS, OUTPUT>['reasoningDetails'];\n    toolCalls: GenerateTextResult<TOOLS, OUTPUT>['toolCalls'];\n    toolResults: GenerateTextResult<TOOLS, OUTPUT>['toolResults'];\n    finishReason: GenerateTextResult<TOOLS, OUTPUT>['finishReason'];\n    usage: GenerateTextResult<TOOLS, OUTPUT>['usage'];\n    warnings: GenerateTextResult<TOOLS, OUTPUT>['warnings'];\n    logprobs: GenerateTextResult<TOOLS, OUTPUT>['logprobs'];\n    steps: GenerateTextResult<TOOLS, OUTPUT>['steps'];\n    providerMetadata: GenerateTextResult<TOOLS, OUTPUT>['providerMetadata'];\n    response: GenerateTextResult<TOOLS, OUTPUT>['response'];\n    request: GenerateTextResult<TOOLS, OUTPUT>['request'];\n    outputResolver: () => GenerateTextResult<\n      TOOLS,\n      OUTPUT\n    >['experimental_output'];\n    sources: GenerateTextResult<TOOLS, OUTPUT>['sources'];\n  }) {\n    this.text = options.text;\n    this.files = options.files;\n    this.reasoning = options.reasoning;\n    this.reasoningDetails = options.reasoningDetails;\n    this.toolCalls = options.toolCalls;\n    this.toolResults = options.toolResults;\n    this.finishReason = options.finishReason;\n    this.usage = options.usage;\n    this.warnings = options.warnings;\n    this.request = options.request;\n    this.response = options.response;\n    this.steps = options.steps;\n    this.experimental_providerMetadata = options.providerMetadata;\n    this.providerMetadata = options.providerMetadata;\n    this.logprobs = options.logprobs;\n    this.outputResolver = options.outputResolver;\n    this.sources = options.sources;\n  }\n\n  get experimental_output() {\n    return this.outputResolver();\n  }\n}\n\nfunction asReasoningDetails(\n  reasoning:\n    | string\n    | Array<\n        | { type: 'text'; text: string; signature?: string }\n        | { type: 'redacted'; data: string }\n      >\n    | undefined,\n): Array<\n  | { type: 'text'; text: string; signature?: string }\n  | { type: 'redacted'; data: string }\n> {\n  if (reasoning == null) {\n    return [];\n  }\n\n  if (typeof reasoning === 'string') {\n    return [{ type: 'text', text: reasoning }];\n  }\n\n  return reasoning;\n}\n\nfunction asFiles(\n  files:\n    | Array<{\n        data: string | Uint8Array;\n        mimeType: string;\n      }>\n    | undefined,\n): Array<GeneratedFile> {\n  return files?.map(file => new DefaultGeneratedFile(file)) ?? [];\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_NoOutputSpecifiedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when no output type is specified and output-related methods are called.\n */\nexport class NoOutputSpecifiedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message = 'No output specified.' }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is NoOutputSpecifiedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError, getErrorMessage, JSONValue } from '@ai-sdk/provider';\n\nconst name = 'AI_ToolExecutionError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class ToolExecutionError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly toolName: string;\n  readonly toolArgs: JSONValue;\n  readonly toolCallId: string;\n\n  constructor({\n    toolArgs,\n    toolName,\n    toolCallId,\n    cause,\n    message = `Error executing tool ${toolName}: ${getErrorMessage(cause)}`,\n  }: {\n    message?: string;\n    toolArgs: JSONValue;\n    toolName: string;\n    toolCallId: string;\n    cause: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.toolArgs = toolArgs;\n    this.toolName = toolName;\n    this.toolCallId = toolCallId;\n  }\n\n  static isInstance(error: unknown): error is ToolExecutionError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import {\n  LanguageModelV1FunctionTool,\n  LanguageModelV1ProviderDefinedTool,\n  LanguageModelV1ToolChoice,\n} from '@ai-sdk/provider';\nimport { asSchema } from '@ai-sdk/ui-utils';\nimport { ToolSet } from '../generate-text';\nimport { ToolChoice } from '../types/language-model';\nimport { isNonEmptyObject } from '../util/is-non-empty-object';\n\nexport function prepareToolsAndToolChoice<TOOLS extends ToolSet>({\n  tools,\n  toolChoice,\n  activeTools,\n}: {\n  tools: TOOLS | undefined;\n  toolChoice: ToolChoice<TOOLS> | undefined;\n  activeTools: Array<keyof TOOLS> | undefined;\n}): {\n  tools:\n    | Array<LanguageModelV1FunctionTool | LanguageModelV1ProviderDefinedTool>\n    | undefined;\n  toolChoice: LanguageModelV1ToolChoice | undefined;\n} {\n  if (!isNonEmptyObject(tools)) {\n    return {\n      tools: undefined,\n      toolChoice: undefined,\n    };\n  }\n\n  // when activeTools is provided, we only include the tools that are in the list:\n  const filteredTools =\n    activeTools != null\n      ? Object.entries(tools).filter(([name]) =>\n          activeTools.includes(name as keyof TOOLS),\n        )\n      : Object.entries(tools);\n\n  return {\n    tools: filteredTools.map(([name, tool]) => {\n      const toolType = tool.type;\n      switch (toolType) {\n        case undefined:\n        case 'function':\n          return {\n            type: 'function' as const,\n            name,\n            description: tool.description,\n            parameters: asSchema(tool.parameters).jsonSchema,\n          };\n        case 'provider-defined':\n          return {\n            type: 'provider-defined' as const,\n            name,\n            id: tool.id,\n            args: tool.args,\n          };\n        default: {\n          const exhaustiveCheck: never = toolType;\n          throw new Error(`Unsupported tool type: ${exhaustiveCheck}`);\n        }\n      }\n    }),\n    toolChoice:\n      toolChoice == null\n        ? { type: 'auto' }\n        : typeof toolChoice === 'string'\n          ? { type: toolChoice }\n          : { type: 'tool' as const, toolName: toolChoice.toolName as string },\n  };\n}\n", "export function isNonEmptyObject(\n  object: Record<string, unknown> | undefined | null,\n): object is Record<string, unknown> {\n  return object != null && Object.keys(object).length > 0;\n}\n", "const lastWhitespaceRegexp = /^([\\s\\S]*?)(\\s+)(\\S*)$/;\n\n/**\n * Splits the text on the last whitespace.\n *\n * Whitespace is defined as one or more whitespace characters,\n * e.g. space, tab, newline, etc.\n *\n * @param text - The text to split.\n * @returns The prefix, whitespace, and suffix. Undefined if there is no whitespace.\n */\nexport function splitOnLastWhitespace(text: string):\n  | {\n      prefix: string;\n      whitespace: string;\n      suffix: string;\n    }\n  | undefined {\n  const match = text.match(lastWhitespaceRegexp);\n  return match\n    ? { prefix: match[1], whitespace: match[2], suffix: match[3] }\n    : undefined;\n}\n", "import { splitOnLastWhitespace } from './split-on-last-whitespace';\n\nexport function removeTextAfterLastWhitespace(text: string): string {\n  const match = splitOnLastWhitespace(text);\n  return match ? match.prefix + match.whitespace : text;\n}\n", "import { LanguageModelV1FunctionToolCall } from '@ai-sdk/provider';\nimport { safeParseJSON, safeValidateTypes } from '@ai-sdk/provider-utils';\nimport { Schema, asSchema } from '@ai-sdk/ui-utils';\nimport { InvalidToolArgumentsError } from '../../errors/invalid-tool-arguments-error';\nimport { NoSuchToolError } from '../../errors/no-such-tool-error';\nimport { ToolCallRepairError } from '../../errors/tool-call-repair-error';\nimport { CoreMessage } from '../prompt';\nimport { inferParameters } from '../tool/tool';\nimport { ToolCallUnion } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair';\nimport { ToolSet } from './tool-set';\n\nexport async function parseToolCall<TOOLS extends ToolSet>({\n  toolCall,\n  tools,\n  repairToolCall,\n  system,\n  messages,\n}: {\n  toolCall: LanguageModelV1FunctionToolCall;\n  tools: TOOLS | undefined;\n  repairToolCall: ToolCallRepairFunction<TOOLS> | undefined;\n  system: string | undefined;\n  messages: CoreMessage[];\n}): Promise<ToolCallUnion<TOOLS>> {\n  if (tools == null) {\n    throw new NoSuchToolError({ toolName: toolCall.toolName });\n  }\n\n  try {\n    return await doParseToolCall({ toolCall, tools });\n  } catch (error) {\n    if (\n      repairToolCall == null ||\n      !(\n        NoSuchToolError.isInstance(error) ||\n        InvalidToolArgumentsError.isInstance(error)\n      )\n    ) {\n      throw error;\n    }\n\n    let repairedToolCall: LanguageModelV1FunctionToolCall | null = null;\n\n    try {\n      repairedToolCall = await repairToolCall({\n        toolCall,\n        tools,\n        parameterSchema: ({ toolName }) =>\n          asSchema(tools[toolName].parameters).jsonSchema,\n        system,\n        messages,\n        error,\n      });\n    } catch (repairError) {\n      throw new ToolCallRepairError({\n        cause: repairError,\n        originalError: error,\n      });\n    }\n\n    // no repaired tool call returned\n    if (repairedToolCall == null) {\n      throw error;\n    }\n\n    return await doParseToolCall({ toolCall: repairedToolCall, tools });\n  }\n}\n\nasync function doParseToolCall<TOOLS extends ToolSet>({\n  toolCall,\n  tools,\n}: {\n  toolCall: LanguageModelV1FunctionToolCall;\n  tools: TOOLS;\n}): Promise<ToolCallUnion<TOOLS>> {\n  const toolName = toolCall.toolName as keyof TOOLS & string;\n\n  const tool = tools[toolName];\n\n  if (tool == null) {\n    throw new NoSuchToolError({\n      toolName: toolCall.toolName,\n      availableTools: Object.keys(tools),\n    });\n  }\n\n  const schema = asSchema(tool.parameters) as Schema<\n    inferParameters<TOOLS[keyof TOOLS]['parameters']>\n  >;\n\n  // when the tool call has no arguments, we try passing an empty object to the schema\n  // (many LLMs generate empty strings for tool calls with no arguments)\n  const parseResult =\n    toolCall.args.trim() === ''\n      ? safeValidateTypes({ value: {}, schema })\n      : safeParseJSON({ text: toolCall.args, schema });\n\n  if (parseResult.success === false) {\n    throw new InvalidToolArgumentsError({\n      toolName,\n      toolArgs: toolCall.args,\n      cause: parseResult.error,\n    });\n  }\n\n  return {\n    type: 'tool-call',\n    toolCallId: toolCall.toolCallId,\n    toolName,\n    args: parseResult.value,\n  };\n}\n", "import { AISDKError, getErrorMessage } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidToolArgumentsError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidToolArgumentsError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly toolName: string;\n  readonly toolArgs: string;\n\n  constructor({\n    toolArgs,\n    toolName,\n    cause,\n    message = `Invalid arguments for tool ${toolName}: ${getErrorMessage(\n      cause,\n    )}`,\n  }: {\n    message?: string;\n    toolArgs: string;\n    toolName: string;\n    cause: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.toolArgs = toolArgs;\n    this.toolName = toolName;\n  }\n\n  static isInstance(error: unknown): error is InvalidToolArgumentsError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_NoSuchToolError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class NoSuchToolError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly toolName: string;\n  readonly availableTools: string[] | undefined;\n\n  constructor({\n    toolName,\n    availableTools = undefined,\n    message = `Model tried to call unavailable tool '${toolName}'. ${\n      availableTools === undefined\n        ? 'No tools are available.'\n        : `Available tools: ${availableTools.join(', ')}.`\n    }`,\n  }: {\n    toolName: string;\n    availableTools?: string[] | undefined;\n    message?: string;\n  }) {\n    super({ name, message });\n\n    this.toolName = toolName;\n    this.availableTools = availableTools;\n  }\n\n  static isInstance(error: unknown): error is NoSuchToolError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError, getErrorMessage } from '@ai-sdk/provider';\nimport { InvalidToolArgumentsError } from './invalid-tool-arguments-error';\nimport { NoSuchToolError } from './no-such-tool-error';\n\nconst name = 'AI_ToolCallRepairError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class ToolCallRepairError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly originalError: NoSuchToolError | InvalidToolArgumentsError;\n\n  constructor({\n    cause,\n    originalError,\n    message = `Error repairing tool call: ${getErrorMessage(cause)}`,\n  }: {\n    message?: string;\n    cause: unknown;\n    originalError: NoSuchToolError | InvalidToolArgumentsError;\n  }) {\n    super({ name, message, cause });\n    this.originalError = originalError;\n  }\n\n  static isInstance(error: unknown): error is ToolCallRepairError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "export type ReasoningDetail =\n  | { type: 'text'; text: string; signature?: string }\n  | { type: 'redacted'; data: string };\n\nexport function asReasoningText(\n  reasoning: Array<ReasoningDetail>,\n): string | undefined {\n  const reasoningText = reasoning\n    .filter(part => part.type === 'text')\n    .map(part => part.text)\n    .join('');\n\n  return reasoningText.length > 0 ? reasoningText : undefined;\n}\n", "import { ToolResultPart } from '../prompt';\nimport { GeneratedFile } from './generated-file';\nimport { ReasoningDetail } from './reasoning-detail';\nimport { ResponseMessage } from './step-result';\nimport { ToolCallArray } from './tool-call';\nimport { ToolResultArray } from './tool-result';\nimport { ToolSet } from './tool-set';\n\n/**\nConverts the result of a `generateText` call to a list of response messages.\n */\nexport function toResponseMessages<TOOLS extends ToolSet>({\n  text = '',\n  files,\n  reasoning,\n  tools,\n  toolCalls,\n  toolResults,\n  messageId,\n  generateMessageId,\n}: {\n  text: string | undefined;\n  files: Array<GeneratedFile>;\n  reasoning: Array<ReasoningDetail>;\n  tools: TOOLS;\n  toolCalls: ToolCallArray<TOOLS>;\n  toolResults: ToolResultArray<TOOLS>;\n  messageId: string;\n  generateMessageId: () => string;\n}): Array<ResponseMessage> {\n  const responseMessages: Array<ResponseMessage> = [];\n\n  responseMessages.push({\n    role: 'assistant',\n    content: [\n      ...reasoning.map(part =>\n        part.type === 'text'\n          ? { ...part, type: 'reasoning' as const }\n          : { ...part, type: 'redacted-reasoning' as const },\n      ),\n      // TODO language model v2: switch to order response content (instead of type-based ordering)\n      ...files.map(file => ({\n        type: 'file' as const,\n        data: file.base64,\n        mimeType: file.mimeType,\n      })),\n      { type: 'text' as const, text },\n      ...toolCalls,\n    ],\n    id: messageId,\n  });\n\n  if (toolResults.length > 0) {\n    responseMessages.push({\n      role: 'tool',\n      id: generateMessageId(),\n      content: toolResults.map((toolResult): ToolResultPart => {\n        const tool = tools[toolResult.toolName];\n        return tool?.experimental_toToolResultContent != null\n          ? {\n              type: 'tool-result',\n              toolCallId: toolResult.toolCallId,\n              toolName: toolResult.toolName,\n              result: tool.experimental_toToolResultContent(toolResult.result),\n              experimental_content: tool.experimental_toToolResultContent(\n                toolResult.result,\n              ),\n            }\n          : {\n              type: 'tool-result',\n              toolCallId: toolResult.toolCallId,\n              toolName: toolResult.toolName,\n              result: toolResult.result,\n            };\n      }),\n    });\n  }\n\n  return responseMessages;\n}\n", "import { safeParseJSON, safeValidateTypes } from '@ai-sdk/provider-utils';\nimport {\n  asSchema,\n  DeepPartial,\n  parsePartialJson,\n  Schema,\n} from '@ai-sdk/ui-utils';\nimport { z } from 'zod';\nimport { NoObjectGeneratedError } from '../../errors';\nimport { injectJsonInstruction } from '../generate-object/inject-json-instruction';\nimport {\n  LanguageModel,\n  LanguageModelV1CallOptions,\n} from '../types/language-model';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { LanguageModelUsage } from '../types/usage';\n\nexport interface Output<OUTPUT, PARTIAL> {\n  readonly type: 'object' | 'text';\n  injectIntoSystemPrompt(options: {\n    system: string | undefined;\n    model: LanguageModel;\n  }): string | undefined;\n\n  responseFormat: (options: {\n    model: LanguageModel;\n  }) => LanguageModelV1CallOptions['responseFormat'];\n\n  parsePartial(options: { text: string }): { partial: PARTIAL } | undefined;\n\n  parseOutput(\n    options: { text: string },\n    context: {\n      response: LanguageModelResponseMetadata;\n      usage: LanguageModelUsage;\n    },\n  ): OUTPUT;\n}\n\nexport const text = (): Output<string, string> => ({\n  type: 'text',\n\n  responseFormat: () => ({ type: 'text' }),\n\n  injectIntoSystemPrompt({ system }: { system: string | undefined }) {\n    return system;\n  },\n\n  parsePartial({ text }: { text: string }) {\n    return { partial: text };\n  },\n\n  parseOutput({ text }: { text: string }) {\n    return text;\n  },\n});\n\nexport const object = <OUTPUT>({\n  schema: inputSchema,\n}: {\n  schema: z.Schema<OUTPUT, z.ZodTypeDef, any> | Schema<OUTPUT>;\n}): Output<OUTPUT, DeepPartial<OUTPUT>> => {\n  const schema = asSchema(inputSchema);\n\n  return {\n    type: 'object',\n\n    responseFormat: ({ model }) => ({\n      type: 'json',\n      schema: model.supportsStructuredOutputs ? schema.jsonSchema : undefined,\n    }),\n\n    injectIntoSystemPrompt({ system, model }) {\n      // when the model supports structured outputs,\n      // we can use the system prompt as is:\n      return model.supportsStructuredOutputs\n        ? system\n        : injectJsonInstruction({\n            prompt: system,\n            schema: schema.jsonSchema,\n          });\n    },\n\n    parsePartial({ text }: { text: string }) {\n      const result = parsePartialJson(text);\n\n      switch (result.state) {\n        case 'failed-parse':\n        case 'undefined-input':\n          return undefined;\n\n        case 'repaired-parse':\n        case 'successful-parse':\n          return {\n            // Note: currently no validation of partial results:\n            partial: result.value as DeepPartial<OUTPUT>,\n          };\n\n        default: {\n          const _exhaustiveCheck: never = result.state;\n          throw new Error(`Unsupported parse state: ${_exhaustiveCheck}`);\n        }\n      }\n    },\n\n    parseOutput(\n      { text }: { text: string },\n      context: {\n        response: LanguageModelResponseMetadata;\n        usage: LanguageModelUsage;\n      },\n    ) {\n      const parseResult = safeParseJSON({ text });\n\n      if (!parseResult.success) {\n        throw new NoObjectGeneratedError({\n          message: 'No object generated: could not parse the response.',\n          cause: parseResult.error,\n          text,\n          response: context.response,\n          usage: context.usage,\n        });\n      }\n\n      const validationResult = safeValidateTypes({\n        value: parseResult.value,\n        schema,\n      });\n\n      if (!validationResult.success) {\n        throw new NoObjectGeneratedError({\n          message: 'No object generated: response did not match schema.',\n          cause: validationResult.error,\n          text,\n          response: context.response,\n          usage: context.usage,\n        });\n      }\n\n      return validationResult.value;\n    },\n  };\n};\n", "export {\n  AISDKError,\n  APICallError,\n  EmptyResponseBodyError,\n  InvalidPromptError,\n  InvalidResponseDataError,\n  JSONParseError,\n  LoadAPIKeyError,\n  NoContentGeneratedError,\n  NoSuchModelError,\n  TypeValidationError,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\n\nexport { InvalidArgumentError } from './invalid-argument-error';\nexport { InvalidStreamPartError } from './invalid-stream-part-error';\nexport { InvalidToolArgumentsError } from './invalid-tool-arguments-error';\nexport { NoImageGeneratedError } from './no-image-generated-error';\nexport { NoObjectGeneratedError } from './no-object-generated-error';\nexport { NoOutputSpecifiedError } from './no-output-specified-error';\nexport { NoSuchToolError } from './no-such-tool-error';\nexport { ToolCallRepairError } from './tool-call-repair-error';\nexport { ToolExecutionError } from './tool-execution-error';\nexport { MCPClientError } from './mcp-client-error';\n\nexport { InvalidDataContentError } from '../core/prompt/invalid-data-content-error';\nexport { InvalidMessageRoleError } from '../core/prompt/invalid-message-role-error';\nexport { MessageConversionError } from '../core/prompt/message-conversion-error';\nexport { DownloadError } from '../util/download-error';\nexport { RetryError } from '../util/retry-error';\n", "import { AISDKError } from '@ai-sdk/provider';\nimport { SingleRequestTextStreamPart } from '../core/generate-text/run-tools-transformation';\n\nconst name = 'AI_InvalidStreamPartError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidStreamPartError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly chunk: SingleRequestTextStreamPart<any>;\n\n  constructor({\n    chunk,\n    message,\n  }: {\n    chunk: SingleRequestTextStreamPart<any>;\n    message: string;\n  }) {\n    super({ name, message });\n\n    this.chunk = chunk;\n  }\n\n  static isInstance(error: unknown): error is InvalidStreamPartError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_MCPClientError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * An error occurred with the MCP client.\n */\nexport class MCPClientError extends AISDKError {\n  private readonly [symbol] = true;\n\n  constructor({\n    name = 'MCPClientError',\n    message,\n    cause,\n  }: {\n    name?: string;\n    message: string;\n    cause?: unknown;\n  }) {\n    super({ name, message, cause });\n  }\n\n  static isInstance(error: unknown): error is MCPClientError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { InvalidArgumentError } from '@ai-sdk/provider';\nimport { delay as originalDelay } from '@ai-sdk/provider-utils';\nimport { TextStreamPart } from './stream-text-result';\nimport { ToolSet } from './tool-set';\n\nconst CHUNKING_REGEXPS = {\n  word: /\\s*\\S+\\s+/m,\n  line: /[^\\n]*\\n/m,\n};\n\n/**\n * Smooths text streaming output.\n *\n * @param delayInMs - The delay in milliseconds between each chunk. Defaults to 10ms. Can be set to `null` to skip the delay.\n * @param chunking - Controls how the text is chunked for streaming. Use \"word\" to stream word by word (default), \"line\" to stream line by line, or provide a custom RegExp pattern for custom chunking.\n *\n * @returns A transform stream that smooths text streaming output.\n */\nexport function smoothStream<TOOLS extends ToolSet>({\n  delayInMs = 10,\n  chunking = 'word',\n  _internal: { delay = originalDelay } = {},\n}: {\n  delayInMs?: number | null;\n  chunking?: 'word' | 'line' | RegExp;\n  /**\n   * Internal. For test use only. May change without notice.\n   */\n  _internal?: {\n    delay?: (delayInMs: number | null) => Promise<void>;\n  };\n} = {}): (options: {\n  tools: TOOLS;\n}) => TransformStream<TextStreamPart<TOOLS>, TextStreamPart<TOOLS>> {\n  const chunkingRegexp =\n    typeof chunking === 'string' ? CHUNKING_REGEXPS[chunking] : chunking;\n\n  if (chunkingRegexp == null) {\n    throw new InvalidArgumentError({\n      argument: 'chunking',\n      message: `Chunking must be \"word\" or \"line\" or a RegExp. Received: ${chunking}`,\n    });\n  }\n\n  return () => {\n    let buffer = '';\n    return new TransformStream<TextStreamPart<TOOLS>, TextStreamPart<TOOLS>>({\n      async transform(chunk, controller) {\n        if (chunk.type === 'step-finish') {\n          if (buffer.length > 0) {\n            controller.enqueue({ type: 'text-delta', textDelta: buffer });\n            buffer = '';\n          }\n\n          controller.enqueue(chunk);\n          return;\n        }\n\n        if (chunk.type !== 'text-delta') {\n          controller.enqueue(chunk);\n          return;\n        }\n\n        buffer += chunk.textDelta;\n\n        let match;\n        while ((match = chunkingRegexp.exec(buffer)) != null) {\n          const chunk = match[0];\n          controller.enqueue({ type: 'text-delta', textDelta: chunk });\n          buffer = buffer.slice(chunk.length);\n\n          await delay(delayInMs);\n        }\n      },\n    });\n  };\n}\n", "import { AISDKError, LanguageModelV1Source } from '@ai-sdk/provider';\nimport { createIdGenerator, IDGenerator } from '@ai-sdk/provider-utils';\nimport { DataStreamString, formatDataStreamPart } from '@ai-sdk/ui-utils';\nimport { Span } from '@opentelemetry/api';\nimport { ServerResponse } from 'node:http';\nimport { InvalidArgumentError } from '../../errors/invalid-argument-error';\nimport { InvalidStreamPartError } from '../../errors/invalid-stream-part-error';\nimport { NoOutputSpecifiedError } from '../../errors/no-output-specified-error';\nimport { StreamData } from '../../streams/stream-data';\nimport { asArray } from '../../util/as-array';\nimport { DelayedPromise } from '../../util/delayed-promise';\nimport { DataStreamWriter } from '../data-stream/data-stream-writer';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { CoreAssistantMessage } from '../prompt/message';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { prepareRetries } from '../prompt/prepare-retries';\nimport { prepareToolsAndToolChoice } from '../prompt/prepare-tools-and-tool-choice';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport {\n  FinishReason,\n  LanguageModel,\n  LogProbs,\n  ToolChoice,\n} from '../types/language-model';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { ProviderMetadata, ProviderOptions } from '../types/provider-metadata';\nimport { addLanguageModelUsage, LanguageModelUsage } from '../types/usage';\nimport {\n  AsyncIterableStream,\n  createAsyncIterableStream,\n} from '../util/async-iterable-stream';\nimport { createStitchableStream } from '../util/create-stitchable-stream';\nimport { mergeStreams } from '../util/merge-streams';\nimport { now as originalNow } from '../util/now';\nimport { prepareOutgoingHttpHeaders } from '../util/prepare-outgoing-http-headers';\nimport { prepareResponseHeaders } from '../util/prepare-response-headers';\nimport { splitOnLastWhitespace } from '../util/split-on-last-whitespace';\nimport { writeToServerResponse } from '../util/write-to-server-response';\nimport { GeneratedFile } from './generated-file';\nimport { Output } from './output';\nimport { asReasoningText, ReasoningDetail } from './reasoning-detail';\nimport {\n  runToolsTransformation,\n  SingleRequestTextStreamPart,\n} from './run-tools-transformation';\nimport { ResponseMessage, StepResult } from './step-result';\nimport {\n  DataStreamOptions,\n  StreamTextResult,\n  TextStreamPart,\n} from './stream-text-result';\nimport { toResponseMessages } from './to-response-messages';\nimport { ToolCallUnion } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair';\nimport { ToolResultUnion } from './tool-result';\nimport { ToolSet } from './tool-set';\n\nconst originalGenerateId = createIdGenerator({\n  prefix: 'aitxt',\n  size: 24,\n});\n\nconst originalGenerateMessageId = createIdGenerator({\n  prefix: 'msg',\n  size: 24,\n});\n\n/**\nA transformation that is applied to the stream.\n\n@param stopStream - A function that stops the source stream.\n@param tools - The tools that are accessible to and can be called by the model. The model needs to support calling tools.\n */\nexport type StreamTextTransform<TOOLS extends ToolSet> = (options: {\n  tools: TOOLS; // for type inference\n  stopStream: () => void;\n}) => TransformStream<TextStreamPart<TOOLS>, TextStreamPart<TOOLS>>;\n\n/**\nCallback that is set using the `onError` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamTextOnErrorCallback = (event: {\n  error: unknown;\n}) => Promise<void> | void;\n\n/**\nCallback that is set using the `onStepFinish` option.\n\n@param stepResult - The result of the step.\n */\nexport type StreamTextOnStepFinishCallback<TOOLS extends ToolSet> = (\n  stepResult: StepResult<TOOLS>,\n) => Promise<void> | void;\n\n/**\nCallback that is set using the `onChunk` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamTextOnChunkCallback<TOOLS extends ToolSet> = (event: {\n  chunk: Extract<\n    TextStreamPart<TOOLS>,\n    {\n      type:\n        | 'text-delta'\n        | 'reasoning'\n        | 'source'\n        | 'tool-call'\n        | 'tool-call-streaming-start'\n        | 'tool-call-delta'\n        | 'tool-result';\n    }\n  >;\n}) => Promise<void> | void;\n\n/**\nCallback that is set using the `onFinish` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamTextOnFinishCallback<TOOLS extends ToolSet> = (\n  event: Omit<StepResult<TOOLS>, 'stepType' | 'isContinued'> & {\n    /**\nDetails for all steps.\n   */\n    readonly steps: StepResult<TOOLS>[];\n  },\n) => Promise<void> | void;\n\n/**\nGenerate a text and call tools for a given prompt using a language model.\n\nThis function streams the output. If you do not want to stream the output, use `generateText` instead.\n\n@param model - The language model to use.\n@param tools - Tools that are accessible to and can be called by the model. The model needs to support calling tools.\n\n@param system - A system message that will be part of the prompt.\n@param prompt - A simple text prompt. You can either use `prompt` or `messages` but not both.\n@param messages - A list of messages. You can either use `prompt` or `messages` but not both.\n\n@param maxTokens - Maximum number of tokens to generate.\n@param temperature - Temperature setting.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topP - Nucleus sampling.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topK - Only sample from the top K options for each subsequent token.\nUsed to remove \"long tail\" low probability responses.\nRecommended for advanced use cases only. You usually only need to use temperature.\n@param presencePenalty - Presence penalty setting.\nIt affects the likelihood of the model to repeat information that is already in the prompt.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param frequencyPenalty - Frequency penalty setting.\nIt affects the likelihood of the model to repeatedly use the same words or phrases.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param stopSequences - Stop sequences.\nIf set, the model will stop generating text when one of the stop sequences is generated.\n@param seed - The seed (integer) to use for random sampling.\nIf set and supported by the model, calls will generate deterministic results.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@param maxSteps - Maximum number of sequential LLM calls (steps), e.g. when you use tool calls.\n@param experimental_generateMessageId - Generate a unique ID for each message.\n\n@param onChunk - Callback that is called for each chunk of the stream. The stream processing will pause until the callback promise is resolved.\n@param onError - Callback that is called when an error occurs during streaming. You can use it to log errors.\n@param onStepFinish - Callback that is called when each step (LLM call) is finished, including intermediate steps.\n@param onFinish - Callback that is called when the LLM response and all request tool executions\n(for tools that have an `execute` function) are finished.\n\n@return\nA result object for accessing different stream types and additional information.\n */\nexport function streamText<\n  TOOLS extends ToolSet,\n  OUTPUT = never,\n  PARTIAL_OUTPUT = never,\n>({\n  model,\n  tools,\n  toolChoice,\n  system,\n  prompt,\n  messages,\n  maxRetries,\n  abortSignal,\n  headers,\n  maxSteps = 1,\n  experimental_generateMessageId: generateMessageId = originalGenerateMessageId,\n  experimental_output: output,\n  experimental_continueSteps: continueSteps = false,\n  experimental_telemetry: telemetry,\n  experimental_providerMetadata,\n  providerOptions = experimental_providerMetadata,\n  experimental_toolCallStreaming = false,\n  toolCallStreaming = experimental_toolCallStreaming,\n  experimental_activeTools: activeTools,\n  experimental_repairToolCall: repairToolCall,\n  experimental_transform: transform,\n  onChunk,\n  onError,\n  onFinish,\n  onStepFinish,\n  _internal: {\n    now = originalNow,\n    generateId = originalGenerateId,\n    currentDate = () => new Date(),\n  } = {},\n  ...settings\n}: CallSettings &\n  Prompt & {\n    /**\nThe language model to use.\n     */\n    model: LanguageModel;\n\n    /**\nThe tools that the model can call. The model needs to support calling tools.\n    */\n    tools?: TOOLS;\n\n    /**\nThe tool choice strategy. Default: 'auto'.\n     */\n    toolChoice?: ToolChoice<TOOLS>;\n\n    /**\nMaximum number of sequential LLM calls (steps), e.g. when you use tool calls. Must be at least 1.\n\nA maximum number is required to prevent infinite loops in the case of misconfigured tools.\n\nBy default, it's set to 1, which means that only a single LLM call is made.\n */\n    maxSteps?: number;\n\n    /**\nGenerate a unique ID for each message.\n     */\n    experimental_generateMessageId?: IDGenerator;\n\n    /**\nWhen enabled, the model will perform additional steps if the finish reason is \"length\" (experimental).\n\nBy default, it's set to false.\n     */\n    experimental_continueSteps?: boolean;\n\n    /**\nOptional telemetry configuration (experimental).\n     */\n    experimental_telemetry?: TelemetrySettings;\n\n    /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n    providerOptions?: ProviderOptions;\n\n    /**\n@deprecated Use `providerOptions` instead.\n */\n    experimental_providerMetadata?: ProviderMetadata;\n\n    /**\nLimits the tools that are available for the model to call without\nchanging the tool call and result types in the result.\n     */\n    experimental_activeTools?: Array<keyof TOOLS>;\n\n    /**\nOptional specification for parsing structured outputs from the LLM response.\n     */\n    experimental_output?: Output<OUTPUT, PARTIAL_OUTPUT>;\n\n    /**\nA function that attempts to repair a tool call that failed to parse.\n     */\n    experimental_repairToolCall?: ToolCallRepairFunction<TOOLS>;\n\n    /**\nEnable streaming of tool call deltas as they are generated. Disabled by default.\n     */\n    toolCallStreaming?: boolean;\n\n    /**\n@deprecated Use `toolCallStreaming` instead.\n     */\n    experimental_toolCallStreaming?: boolean;\n\n    /**\nOptional stream transformations.\nThey are applied in the order they are provided.\nThe stream transformations must maintain the stream structure for streamText to work correctly.\n     */\n    experimental_transform?:\n      | StreamTextTransform<TOOLS>\n      | Array<StreamTextTransform<TOOLS>>;\n\n    /**\nCallback that is called for each chunk of the stream.\nThe stream processing will pause until the callback promise is resolved.\n     */\n    onChunk?: StreamTextOnChunkCallback<TOOLS>;\n\n    /**\nCallback that is invoked when an error occurs during streaming.\nYou can use it to log errors.\nThe stream processing will pause until the callback promise is resolved.\n     */\n    onError?: StreamTextOnErrorCallback;\n\n    /**\nCallback that is called when the LLM response and all request tool executions\n(for tools that have an `execute` function) are finished.\n\nThe usage is the combined usage of all steps.\n     */\n    onFinish?: StreamTextOnFinishCallback<TOOLS>;\n\n    /**\nCallback that is called when each step (LLM call) is finished, including intermediate steps.\n    */\n    onStepFinish?: StreamTextOnStepFinishCallback<TOOLS>;\n\n    /**\nInternal. For test use only. May change without notice.\n     */\n    _internal?: {\n      now?: () => number;\n      generateId?: IDGenerator;\n      currentDate?: () => Date;\n    };\n  }): StreamTextResult<TOOLS, PARTIAL_OUTPUT> {\n  return new DefaultStreamTextResult<TOOLS, OUTPUT, PARTIAL_OUTPUT>({\n    model,\n    telemetry,\n    headers,\n    settings,\n    maxRetries,\n    abortSignal,\n    system,\n    prompt,\n    messages,\n    tools,\n    toolChoice,\n    toolCallStreaming,\n    transforms: asArray(transform),\n    activeTools,\n    repairToolCall,\n    maxSteps,\n    output,\n    continueSteps,\n    providerOptions,\n    onChunk,\n    onError,\n    onFinish,\n    onStepFinish,\n    now,\n    currentDate,\n    generateId,\n    generateMessageId,\n  });\n}\n\ntype EnrichedStreamPart<TOOLS extends ToolSet, PARTIAL_OUTPUT> = {\n  part: TextStreamPart<TOOLS>;\n  partialOutput: PARTIAL_OUTPUT | undefined;\n};\n\nfunction createOutputTransformStream<\n  TOOLS extends ToolSet,\n  OUTPUT,\n  PARTIAL_OUTPUT,\n>(\n  output: Output<OUTPUT, PARTIAL_OUTPUT> | undefined,\n): TransformStream<\n  TextStreamPart<TOOLS>,\n  EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n> {\n  if (!output) {\n    return new TransformStream<\n      TextStreamPart<TOOLS>,\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n    >({\n      transform(chunk, controller) {\n        controller.enqueue({ part: chunk, partialOutput: undefined });\n      },\n    });\n  }\n\n  let text = '';\n  let textChunk = '';\n  let lastPublishedJson = '';\n\n  function publishTextChunk({\n    controller,\n    partialOutput = undefined,\n  }: {\n    controller: TransformStreamDefaultController<\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n    >;\n    partialOutput?: PARTIAL_OUTPUT;\n  }) {\n    controller.enqueue({\n      part: { type: 'text-delta', textDelta: textChunk },\n      partialOutput,\n    });\n    textChunk = '';\n  }\n\n  return new TransformStream<\n    TextStreamPart<TOOLS>,\n    EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n  >({\n    transform(chunk, controller) {\n      // ensure that we publish the last text chunk before the step finish:\n      if (chunk.type === 'step-finish') {\n        publishTextChunk({ controller });\n      }\n\n      if (chunk.type !== 'text-delta') {\n        controller.enqueue({ part: chunk, partialOutput: undefined });\n        return;\n      }\n\n      text += chunk.textDelta;\n      textChunk += chunk.textDelta;\n\n      // only publish if partial json can be parsed:\n      const result = output.parsePartial({ text });\n      if (result != null) {\n        // only send new json if it has changed:\n        const currentJson = JSON.stringify(result.partial);\n        if (currentJson !== lastPublishedJson) {\n          publishTextChunk({ controller, partialOutput: result.partial });\n          lastPublishedJson = currentJson;\n        }\n      }\n    },\n\n    flush(controller) {\n      // publish remaining text (there should be none if the content was correctly formatted):\n      if (textChunk.length > 0) {\n        publishTextChunk({ controller });\n      }\n    },\n  });\n}\n\nclass DefaultStreamTextResult<TOOLS extends ToolSet, OUTPUT, PARTIAL_OUTPUT>\n  implements StreamTextResult<TOOLS, PARTIAL_OUTPUT>\n{\n  private readonly warningsPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['warnings']>\n  >();\n  private readonly usagePromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['usage']>\n  >();\n  private readonly finishReasonPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['finishReason']>\n  >();\n  private readonly providerMetadataPromise = new DelayedPromise<\n    Awaited<\n      StreamTextResult<TOOLS, PARTIAL_OUTPUT>['experimental_providerMetadata']\n    >\n  >();\n  private readonly textPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['text']>\n  >();\n  private readonly reasoningPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['reasoning']>\n  >();\n  private readonly reasoningDetailsPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['reasoningDetails']>\n  >();\n  private readonly sourcesPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['sources']>\n  >();\n  private readonly filesPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['files']>\n  >();\n  private readonly toolCallsPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['toolCalls']>\n  >();\n  private readonly toolResultsPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['toolResults']>\n  >();\n  private readonly requestPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['request']>\n  >();\n  private readonly responsePromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['response']>\n  >();\n  private readonly stepsPromise = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['steps']>\n  >();\n\n  private readonly addStream: (\n    stream: ReadableStream<TextStreamPart<TOOLS>>,\n  ) => void;\n\n  private readonly closeStream: () => void;\n\n  private baseStream: ReadableStream<EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>>;\n\n  private output: Output<OUTPUT, PARTIAL_OUTPUT> | undefined;\n\n  constructor({\n    model,\n    telemetry,\n    headers,\n    settings,\n    maxRetries: maxRetriesArg,\n    abortSignal,\n    system,\n    prompt,\n    messages,\n    tools,\n    toolChoice,\n    toolCallStreaming,\n    transforms,\n    activeTools,\n    repairToolCall,\n    maxSteps,\n    output,\n    continueSteps,\n    providerOptions,\n    now,\n    currentDate,\n    generateId,\n    generateMessageId,\n    onChunk,\n    onError,\n    onFinish,\n    onStepFinish,\n  }: {\n    model: LanguageModel;\n    telemetry: TelemetrySettings | undefined;\n    headers: Record<string, string | undefined> | undefined;\n    settings: Omit<CallSettings, 'abortSignal' | 'headers'>;\n    maxRetries: number | undefined;\n    abortSignal: AbortSignal | undefined;\n    system: Prompt['system'];\n    prompt: Prompt['prompt'];\n    messages: Prompt['messages'];\n    tools: TOOLS | undefined;\n    toolChoice: ToolChoice<TOOLS> | undefined;\n    toolCallStreaming: boolean;\n    transforms: Array<StreamTextTransform<TOOLS>>;\n    activeTools: Array<keyof TOOLS> | undefined;\n    repairToolCall: ToolCallRepairFunction<TOOLS> | undefined;\n    maxSteps: number;\n    output: Output<OUTPUT, PARTIAL_OUTPUT> | undefined;\n    continueSteps: boolean;\n    providerOptions: ProviderOptions | undefined;\n    now: () => number;\n    currentDate: () => Date;\n    generateId: () => string;\n    generateMessageId: () => string;\n\n    // callbacks:\n    onChunk: undefined | StreamTextOnChunkCallback<TOOLS>;\n    onError: undefined | StreamTextOnErrorCallback;\n    onFinish: undefined | StreamTextOnFinishCallback<TOOLS>;\n    onStepFinish: undefined | StreamTextOnStepFinishCallback<TOOLS>;\n  }) {\n    if (maxSteps < 1) {\n      throw new InvalidArgumentError({\n        parameter: 'maxSteps',\n        value: maxSteps,\n        message: 'maxSteps must be at least 1',\n      });\n    }\n\n    this.output = output;\n\n    // event processor for telemetry, invoking callbacks, etc.\n    // The event processor reads the transformed stream to enable correct\n    // recording of the final transformed outputs.\n    let recordedStepText = '';\n    let recordedContinuationText = '';\n    let recordedFullText = '';\n\n    let stepReasoning: Array<ReasoningDetail> = [];\n    let stepFiles: Array<GeneratedFile> = [];\n    let activeReasoningText: undefined | (ReasoningDetail & { type: 'text' }) =\n      undefined;\n\n    let recordedStepSources: LanguageModelV1Source[] = [];\n    const recordedSources: LanguageModelV1Source[] = [];\n\n    const recordedResponse: LanguageModelResponseMetadata & {\n      messages: Array<ResponseMessage>;\n    } = {\n      id: generateId(),\n      timestamp: currentDate(),\n      modelId: model.modelId,\n      messages: [],\n    };\n    let recordedToolCalls: ToolCallUnion<TOOLS>[] = [];\n    let recordedToolResults: ToolResultUnion<TOOLS>[] = [];\n    let recordedFinishReason: FinishReason | undefined = undefined;\n    let recordedUsage: LanguageModelUsage | undefined = undefined;\n    let stepType: 'initial' | 'continue' | 'tool-result' = 'initial';\n    const recordedSteps: StepResult<TOOLS>[] = [];\n    let rootSpan!: Span;\n\n    const eventProcessor = new TransformStream<\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>,\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n    >({\n      async transform(chunk, controller) {\n        controller.enqueue(chunk); // forward the chunk to the next stream\n\n        const { part } = chunk;\n\n        if (\n          part.type === 'text-delta' ||\n          part.type === 'reasoning' ||\n          part.type === 'source' ||\n          part.type === 'tool-call' ||\n          part.type === 'tool-result' ||\n          part.type === 'tool-call-streaming-start' ||\n          part.type === 'tool-call-delta'\n        ) {\n          await onChunk?.({ chunk: part });\n        }\n\n        if (part.type === 'error') {\n          await onError?.({ error: part.error });\n        }\n\n        if (part.type === 'text-delta') {\n          recordedStepText += part.textDelta;\n          recordedContinuationText += part.textDelta;\n          recordedFullText += part.textDelta;\n        }\n\n        if (part.type === 'reasoning') {\n          if (activeReasoningText == null) {\n            activeReasoningText = { type: 'text', text: part.textDelta };\n            stepReasoning.push(activeReasoningText);\n          } else {\n            activeReasoningText.text += part.textDelta;\n          }\n        }\n\n        if (part.type === 'reasoning-signature') {\n          if (activeReasoningText == null) {\n            throw new AISDKError({\n              name: 'InvalidStreamPart',\n              message: 'reasoning-signature without reasoning',\n            });\n          }\n\n          activeReasoningText.signature = part.signature;\n          activeReasoningText = undefined; // signature concludes reasoning part\n        }\n\n        if (part.type === 'redacted-reasoning') {\n          stepReasoning.push({ type: 'redacted', data: part.data });\n        }\n\n        if (part.type === 'file') {\n          stepFiles.push(part);\n        }\n\n        if (part.type === 'source') {\n          recordedSources.push(part.source);\n          recordedStepSources.push(part.source);\n        }\n\n        if (part.type === 'tool-call') {\n          recordedToolCalls.push(part);\n        }\n\n        if (part.type === 'tool-result') {\n          recordedToolResults.push(part);\n        }\n\n        if (part.type === 'step-finish') {\n          const stepMessages = toResponseMessages({\n            text: recordedContinuationText,\n            files: stepFiles,\n            reasoning: stepReasoning,\n            tools: tools ?? ({} as TOOLS),\n            toolCalls: recordedToolCalls,\n            toolResults: recordedToolResults,\n            messageId: part.messageId,\n            generateMessageId,\n          });\n\n          // determine the next step type\n          const currentStep = recordedSteps.length;\n          let nextStepType: 'done' | 'continue' | 'tool-result' = 'done';\n          if (currentStep + 1 < maxSteps) {\n            if (\n              continueSteps &&\n              part.finishReason === 'length' &&\n              // only use continue when there are no tool calls:\n              recordedToolCalls.length === 0\n            ) {\n              nextStepType = 'continue';\n            } else if (\n              // there are tool calls:\n              recordedToolCalls.length > 0 &&\n              // all current tool calls have results:\n              recordedToolResults.length === recordedToolCalls.length\n            ) {\n              nextStepType = 'tool-result';\n            }\n          }\n\n          // Add step information (after response messages are updated):\n          const currentStepResult: StepResult<TOOLS> = {\n            stepType,\n            text: recordedStepText,\n            reasoning: asReasoningText(stepReasoning),\n            reasoningDetails: stepReasoning,\n            files: stepFiles,\n            sources: recordedStepSources,\n            toolCalls: recordedToolCalls,\n            toolResults: recordedToolResults,\n            finishReason: part.finishReason,\n            usage: part.usage,\n            warnings: part.warnings,\n            logprobs: part.logprobs,\n            request: part.request,\n            response: {\n              ...part.response,\n              messages: [...recordedResponse.messages, ...stepMessages],\n            },\n            providerMetadata: part.experimental_providerMetadata,\n            experimental_providerMetadata: part.experimental_providerMetadata,\n            isContinued: part.isContinued,\n          };\n\n          await onStepFinish?.(currentStepResult);\n\n          recordedSteps.push(currentStepResult);\n\n          recordedToolCalls = [];\n          recordedToolResults = [];\n          recordedStepText = '';\n          recordedStepSources = [];\n          stepReasoning = [];\n          stepFiles = [];\n          activeReasoningText = undefined;\n\n          if (nextStepType !== 'done') {\n            stepType = nextStepType;\n          }\n\n          if (nextStepType !== 'continue') {\n            recordedResponse.messages.push(...stepMessages);\n            recordedContinuationText = '';\n          }\n        }\n\n        if (part.type === 'finish') {\n          recordedResponse.id = part.response.id;\n          recordedResponse.timestamp = part.response.timestamp;\n          recordedResponse.modelId = part.response.modelId;\n          recordedResponse.headers = part.response.headers;\n          recordedUsage = part.usage;\n          recordedFinishReason = part.finishReason;\n        }\n      },\n\n      async flush(controller) {\n        try {\n          if (recordedSteps.length === 0) {\n            return; // no steps recorded (e.g. in error scenario)\n          }\n\n          // from last step (when there are errors there may be no last step)\n          const lastStep = recordedSteps[recordedSteps.length - 1];\n\n          self.warningsPromise.resolve(lastStep.warnings);\n          self.requestPromise.resolve(lastStep.request);\n          self.responsePromise.resolve(lastStep.response);\n          self.toolCallsPromise.resolve(lastStep.toolCalls);\n          self.toolResultsPromise.resolve(lastStep.toolResults);\n          self.providerMetadataPromise.resolve(\n            lastStep.experimental_providerMetadata,\n          );\n          self.reasoningPromise.resolve(lastStep.reasoning);\n          self.reasoningDetailsPromise.resolve(lastStep.reasoningDetails);\n\n          // derived:\n          const finishReason = recordedFinishReason ?? 'unknown';\n          const usage = recordedUsage ?? {\n            completionTokens: NaN,\n            promptTokens: NaN,\n            totalTokens: NaN,\n          };\n\n          // from finish:\n          self.finishReasonPromise.resolve(finishReason);\n          self.usagePromise.resolve(usage);\n\n          // aggregate results:\n          self.textPromise.resolve(recordedFullText);\n          self.sourcesPromise.resolve(recordedSources);\n          self.filesPromise.resolve(lastStep.files);\n          self.stepsPromise.resolve(recordedSteps);\n\n          // call onFinish callback:\n          await onFinish?.({\n            finishReason,\n            logprobs: undefined,\n            usage,\n            text: recordedFullText,\n            reasoning: lastStep.reasoning,\n            reasoningDetails: lastStep.reasoningDetails,\n            files: lastStep.files,\n            sources: lastStep.sources,\n            toolCalls: lastStep.toolCalls,\n            toolResults: lastStep.toolResults,\n            request: lastStep.request ?? {},\n            response: lastStep.response,\n            warnings: lastStep.warnings,\n            providerMetadata: lastStep.providerMetadata,\n            experimental_providerMetadata:\n              lastStep.experimental_providerMetadata,\n            steps: recordedSteps,\n          });\n\n          // Add response information to the root span:\n          rootSpan.setAttributes(\n            selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                'ai.response.finishReason': finishReason,\n                'ai.response.text': { output: () => recordedFullText },\n                'ai.response.toolCalls': {\n                  output: () =>\n                    lastStep.toolCalls?.length\n                      ? JSON.stringify(lastStep.toolCalls)\n                      : undefined,\n                },\n\n                'ai.usage.promptTokens': usage.promptTokens,\n                'ai.usage.completionTokens': usage.completionTokens,\n              },\n            }),\n          );\n        } catch (error) {\n          controller.error(error);\n        } finally {\n          rootSpan.end();\n        }\n      },\n    });\n\n    // initialize the stitchable stream and the transformed stream:\n    const stitchableStream = createStitchableStream<TextStreamPart<TOOLS>>();\n    this.addStream = stitchableStream.addStream;\n    this.closeStream = stitchableStream.close;\n\n    let stream = stitchableStream.stream;\n\n    // transform the stream before output parsing\n    // to enable replacement of stream segments:\n    for (const transform of transforms) {\n      stream = stream.pipeThrough(\n        transform({\n          tools: tools as TOOLS,\n          stopStream() {\n            stitchableStream.terminate();\n          },\n        }),\n      );\n    }\n\n    this.baseStream = stream\n      .pipeThrough(createOutputTransformStream(output))\n      .pipeThrough(eventProcessor);\n\n    const { maxRetries, retry } = prepareRetries({\n      maxRetries: maxRetriesArg,\n    });\n\n    const tracer = getTracer(telemetry);\n\n    const baseTelemetryAttributes = getBaseTelemetryAttributes({\n      model,\n      telemetry,\n      headers,\n      settings: { ...settings, maxRetries },\n    });\n\n    const initialPrompt = standardizePrompt({\n      prompt: {\n        system: output?.injectIntoSystemPrompt({ system, model }) ?? system,\n        prompt,\n        messages,\n      },\n      tools,\n    });\n\n    const self = this;\n\n    recordSpan({\n      name: 'ai.streamText',\n      attributes: selectTelemetryAttributes({\n        telemetry,\n        attributes: {\n          ...assembleOperationName({ operationId: 'ai.streamText', telemetry }),\n          ...baseTelemetryAttributes,\n          // specific settings that only make sense on the outer level:\n          'ai.prompt': {\n            input: () => JSON.stringify({ system, prompt, messages }),\n          },\n          'ai.settings.maxSteps': maxSteps,\n        },\n      }),\n      tracer,\n      endWhenDone: false,\n      fn: async rootSpanArg => {\n        rootSpan = rootSpanArg;\n\n        async function streamStep({\n          currentStep,\n          responseMessages,\n          usage,\n          stepType,\n          previousStepText,\n          hasLeadingWhitespace,\n          messageId,\n        }: {\n          currentStep: number;\n          responseMessages: Array<ResponseMessage>;\n          usage: LanguageModelUsage;\n          stepType: 'initial' | 'continue' | 'tool-result';\n          previousStepText: string;\n          hasLeadingWhitespace: boolean;\n          messageId: string;\n        }) {\n          // after the 1st step, we need to switch to messages format:\n          const promptFormat =\n            responseMessages.length === 0 ? initialPrompt.type : 'messages';\n\n          const stepInputMessages = [\n            ...initialPrompt.messages,\n            ...responseMessages,\n          ];\n\n          const promptMessages = await convertToLanguageModelPrompt({\n            prompt: {\n              type: promptFormat,\n              system: initialPrompt.system,\n              messages: stepInputMessages,\n            },\n            modelSupportsImageUrls: model.supportsImageUrls,\n            modelSupportsUrl: model.supportsUrl?.bind(model), // support 'this' context\n          });\n\n          const mode = {\n            type: 'regular' as const,\n            ...prepareToolsAndToolChoice({ tools, toolChoice, activeTools }),\n          };\n\n          const {\n            result: { stream, warnings, rawResponse, request },\n            doStreamSpan,\n            startTimestampMs,\n          } = await retry(() =>\n            recordSpan({\n              name: 'ai.streamText.doStream',\n              attributes: selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  ...assembleOperationName({\n                    operationId: 'ai.streamText.doStream',\n                    telemetry,\n                  }),\n                  ...baseTelemetryAttributes,\n                  'ai.prompt.format': {\n                    input: () => promptFormat,\n                  },\n                  'ai.prompt.messages': {\n                    input: () => JSON.stringify(promptMessages),\n                  },\n                  'ai.prompt.tools': {\n                    // convert the language model level tools:\n                    input: () => mode.tools?.map(tool => JSON.stringify(tool)),\n                  },\n                  'ai.prompt.toolChoice': {\n                    input: () =>\n                      mode.toolChoice != null\n                        ? JSON.stringify(mode.toolChoice)\n                        : undefined,\n                  },\n\n                  // standardized gen-ai llm span attributes:\n                  'gen_ai.system': model.provider,\n                  'gen_ai.request.model': model.modelId,\n                  'gen_ai.request.frequency_penalty': settings.frequencyPenalty,\n                  'gen_ai.request.max_tokens': settings.maxTokens,\n                  'gen_ai.request.presence_penalty': settings.presencePenalty,\n                  'gen_ai.request.stop_sequences': settings.stopSequences,\n                  'gen_ai.request.temperature': settings.temperature,\n                  'gen_ai.request.top_k': settings.topK,\n                  'gen_ai.request.top_p': settings.topP,\n                },\n              }),\n              tracer,\n              endWhenDone: false,\n              fn: async doStreamSpan => ({\n                startTimestampMs: now(), // get before the call\n                doStreamSpan,\n                result: await model.doStream({\n                  mode,\n                  ...prepareCallSettings(settings),\n                  inputFormat: promptFormat,\n                  responseFormat: output?.responseFormat({ model }),\n                  prompt: promptMessages,\n                  providerMetadata: providerOptions,\n                  abortSignal,\n                  headers,\n                }),\n              }),\n            }),\n          );\n\n          const transformedStream = runToolsTransformation({\n            tools,\n            generatorStream: stream,\n            toolCallStreaming,\n            tracer,\n            telemetry,\n            system,\n            messages: stepInputMessages,\n            repairToolCall,\n            abortSignal,\n          });\n\n          const stepRequest = request ?? {};\n          const stepToolCalls: ToolCallUnion<TOOLS>[] = [];\n          const stepToolResults: ToolResultUnion<TOOLS>[] = [];\n\n          const stepReasoning: Array<ReasoningDetail> = [];\n          const stepFiles: Array<GeneratedFile> = [];\n          let activeReasoningText:\n            | undefined\n            | (ReasoningDetail & { type: 'text' }) = undefined;\n\n          let stepFinishReason: FinishReason = 'unknown';\n          let stepUsage: LanguageModelUsage = {\n            promptTokens: 0,\n            completionTokens: 0,\n            totalTokens: 0,\n          };\n          let stepProviderMetadata: ProviderMetadata | undefined;\n          let stepFirstChunk = true;\n          let stepText = '';\n          let fullStepText = stepType === 'continue' ? previousStepText : '';\n          let stepLogProbs: LogProbs | undefined;\n          let stepResponse: { id: string; timestamp: Date; modelId: string } = {\n            id: generateId(),\n            timestamp: currentDate(),\n            modelId: model.modelId,\n          };\n\n          // chunk buffer when using continue:\n          let chunkBuffer = '';\n          let chunkTextPublished = false;\n          let inWhitespacePrefix = true;\n          let hasWhitespaceSuffix = false; // for next step. when true, step ended with whitespace\n\n          async function publishTextChunk({\n            controller,\n            chunk,\n          }: {\n            controller: TransformStreamDefaultController<TextStreamPart<TOOLS>>;\n            chunk: TextStreamPart<TOOLS> & { type: 'text-delta' };\n          }) {\n            controller.enqueue(chunk);\n\n            stepText += chunk.textDelta;\n            fullStepText += chunk.textDelta;\n            chunkTextPublished = true;\n            hasWhitespaceSuffix = chunk.textDelta.trimEnd() !== chunk.textDelta;\n          }\n\n          self.addStream(\n            transformedStream.pipeThrough(\n              new TransformStream<\n                SingleRequestTextStreamPart<TOOLS>,\n                TextStreamPart<TOOLS>\n              >({\n                async transform(chunk, controller): Promise<void> {\n                  if (stepFirstChunk) {\n                    // Telemetry for first chunk:\n                    const msToFirstChunk = now() - startTimestampMs;\n\n                    stepFirstChunk = false;\n\n                    doStreamSpan.addEvent('ai.stream.firstChunk', {\n                      'ai.response.msToFirstChunk': msToFirstChunk,\n                    });\n\n                    doStreamSpan.setAttributes({\n                      'ai.response.msToFirstChunk': msToFirstChunk,\n                    });\n\n                    // Step start:\n                    controller.enqueue({\n                      type: 'step-start',\n                      messageId,\n                      request: stepRequest,\n                      warnings: warnings ?? [],\n                    });\n                  }\n\n                  // Filter out empty text deltas\n                  if (\n                    chunk.type === 'text-delta' &&\n                    chunk.textDelta.length === 0\n                  ) {\n                    return;\n                  }\n\n                  const chunkType = chunk.type;\n                  switch (chunkType) {\n                    case 'text-delta': {\n                      if (continueSteps) {\n                        // when a new step starts, leading whitespace is to be discarded\n                        // when there is already preceding whitespace in the chunk buffer\n                        const trimmedChunkText =\n                          inWhitespacePrefix && hasLeadingWhitespace\n                            ? chunk.textDelta.trimStart()\n                            : chunk.textDelta;\n\n                        if (trimmedChunkText.length === 0) {\n                          break;\n                        }\n\n                        inWhitespacePrefix = false;\n                        chunkBuffer += trimmedChunkText;\n\n                        const split = splitOnLastWhitespace(chunkBuffer);\n\n                        // publish the text until the last whitespace:\n                        if (split != null) {\n                          chunkBuffer = split.suffix;\n\n                          await publishTextChunk({\n                            controller,\n                            chunk: {\n                              type: 'text-delta',\n                              textDelta: split.prefix + split.whitespace,\n                            },\n                          });\n                        }\n                      } else {\n                        await publishTextChunk({ controller, chunk });\n                      }\n                      break;\n                    }\n\n                    case 'reasoning': {\n                      controller.enqueue(chunk);\n\n                      if (activeReasoningText == null) {\n                        activeReasoningText = {\n                          type: 'text',\n                          text: chunk.textDelta,\n                        };\n                        stepReasoning.push(activeReasoningText);\n                      } else {\n                        activeReasoningText.text += chunk.textDelta;\n                      }\n\n                      break;\n                    }\n\n                    case 'reasoning-signature': {\n                      controller.enqueue(chunk);\n\n                      if (activeReasoningText == null) {\n                        throw new InvalidStreamPartError({\n                          chunk,\n                          message: 'reasoning-signature without reasoning',\n                        });\n                      }\n\n                      activeReasoningText.signature = chunk.signature;\n                      activeReasoningText = undefined; // signature concludes reasoning part\n                      break;\n                    }\n\n                    case 'redacted-reasoning': {\n                      controller.enqueue(chunk);\n                      stepReasoning.push({\n                        type: 'redacted',\n                        data: chunk.data,\n                      });\n\n                      break;\n                    }\n\n                    case 'tool-call': {\n                      controller.enqueue(chunk);\n                      // store tool calls for onFinish callback and toolCalls promise:\n                      stepToolCalls.push(chunk);\n                      break;\n                    }\n\n                    case 'tool-result': {\n                      controller.enqueue(chunk);\n                      // store tool results for onFinish callback and toolResults promise:\n                      stepToolResults.push(chunk);\n                      break;\n                    }\n\n                    case 'response-metadata': {\n                      stepResponse = {\n                        id: chunk.id ?? stepResponse.id,\n                        timestamp: chunk.timestamp ?? stepResponse.timestamp,\n                        modelId: chunk.modelId ?? stepResponse.modelId,\n                      };\n                      break;\n                    }\n\n                    case 'finish': {\n                      // Note: tool executions might not be finished yet when the finish event is emitted.\n                      // store usage and finish reason for promises and onFinish callback:\n                      stepUsage = chunk.usage;\n                      stepFinishReason = chunk.finishReason;\n                      stepProviderMetadata =\n                        chunk.experimental_providerMetadata;\n                      stepLogProbs = chunk.logprobs;\n\n                      // Telemetry for finish event timing\n                      // (since tool executions can take longer and distort calculations)\n                      const msToFinish = now() - startTimestampMs;\n                      doStreamSpan.addEvent('ai.stream.finish');\n                      doStreamSpan.setAttributes({\n                        'ai.response.msToFinish': msToFinish,\n                        'ai.response.avgCompletionTokensPerSecond':\n                          (1000 * stepUsage.completionTokens) / msToFinish,\n                      });\n\n                      break;\n                    }\n\n                    case 'file': {\n                      stepFiles.push(chunk);\n                      controller.enqueue(chunk);\n                      break;\n                    }\n\n                    // forward:\n                    case 'source':\n                    case 'tool-call-streaming-start':\n                    case 'tool-call-delta': {\n                      controller.enqueue(chunk);\n                      break;\n                    }\n\n                    case 'error': {\n                      controller.enqueue(chunk);\n                      stepFinishReason = 'error';\n                      break;\n                    }\n\n                    default: {\n                      const exhaustiveCheck: never = chunkType;\n                      throw new Error(`Unknown chunk type: ${exhaustiveCheck}`);\n                    }\n                  }\n                },\n\n                // invoke onFinish callback and resolve toolResults promise when the stream is about to close:\n                async flush(controller) {\n                  const stepToolCallsJson =\n                    stepToolCalls.length > 0\n                      ? JSON.stringify(stepToolCalls)\n                      : undefined;\n\n                  // determine the next step type\n                  let nextStepType: 'done' | 'continue' | 'tool-result' =\n                    'done';\n                  if (currentStep + 1 < maxSteps) {\n                    if (\n                      continueSteps &&\n                      stepFinishReason === 'length' &&\n                      // only use continue when there are no tool calls:\n                      stepToolCalls.length === 0\n                    ) {\n                      nextStepType = 'continue';\n                    } else if (\n                      // there are tool calls:\n                      stepToolCalls.length > 0 &&\n                      // all current tool calls have results:\n                      stepToolResults.length === stepToolCalls.length\n                    ) {\n                      nextStepType = 'tool-result';\n                    }\n                  }\n\n                  // when using continuation, publish buffer on final step or if there\n                  // was no whitespace in the step:\n                  if (\n                    continueSteps &&\n                    chunkBuffer.length > 0 &&\n                    (nextStepType !== 'continue' || // when the next step is a regular step, publish the buffer\n                      (stepType === 'continue' && !chunkTextPublished)) // when the next step is a continue step, publish the buffer if no text was published in the step\n                  ) {\n                    await publishTextChunk({\n                      controller,\n                      chunk: {\n                        type: 'text-delta',\n                        textDelta: chunkBuffer,\n                      },\n                    });\n                    chunkBuffer = '';\n                  }\n\n                  // record telemetry information first to ensure best effort timing\n                  try {\n                    doStreamSpan.setAttributes(\n                      selectTelemetryAttributes({\n                        telemetry,\n                        attributes: {\n                          'ai.response.finishReason': stepFinishReason,\n                          'ai.response.text': { output: () => stepText },\n                          'ai.response.toolCalls': {\n                            output: () => stepToolCallsJson,\n                          },\n                          'ai.response.id': stepResponse.id,\n                          'ai.response.model': stepResponse.modelId,\n                          'ai.response.timestamp':\n                            stepResponse.timestamp.toISOString(),\n\n                          'ai.usage.promptTokens': stepUsage.promptTokens,\n                          'ai.usage.completionTokens':\n                            stepUsage.completionTokens,\n\n                          // standardized gen-ai llm span attributes:\n                          'gen_ai.response.finish_reasons': [stepFinishReason],\n                          'gen_ai.response.id': stepResponse.id,\n                          'gen_ai.response.model': stepResponse.modelId,\n                          'gen_ai.usage.input_tokens': stepUsage.promptTokens,\n                          'gen_ai.usage.output_tokens':\n                            stepUsage.completionTokens,\n                        },\n                      }),\n                    );\n                  } catch (error) {\n                    // ignore error setting telemetry attributes\n                  } finally {\n                    // finish doStreamSpan before other operations for correct timing:\n                    doStreamSpan.end();\n                  }\n\n                  controller.enqueue({\n                    type: 'step-finish',\n                    finishReason: stepFinishReason,\n                    usage: stepUsage,\n                    providerMetadata: stepProviderMetadata,\n                    experimental_providerMetadata: stepProviderMetadata,\n                    logprobs: stepLogProbs,\n                    request: stepRequest,\n                    response: {\n                      ...stepResponse,\n                      headers: rawResponse?.headers,\n                    },\n                    warnings,\n                    isContinued: nextStepType === 'continue',\n                    messageId,\n                  });\n\n                  const combinedUsage = addLanguageModelUsage(usage, stepUsage);\n\n                  if (nextStepType === 'done') {\n                    controller.enqueue({\n                      type: 'finish',\n                      finishReason: stepFinishReason,\n                      usage: combinedUsage,\n                      providerMetadata: stepProviderMetadata,\n                      experimental_providerMetadata: stepProviderMetadata,\n                      logprobs: stepLogProbs,\n                      response: {\n                        ...stepResponse,\n                        headers: rawResponse?.headers,\n                      },\n                    });\n\n                    self.closeStream(); // close the stitchable stream\n                  } else {\n                    // append to messages for the next step:\n                    if (stepType === 'continue') {\n                      // continue step: update the last assistant message\n                      // continue is only possible when there are no tool calls,\n                      // so we can assume that there is a single last assistant message:\n                      const lastMessage = responseMessages[\n                        responseMessages.length - 1\n                      ] as CoreAssistantMessage;\n\n                      if (typeof lastMessage.content === 'string') {\n                        lastMessage.content += stepText;\n                      } else {\n                        lastMessage.content.push({\n                          text: stepText,\n                          type: 'text',\n                        });\n                      }\n                    } else {\n                      responseMessages.push(\n                        ...toResponseMessages({\n                          text: stepText,\n                          files: stepFiles,\n                          reasoning: stepReasoning,\n                          tools: tools ?? ({} as TOOLS),\n                          toolCalls: stepToolCalls,\n                          toolResults: stepToolResults,\n                          messageId,\n                          generateMessageId,\n                        }),\n                      );\n                    }\n\n                    await streamStep({\n                      currentStep: currentStep + 1,\n                      responseMessages,\n                      usage: combinedUsage,\n                      stepType: nextStepType,\n                      previousStepText: fullStepText,\n                      hasLeadingWhitespace: hasWhitespaceSuffix,\n                      messageId:\n                        // keep the same id when continuing a step:\n                        nextStepType === 'continue'\n                          ? messageId\n                          : generateMessageId(),\n                    });\n                  }\n                },\n              }),\n            ),\n          );\n        }\n\n        // add the initial stream to the stitchable stream\n        await streamStep({\n          currentStep: 0,\n          responseMessages: [],\n          usage: {\n            promptTokens: 0,\n            completionTokens: 0,\n            totalTokens: 0,\n          },\n          previousStepText: '',\n          stepType: 'initial',\n          hasLeadingWhitespace: false,\n          messageId: generateMessageId(),\n        });\n      },\n    }).catch(error => {\n      // add an error stream part and close the streams:\n      self.addStream(\n        new ReadableStream({\n          start(controller) {\n            controller.enqueue({ type: 'error', error });\n            controller.close();\n          },\n        }),\n      );\n      self.closeStream();\n    });\n  }\n\n  get warnings() {\n    return this.warningsPromise.value;\n  }\n\n  get usage() {\n    return this.usagePromise.value;\n  }\n\n  get finishReason() {\n    return this.finishReasonPromise.value;\n  }\n\n  get experimental_providerMetadata() {\n    return this.providerMetadataPromise.value;\n  }\n\n  get providerMetadata() {\n    return this.providerMetadataPromise.value;\n  }\n\n  get text() {\n    return this.textPromise.value;\n  }\n\n  get reasoning() {\n    return this.reasoningPromise.value;\n  }\n\n  get reasoningDetails() {\n    return this.reasoningDetailsPromise.value;\n  }\n\n  get sources() {\n    return this.sourcesPromise.value;\n  }\n\n  get files() {\n    return this.filesPromise.value;\n  }\n\n  get toolCalls() {\n    return this.toolCallsPromise.value;\n  }\n\n  get toolResults() {\n    return this.toolResultsPromise.value;\n  }\n\n  get request() {\n    return this.requestPromise.value;\n  }\n\n  get response() {\n    return this.responsePromise.value;\n  }\n\n  get steps() {\n    return this.stepsPromise.value;\n  }\n\n  /**\nSplit out a new stream from the original stream.\nThe original stream is replaced to allow for further splitting,\nsince we do not know how many times the stream will be split.\n\nNote: this leads to buffering the stream content on the server.\nHowever, the LLM results are expected to be small enough to not cause issues.\n   */\n  private teeStream() {\n    const [stream1, stream2] = this.baseStream.tee();\n    this.baseStream = stream2;\n    return stream1;\n  }\n\n  get textStream(): AsyncIterableStream<string> {\n    return createAsyncIterableStream(\n      this.teeStream().pipeThrough(\n        new TransformStream<EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>, string>({\n          transform({ part }, controller) {\n            if (part.type === 'text-delta') {\n              controller.enqueue(part.textDelta);\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  get fullStream(): AsyncIterableStream<TextStreamPart<TOOLS>> {\n    return createAsyncIterableStream(\n      this.teeStream().pipeThrough(\n        new TransformStream<\n          EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>,\n          TextStreamPart<TOOLS>\n        >({\n          transform({ part }, controller) {\n            controller.enqueue(part);\n          },\n        }),\n      ),\n    );\n  }\n\n  async consumeStream(): Promise<void> {\n    const stream = this.fullStream;\n    for await (const part of stream) {\n      // no op\n    }\n  }\n\n  get experimental_partialOutputStream(): AsyncIterableStream<PARTIAL_OUTPUT> {\n    if (this.output == null) {\n      throw new NoOutputSpecifiedError();\n    }\n\n    return createAsyncIterableStream(\n      this.teeStream().pipeThrough(\n        new TransformStream<\n          EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>,\n          PARTIAL_OUTPUT\n        >({\n          transform({ partialOutput }, controller) {\n            if (partialOutput != null) {\n              controller.enqueue(partialOutput);\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  private toDataStreamInternal({\n    getErrorMessage = () => 'An error occurred.', // mask error messages for safety by default\n    sendUsage = true,\n    sendReasoning = false,\n    sendSources = false,\n    experimental_sendFinish = true,\n  }: {\n    getErrorMessage: ((error: unknown) => string) | undefined;\n    sendUsage: boolean | undefined;\n    sendReasoning: boolean | undefined;\n    sendSources: boolean | undefined;\n    experimental_sendFinish: boolean | undefined;\n  }): ReadableStream<DataStreamString> {\n    return this.fullStream.pipeThrough(\n      new TransformStream<TextStreamPart<TOOLS>, DataStreamString>({\n        transform: async (chunk, controller) => {\n          const chunkType = chunk.type;\n          switch (chunkType) {\n            case 'text-delta': {\n              controller.enqueue(formatDataStreamPart('text', chunk.textDelta));\n              break;\n            }\n\n            case 'reasoning': {\n              if (sendReasoning) {\n                controller.enqueue(\n                  formatDataStreamPart('reasoning', chunk.textDelta),\n                );\n              }\n              break;\n            }\n\n            case 'redacted-reasoning': {\n              if (sendReasoning) {\n                controller.enqueue(\n                  formatDataStreamPart('redacted_reasoning', {\n                    data: chunk.data,\n                  }),\n                );\n              }\n              break;\n            }\n\n            case 'reasoning-signature': {\n              if (sendReasoning) {\n                controller.enqueue(\n                  formatDataStreamPart('reasoning_signature', {\n                    signature: chunk.signature,\n                  }),\n                );\n              }\n              break;\n            }\n\n            case 'file': {\n              controller.enqueue(\n                formatDataStreamPart('file', {\n                  mimeType: chunk.mimeType,\n                  data: chunk.base64,\n                }),\n              );\n              break;\n            }\n\n            case 'source': {\n              if (sendSources) {\n                controller.enqueue(\n                  formatDataStreamPart('source', chunk.source),\n                );\n              }\n              break;\n            }\n\n            case 'tool-call-streaming-start': {\n              controller.enqueue(\n                formatDataStreamPart('tool_call_streaming_start', {\n                  toolCallId: chunk.toolCallId,\n                  toolName: chunk.toolName,\n                }),\n              );\n              break;\n            }\n\n            case 'tool-call-delta': {\n              controller.enqueue(\n                formatDataStreamPart('tool_call_delta', {\n                  toolCallId: chunk.toolCallId,\n                  argsTextDelta: chunk.argsTextDelta,\n                }),\n              );\n              break;\n            }\n\n            case 'tool-call': {\n              controller.enqueue(\n                formatDataStreamPart('tool_call', {\n                  toolCallId: chunk.toolCallId,\n                  toolName: chunk.toolName,\n                  args: chunk.args,\n                }),\n              );\n              break;\n            }\n\n            case 'tool-result': {\n              controller.enqueue(\n                formatDataStreamPart('tool_result', {\n                  toolCallId: chunk.toolCallId,\n                  result: chunk.result,\n                }),\n              );\n              break;\n            }\n\n            case 'error': {\n              controller.enqueue(\n                formatDataStreamPart('error', getErrorMessage(chunk.error)),\n              );\n              break;\n            }\n\n            case 'step-start': {\n              controller.enqueue(\n                formatDataStreamPart('start_step', {\n                  messageId: chunk.messageId,\n                }),\n              );\n              break;\n            }\n\n            case 'step-finish': {\n              controller.enqueue(\n                formatDataStreamPart('finish_step', {\n                  finishReason: chunk.finishReason,\n                  usage: sendUsage\n                    ? {\n                        promptTokens: chunk.usage.promptTokens,\n                        completionTokens: chunk.usage.completionTokens,\n                      }\n                    : undefined,\n                  isContinued: chunk.isContinued,\n                }),\n              );\n              break;\n            }\n\n            case 'finish': {\n              if (experimental_sendFinish) {\n                controller.enqueue(\n                  formatDataStreamPart('finish_message', {\n                    finishReason: chunk.finishReason,\n                    usage: sendUsage\n                      ? {\n                          promptTokens: chunk.usage.promptTokens,\n                          completionTokens: chunk.usage.completionTokens,\n                        }\n                      : undefined,\n                  }),\n                );\n              }\n              break;\n            }\n\n            default: {\n              const exhaustiveCheck: never = chunkType;\n              throw new Error(`Unknown chunk type: ${exhaustiveCheck}`);\n            }\n          }\n        },\n      }),\n    );\n  }\n\n  pipeDataStreamToResponse(\n    response: ServerResponse,\n    {\n      status,\n      statusText,\n      headers,\n      data,\n      getErrorMessage,\n      sendUsage,\n      sendReasoning,\n      sendSources,\n      experimental_sendFinish,\n    }: ResponseInit &\n      DataStreamOptions & {\n        data?: StreamData;\n        getErrorMessage?: (error: unknown) => string;\n      } = {},\n  ) {\n    writeToServerResponse({\n      response,\n      status,\n      statusText,\n      headers: prepareOutgoingHttpHeaders(headers, {\n        contentType: 'text/plain; charset=utf-8',\n        dataStreamVersion: 'v1',\n      }),\n      stream: this.toDataStream({\n        data,\n        getErrorMessage,\n        sendUsage,\n        sendReasoning,\n        sendSources,\n        experimental_sendFinish,\n      }),\n    });\n  }\n\n  pipeTextStreamToResponse(response: ServerResponse, init?: ResponseInit) {\n    writeToServerResponse({\n      response,\n      status: init?.status,\n      statusText: init?.statusText,\n      headers: prepareOutgoingHttpHeaders(init?.headers, {\n        contentType: 'text/plain; charset=utf-8',\n      }),\n      stream: this.textStream.pipeThrough(new TextEncoderStream()),\n    });\n  }\n\n  // TODO breaking change 5.0: remove pipeThrough(new TextEncoderStream())\n  toDataStream(\n    options?: DataStreamOptions & {\n      data?: StreamData;\n      getErrorMessage?: (error: unknown) => string;\n    },\n  ) {\n    const stream = this.toDataStreamInternal({\n      getErrorMessage: options?.getErrorMessage,\n      sendUsage: options?.sendUsage,\n      sendReasoning: options?.sendReasoning,\n      sendSources: options?.sendSources,\n      experimental_sendFinish: options?.experimental_sendFinish,\n    }).pipeThrough(new TextEncoderStream());\n\n    return options?.data ? mergeStreams(options?.data.stream, stream) : stream;\n  }\n\n  mergeIntoDataStream(writer: DataStreamWriter, options?: DataStreamOptions) {\n    writer.merge(\n      this.toDataStreamInternal({\n        getErrorMessage: writer.onError,\n        sendUsage: options?.sendUsage,\n        sendReasoning: options?.sendReasoning,\n        sendSources: options?.sendSources,\n        experimental_sendFinish: options?.experimental_sendFinish,\n      }),\n    );\n  }\n\n  toDataStreamResponse({\n    headers,\n    status,\n    statusText,\n    data,\n    getErrorMessage,\n    sendUsage,\n    sendReasoning,\n    sendSources,\n    experimental_sendFinish,\n  }: ResponseInit &\n    DataStreamOptions & {\n      data?: StreamData;\n      getErrorMessage?: (error: unknown) => string;\n    } = {}): Response {\n    return new Response(\n      this.toDataStream({\n        data,\n        getErrorMessage,\n        sendUsage,\n        sendReasoning,\n        sendSources,\n        experimental_sendFinish,\n      }),\n      {\n        status,\n        statusText,\n        headers: prepareResponseHeaders(headers, {\n          contentType: 'text/plain; charset=utf-8',\n          dataStreamVersion: 'v1',\n        }),\n      },\n    );\n  }\n\n  toTextStreamResponse(init?: ResponseInit): Response {\n    return new Response(this.textStream.pipeThrough(new TextEncoderStream()), {\n      status: init?.status ?? 200,\n      headers: prepareResponseHeaders(init?.headers, {\n        contentType: 'text/plain; charset=utf-8',\n      }),\n    });\n  }\n}\n", "export function asArray<T>(value: T | T[] | undefined): T[] {\n  return value === undefined ? [] : Array.isArray(value) ? value : [value];\n}\n", "/**\n * Merges two readable streams into a single readable stream, emitting values\n * from each stream as they become available.\n *\n * The first stream is prioritized over the second stream. If both streams have\n * values available, the first stream's value is emitted first.\n *\n * @template VALUE1 - The type of values emitted by the first stream.\n * @template VALUE2 - The type of values emitted by the second stream.\n * @param {ReadableStream<VALUE1>} stream1 - The first readable stream.\n * @param {ReadableStream<VALUE2>} stream2 - The second readable stream.\n * @returns {ReadableStream<VALUE1 | VALUE2>} A new readable stream that emits values from both input streams.\n */\nexport function mergeStreams<VALUE1, VALUE2>(\n  stream1: ReadableStream<VALUE1>,\n  stream2: ReadableStream<VALUE2>,\n): ReadableStream<VALUE1 | VALUE2> {\n  const reader1 = stream1.getReader();\n  const reader2 = stream2.getReader();\n\n  let lastRead1: Promise<ReadableStreamReadResult<VALUE1>> | undefined =\n    undefined;\n  let lastRead2: Promise<ReadableStreamReadResult<VALUE2>> | undefined =\n    undefined;\n\n  let stream1Done = false;\n  let stream2Done = false;\n\n  // only use when stream 2 is done:\n  async function readStream1(\n    controller: ReadableStreamDefaultController<VALUE1 | VALUE2>,\n  ) {\n    try {\n      if (lastRead1 == null) {\n        lastRead1 = reader1.read();\n      }\n\n      const result = await lastRead1;\n      lastRead1 = undefined;\n\n      if (!result.done) {\n        controller.enqueue(result.value);\n      } else {\n        controller.close();\n      }\n    } catch (error) {\n      controller.error(error);\n    }\n  }\n\n  // only use when stream 1 is done:\n  async function readStream2(\n    controller: ReadableStreamDefaultController<VALUE1 | VALUE2>,\n  ) {\n    try {\n      if (lastRead2 == null) {\n        lastRead2 = reader2.read();\n      }\n\n      const result = await lastRead2;\n      lastRead2 = undefined;\n\n      if (!result.done) {\n        controller.enqueue(result.value);\n      } else {\n        controller.close();\n      }\n    } catch (error) {\n      controller.error(error);\n    }\n  }\n\n  return new ReadableStream<VALUE1 | VALUE2>({\n    async pull(controller) {\n      try {\n        // stream 1 is done, we can only read from stream 2:\n        if (stream1Done) {\n          await readStream2(controller);\n          return;\n        }\n\n        // stream 2 is done, we can only read from stream 1:\n        if (stream2Done) {\n          await readStream1(controller);\n          return;\n        }\n\n        // pull the next value from the stream that was read last:\n        if (lastRead1 == null) {\n          lastRead1 = reader1.read();\n        }\n        if (lastRead2 == null) {\n          lastRead2 = reader2.read();\n        }\n\n        // Note on Promise.race (prioritizing stream 1 over stream 2):\n        // If the iterable contains one or more non-promise values and/or an already settled promise,\n        // then Promise.race() will settle to the first of these values found in the iterable.\n        const { result, reader } = await Promise.race([\n          lastRead1.then(result => ({ result, reader: reader1 })),\n          lastRead2.then(result => ({ result, reader: reader2 })),\n        ]);\n\n        if (!result.done) {\n          controller.enqueue(result.value);\n        }\n\n        if (reader === reader1) {\n          lastRead1 = undefined;\n          if (result.done) {\n            // stream 1 is done, we can only read from stream 2:\n            await readStream2(controller);\n            stream1Done = true;\n          }\n        } else {\n          lastRead2 = undefined;\n          // stream 2 is done, we can only read from stream 1:\n          if (result.done) {\n            stream2Done = true;\n            await readStream1(controller);\n          }\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    cancel() {\n      reader1.cancel();\n      reader2.cancel();\n    },\n  });\n}\n", "import { LanguageModelV1StreamPart } from '@ai-sdk/provider';\nimport { generateId } from '@ai-sdk/ui-utils';\nimport { Tracer } from '@opentelemetry/api';\nimport { ToolExecutionError } from '../../errors';\nimport { CoreMessage } from '../prompt/message';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport {\n  FinishReason,\n  LanguageModelUsage,\n  LogProbs,\n  ProviderMetadata,\n} from '../types';\nimport { Source } from '../types/language-model';\nimport { calculateLanguageModelUsage } from '../types/usage';\nimport { DefaultGeneratedFileWithType, GeneratedFile } from './generated-file';\nimport { parseToolCall } from './parse-tool-call';\nimport { ToolCallUnion } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair';\nimport { ToolResultUnion } from './tool-result';\nimport { ToolSet } from './tool-set';\n\nexport type SingleRequestTextStreamPart<TOOLS extends ToolSet> =\n  | {\n      type: 'text-delta';\n      textDelta: string;\n    }\n  | {\n      type: 'reasoning';\n      textDelta: string;\n    }\n  | {\n      type: 'reasoning-signature';\n      signature: string;\n    }\n  | {\n      type: 'redacted-reasoning';\n      data: string;\n    }\n  | ({\n      type: 'file';\n    } & GeneratedFile)\n  | {\n      type: 'source';\n      source: Source;\n    }\n  | ({\n      type: 'tool-call';\n    } & ToolCallUnion<TOOLS>)\n  | {\n      type: 'tool-call-streaming-start';\n      toolCallId: string;\n      toolName: string;\n    }\n  | {\n      type: 'tool-call-delta';\n      toolCallId: string;\n      toolName: string;\n      argsTextDelta: string;\n    }\n  | ({\n      type: 'tool-result';\n    } & ToolResultUnion<TOOLS>)\n  | {\n      type: 'response-metadata';\n      id?: string;\n      timestamp?: Date;\n      modelId?: string;\n    }\n  | {\n      type: 'finish';\n      finishReason: FinishReason;\n      logprobs?: LogProbs;\n      usage: LanguageModelUsage;\n      experimental_providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'error';\n      error: unknown;\n    };\n\nexport function runToolsTransformation<TOOLS extends ToolSet>({\n  tools,\n  generatorStream,\n  toolCallStreaming,\n  tracer,\n  telemetry,\n  system,\n  messages,\n  abortSignal,\n  repairToolCall,\n}: {\n  tools: TOOLS | undefined;\n  generatorStream: ReadableStream<LanguageModelV1StreamPart>;\n  toolCallStreaming: boolean;\n  tracer: Tracer;\n  telemetry: TelemetrySettings | undefined;\n  system: string | undefined;\n  messages: CoreMessage[];\n  abortSignal: AbortSignal | undefined;\n  repairToolCall: ToolCallRepairFunction<TOOLS> | undefined;\n}): ReadableStream<SingleRequestTextStreamPart<TOOLS>> {\n  // tool results stream\n  let toolResultsStreamController: ReadableStreamDefaultController<\n    SingleRequestTextStreamPart<TOOLS>\n  > | null = null;\n  const toolResultsStream = new ReadableStream<\n    SingleRequestTextStreamPart<TOOLS>\n  >({\n    start(controller) {\n      toolResultsStreamController = controller;\n    },\n  });\n\n  // keep track of active tool calls for tool call streaming:\n  const activeToolCalls: Record<string, boolean> = {};\n\n  // keep track of outstanding tool results for stream closing:\n  const outstandingToolResults = new Set<string>();\n\n  let canClose = false;\n  let finishChunk:\n    | (SingleRequestTextStreamPart<TOOLS> & { type: 'finish' })\n    | undefined = undefined;\n\n  function attemptClose() {\n    // close the tool results controller if no more outstanding tool calls\n    if (canClose && outstandingToolResults.size === 0) {\n      // we delay sending the finish chunk until all tool results (incl. delayed ones)\n      // are received to ensure that the frontend receives tool results before a message\n      // finish event arrives.\n      if (finishChunk != null) {\n        toolResultsStreamController!.enqueue(finishChunk);\n      }\n\n      toolResultsStreamController!.close();\n    }\n  }\n\n  // forward stream\n  const forwardStream = new TransformStream<\n    LanguageModelV1StreamPart,\n    SingleRequestTextStreamPart<TOOLS>\n  >({\n    async transform(\n      chunk: LanguageModelV1StreamPart,\n      controller: TransformStreamDefaultController<\n        SingleRequestTextStreamPart<TOOLS>\n      >,\n    ) {\n      const chunkType = chunk.type;\n\n      switch (chunkType) {\n        // forward:\n        case 'text-delta':\n        case 'reasoning':\n        case 'reasoning-signature':\n        case 'redacted-reasoning':\n        case 'source':\n        case 'response-metadata':\n        case 'error': {\n          controller.enqueue(chunk);\n          break;\n        }\n\n        case 'file': {\n          controller.enqueue(\n            new DefaultGeneratedFileWithType({\n              data: chunk.data,\n              mimeType: chunk.mimeType,\n            }),\n          );\n          break;\n        }\n\n        // forward with less information:\n        case 'tool-call-delta': {\n          if (toolCallStreaming) {\n            if (!activeToolCalls[chunk.toolCallId]) {\n              controller.enqueue({\n                type: 'tool-call-streaming-start',\n                toolCallId: chunk.toolCallId,\n                toolName: chunk.toolName,\n              });\n\n              activeToolCalls[chunk.toolCallId] = true;\n            }\n\n            controller.enqueue({\n              type: 'tool-call-delta',\n              toolCallId: chunk.toolCallId,\n              toolName: chunk.toolName,\n              argsTextDelta: chunk.argsTextDelta,\n            });\n          }\n          break;\n        }\n\n        // process tool call:\n        case 'tool-call': {\n          try {\n            const toolCall = await parseToolCall({\n              toolCall: chunk,\n              tools,\n              repairToolCall,\n              system,\n              messages,\n            });\n\n            controller.enqueue(toolCall);\n\n            const tool = tools![toolCall.toolName];\n\n            if (tool.execute != null) {\n              const toolExecutionId = generateId(); // use our own id to guarantee uniqueness\n              outstandingToolResults.add(toolExecutionId);\n\n              // Note: we don't await the tool execution here (by leaving out 'await' on recordSpan),\n              // because we want to process the next chunk as soon as possible.\n              // This is important for the case where the tool execution takes a long time.\n              recordSpan({\n                name: 'ai.toolCall',\n                attributes: selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    ...assembleOperationName({\n                      operationId: 'ai.toolCall',\n                      telemetry,\n                    }),\n                    'ai.toolCall.name': toolCall.toolName,\n                    'ai.toolCall.id': toolCall.toolCallId,\n                    'ai.toolCall.args': {\n                      output: () => JSON.stringify(toolCall.args),\n                    },\n                  },\n                }),\n                tracer,\n                fn: async span =>\n                  tool.execute!(toolCall.args, {\n                    toolCallId: toolCall.toolCallId,\n                    messages,\n                    abortSignal,\n                  }).then(\n                    (result: any) => {\n                      toolResultsStreamController!.enqueue({\n                        ...toolCall,\n                        type: 'tool-result',\n                        result,\n                      } as any);\n\n                      outstandingToolResults.delete(toolExecutionId);\n\n                      attemptClose();\n\n                      // record telemetry\n                      try {\n                        span.setAttributes(\n                          selectTelemetryAttributes({\n                            telemetry,\n                            attributes: {\n                              'ai.toolCall.result': {\n                                output: () => JSON.stringify(result),\n                              },\n                            },\n                          }),\n                        );\n                      } catch (ignored) {\n                        // JSON stringify might fail if the result is not serializable,\n                        // in which case we just ignore it. In the future we might want to\n                        // add an optional serialize method to the tool interface and warn\n                        // if the result is not serializable.\n                      }\n                    },\n                    (error: any) => {\n                      toolResultsStreamController!.enqueue({\n                        type: 'error',\n                        error: new ToolExecutionError({\n                          toolCallId: toolCall.toolCallId,\n                          toolName: toolCall.toolName,\n                          toolArgs: toolCall.args,\n                          cause: error,\n                        }),\n                      });\n\n                      outstandingToolResults.delete(toolExecutionId);\n                      attemptClose();\n                    },\n                  ),\n              });\n            }\n          } catch (error) {\n            toolResultsStreamController!.enqueue({\n              type: 'error',\n              error,\n            });\n          }\n\n          break;\n        }\n\n        case 'finish': {\n          finishChunk = {\n            type: 'finish',\n            finishReason: chunk.finishReason,\n            logprobs: chunk.logprobs,\n            usage: calculateLanguageModelUsage(chunk.usage),\n            experimental_providerMetadata: chunk.providerMetadata,\n          };\n          break;\n        }\n\n        default: {\n          const _exhaustiveCheck: never = chunkType;\n          throw new Error(`Unhandled chunk type: ${_exhaustiveCheck}`);\n        }\n      }\n    },\n\n    flush() {\n      canClose = true;\n      attemptClose();\n    },\n  });\n\n  // combine the generator stream and the tool results stream\n  return new ReadableStream<SingleRequestTextStreamPart<TOOLS>>({\n    async start(controller) {\n      // need to wait for both pipes so there are no dangling promises that\n      // can cause uncaught promise rejections when the stream is aborted\n      return Promise.all([\n        generatorStream.pipeThrough(forwardStream).pipeTo(\n          new WritableStream({\n            write(chunk) {\n              controller.enqueue(chunk);\n            },\n            close() {\n              // the generator stream controller is automatically closed when it's consumed\n            },\n          }),\n        ),\n        toolResultsStream.pipeTo(\n          new WritableStream({\n            write(chunk) {\n              controller.enqueue(chunk);\n            },\n            close() {\n              controller.close();\n            },\n          }),\n        ),\n      ]);\n    },\n  });\n}\n", "/**\n * Deeply merges two objects together.\n * - Properties from the second object override those in the first object with the same key\n * - For nested objects, the merge is performed recursively (deep merge)\n * - Arrays are replaced, not merged\n * - Primitive values are replaced\n * - If both inputs are undefined, returns undefined\n * - If one input is undefined, returns the other\n *\n * @param target The target object to merge into\n * @param source The source object to merge from\n * @returns A new object with the merged properties, or undefined if both inputs are undefined\n */\nexport function mergeObjects<T extends object, U extends object>(\n  target: T | undefined,\n  source: U | undefined,\n): (T & U) | T | U | undefined {\n  // If both inputs are undefined, return undefined\n  if (target === undefined && source === undefined) {\n    return undefined;\n  }\n\n  // If target is undefined, return source\n  if (target === undefined) {\n    return source;\n  }\n\n  // If source is undefined, return target\n  if (source === undefined) {\n    return target;\n  }\n\n  // Create a new object to avoid mutating the inputs\n  const result = { ...target } as T & U;\n\n  // Iterate through all keys in the source object\n  for (const key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      const sourceValue = source[key];\n\n      // Skip if the source value is undefined\n      if (sourceValue === undefined) continue;\n\n      // Get the target value if it exists\n      const targetValue =\n        key in target ? target[key as unknown as keyof T] : undefined;\n\n      // Check if both values are objects that can be deeply merged\n      const isSourceObject =\n        sourceValue !== null &&\n        typeof sourceValue === 'object' &&\n        !Array.isArray(sourceValue) &&\n        !(sourceValue instanceof Date) &&\n        !(sourceValue instanceof RegExp);\n\n      const isTargetObject =\n        targetValue !== null &&\n        targetValue !== undefined &&\n        typeof targetValue === 'object' &&\n        !Array.isArray(targetValue) &&\n        !(targetValue instanceof Date) &&\n        !(targetValue instanceof RegExp);\n\n      // If both values are mergeable objects, merge them recursively\n      if (isSourceObject && isTargetObject) {\n        result[key as keyof (T & U)] = mergeObjects(\n          targetValue as object,\n          sourceValue as object,\n        ) as any;\n      } else {\n        // For primitives, arrays, or when one value is not a mergeable object,\n        // simply override with the source value\n        result[key as keyof (T & U)] = sourceValue as any;\n      }\n    }\n  }\n\n  return result;\n}\n", "import {\n  LanguageModelV1CallOptions,\n  LanguageModelV1ProviderMetadata,\n} from '@ai-sdk/provider';\nimport type { LanguageModelV1Middleware } from './language-model-v1-middleware';\nimport { mergeObjects } from '../util/merge-objects';\n\n/**\n * Applies default settings for a language model.\n */\nexport function defaultSettingsMiddleware({\n  settings,\n}: {\n  settings: Partial<\n    LanguageModelV1CallOptions & {\n      providerMetadata?: LanguageModelV1ProviderMetadata;\n    }\n  >;\n}): LanguageModelV1Middleware {\n  return {\n    middlewareVersion: 'v1',\n    transformParams: async ({ params }) => {\n      return {\n        ...settings,\n        ...params,\n        providerMetadata: mergeObjects(\n          settings.providerMetadata,\n          params.providerMetadata,\n        ),\n\n        // special case for temperature 0\n        // TODO remove when temperature defaults to undefined\n        temperature:\n          params.temperature === 0 || params.temperature == null\n            ? (settings.temperature ?? 0)\n            : params.temperature,\n      };\n    },\n  };\n}\n", "/**\n * Returns the index of the start of the searchedText in the text, or null if it\n * is not found.\n */\nexport function getPotentialStartIndex(\n  text: string,\n  searchedText: string,\n): number | null {\n  // Return null immediately if searchedText is empty.\n  if (searchedText.length === 0) {\n    return null;\n  }\n\n  // Check if the searchedText exists as a direct substring of text.\n  const directIndex = text.indexOf(searchedText);\n  if (directIndex !== -1) {\n    return directIndex;\n  }\n\n  // Otherwise, look for the largest suffix of \"text\" that matches\n  // a prefix of \"searchedText\". We go from the end of text inward.\n  for (let i = text.length - 1; i >= 0; i--) {\n    const suffix = text.substring(i);\n    if (searchedText.startsWith(suffix)) {\n      return i;\n    }\n  }\n\n  return null;\n}\n", "import type { LanguageModelV1StreamPart } from '@ai-sdk/provider';\nimport { getPotentialStartIndex } from '../util/get-potential-start-index';\nimport type { LanguageModelV1Middleware } from './language-model-v1-middleware';\n\n/**\n * Extract an XML-tagged reasoning section from the generated text and exposes it\n * as a `reasoning` property on the result.\n *\n * @param tagName - The name of the XML tag to extract reasoning from.\n * @param separator - The separator to use between reasoning and text sections.\n * @param startWithReasoning - Whether to start with reasoning tokens.\n */\nexport function extractReasoningMiddleware({\n  tagName,\n  separator = '\\n',\n  startWithReasoning = false,\n}: {\n  tagName: string;\n  separator?: string;\n  startWithReasoning?: boolean;\n}): LanguageModelV1Middleware {\n  const openingTag = `<${tagName}>`;\n  const closingTag = `<\\/${tagName}>`;\n\n  return {\n    middlewareVersion: 'v1',\n    wrapGenerate: async ({ doGenerate }) => {\n      const { text: rawText, ...rest } = await doGenerate();\n\n      if (rawText == null) {\n        return { text: rawText, ...rest };\n      }\n\n      const text = startWithReasoning ? openingTag + rawText : rawText;\n\n      const regexp = new RegExp(`${openingTag}(.*?)${closingTag}`, 'gs');\n      const matches = Array.from(text.matchAll(regexp));\n\n      if (!matches.length) {\n        return { text, ...rest };\n      }\n\n      const reasoning = matches.map(match => match[1]).join(separator);\n\n      let textWithoutReasoning = text;\n      for (let i = matches.length - 1; i >= 0; i--) {\n        const match = matches[i];\n\n        const beforeMatch = textWithoutReasoning.slice(0, match.index);\n        const afterMatch = textWithoutReasoning.slice(\n          match.index! + match[0].length,\n        );\n\n        textWithoutReasoning =\n          beforeMatch +\n          (beforeMatch.length > 0 && afterMatch.length > 0 ? separator : '') +\n          afterMatch;\n      }\n\n      return { ...rest, text: textWithoutReasoning, reasoning };\n    },\n\n    wrapStream: async ({ doStream }) => {\n      const { stream, ...rest } = await doStream();\n\n      let isFirstReasoning = true;\n      let isFirstText = true;\n      let afterSwitch = false;\n      let isReasoning = startWithReasoning;\n      let buffer = '';\n\n      return {\n        stream: stream.pipeThrough(\n          new TransformStream<\n            LanguageModelV1StreamPart,\n            LanguageModelV1StreamPart\n          >({\n            transform: (chunk, controller) => {\n              if (chunk.type !== 'text-delta') {\n                controller.enqueue(chunk);\n                return;\n              }\n\n              buffer += chunk.textDelta;\n\n              function publish(text: string) {\n                if (text.length > 0) {\n                  const prefix =\n                    afterSwitch &&\n                    (isReasoning ? !isFirstReasoning : !isFirstText)\n                      ? separator\n                      : '';\n\n                  controller.enqueue({\n                    type: isReasoning ? 'reasoning' : 'text-delta',\n                    textDelta: prefix + text,\n                  });\n                  afterSwitch = false;\n\n                  if (isReasoning) {\n                    isFirstReasoning = false;\n                  } else {\n                    isFirstText = false;\n                  }\n                }\n              }\n\n              do {\n                const nextTag = isReasoning ? closingTag : openingTag;\n                const startIndex = getPotentialStartIndex(buffer, nextTag);\n\n                // no opening or closing tag found, publish the buffer\n                if (startIndex == null) {\n                  publish(buffer);\n                  buffer = '';\n                  break;\n                }\n\n                // publish text before the tag\n                publish(buffer.slice(0, startIndex));\n\n                const foundFullMatch =\n                  startIndex + nextTag.length <= buffer.length;\n\n                if (foundFullMatch) {\n                  buffer = buffer.slice(startIndex + nextTag.length);\n                  isReasoning = !isReasoning;\n                  afterSwitch = true;\n                } else {\n                  buffer = buffer.slice(startIndex);\n                  break;\n                }\n              } while (true);\n            },\n          }),\n        ),\n        ...rest,\n      };\n    },\n  };\n}\n", "import type { LanguageModelV1StreamPart } from '@ai-sdk/provider';\nimport type { LanguageModelV1Middleware } from './language-model-v1-middleware';\n\n/**\n * Simulates streaming chunks with the response from a generate call.\n */\nexport function simulateStreamingMiddleware(): LanguageModelV1Middleware {\n  return {\n    middlewareVersion: 'v1',\n    wrapStream: async ({ doGenerate }) => {\n      const result = await doGenerate();\n\n      const simulatedStream = new ReadableStream<LanguageModelV1StreamPart>({\n        start(controller) {\n          controller.enqueue({ type: 'response-metadata', ...result.response });\n\n          if (result.reasoning) {\n            if (typeof result.reasoning === 'string') {\n              controller.enqueue({\n                type: 'reasoning',\n                textDelta: result.reasoning,\n              });\n            } else {\n              for (const reasoning of result.reasoning) {\n                switch (reasoning.type) {\n                  case 'text': {\n                    controller.enqueue({\n                      type: 'reasoning',\n                      textDelta: reasoning.text,\n                    });\n                    if (reasoning.signature != null) {\n                      controller.enqueue({\n                        type: 'reasoning-signature',\n                        signature: reasoning.signature,\n                      });\n                    }\n                    break;\n                  }\n                  case 'redacted': {\n                    controller.enqueue({\n                      type: 'redacted-reasoning',\n                      data: reasoning.data,\n                    });\n                    break;\n                  }\n                }\n              }\n            }\n          }\n\n          if (result.text) {\n            controller.enqueue({\n              type: 'text-delta',\n              textDelta: result.text,\n            });\n          }\n\n          if (result.toolCalls) {\n            for (const toolCall of result.toolCalls) {\n              controller.enqueue({\n                type: 'tool-call-delta',\n                toolCallType: 'function',\n                toolCallId: toolCall.toolCallId,\n                toolName: toolCall.toolName,\n                argsTextDelta: toolCall.args,\n              });\n\n              controller.enqueue({\n                type: 'tool-call',\n                ...toolCall,\n              });\n            }\n          }\n\n          controller.enqueue({\n            type: 'finish',\n            finishReason: result.finishReason,\n            usage: result.usage,\n            logprobs: result.logprobs,\n            providerMetadata: result.providerMetadata,\n          });\n\n          controller.close();\n        },\n      });\n\n      return {\n        stream: simulatedStream,\n        rawCall: result.rawCall,\n        rawResponse: result.rawResponse,\n        warnings: result.warnings,\n      };\n    },\n  };\n}\n", "import { LanguageModelV1, LanguageModelV1CallOptions } from '@ai-sdk/provider';\nimport { LanguageModelV1Middleware } from './language-model-v1-middleware';\nimport { asArray } from '../../util/as-array';\n\n/**\n * Wraps a LanguageModelV1 instance with middleware functionality.\n * This function allows you to apply middleware to transform parameters,\n * wrap generate operations, and wrap stream operations of a language model.\n *\n * @param options - Configuration options for wrapping the language model.\n * @param options.model - The original LanguageModelV1 instance to be wrapped.\n * @param options.middleware - The middleware to be applied to the language model. When multiple middlewares are provided, the first middleware will transform the input first, and the last middleware will be wrapped directly around the model.\n * @param options.modelId - Optional custom model ID to override the original model's ID.\n * @param options.providerId - Optional custom provider ID to override the original model's provider.\n * @returns A new LanguageModelV1 instance with middleware applied.\n */\nexport const wrapLanguageModel = ({\n  model,\n  middleware: middlewareArg,\n  modelId,\n  providerId,\n}: {\n  model: LanguageModelV1;\n  middleware: LanguageModelV1Middleware | LanguageModelV1Middleware[];\n  modelId?: string;\n  providerId?: string;\n}): LanguageModelV1 => {\n  return asArray(middlewareArg)\n    .reverse()\n    .reduce((wrappedModel, middleware) => {\n      return doWrap({ model: wrappedModel, middleware, modelId, providerId });\n    }, model);\n};\n\nconst doWrap = ({\n  model,\n  middleware: { transformParams, wrapGenerate, wrapStream },\n  modelId,\n  providerId,\n}: {\n  model: LanguageModelV1;\n  middleware: LanguageModelV1Middleware;\n  modelId?: string;\n  providerId?: string;\n}): LanguageModelV1 => {\n  async function doTransform({\n    params,\n    type,\n  }: {\n    params: LanguageModelV1CallOptions;\n    type: 'generate' | 'stream';\n  }) {\n    return transformParams ? await transformParams({ params, type }) : params;\n  }\n\n  return {\n    specificationVersion: 'v1',\n\n    provider: providerId ?? model.provider,\n    modelId: modelId ?? model.modelId,\n\n    defaultObjectGenerationMode: model.defaultObjectGenerationMode,\n    supportsImageUrls: model.supportsImageUrls,\n    supportsUrl: model.supportsUrl?.bind(model),\n    supportsStructuredOutputs: model.supportsStructuredOutputs,\n\n    async doGenerate(\n      params: LanguageModelV1CallOptions,\n    ): Promise<Awaited<ReturnType<LanguageModelV1['doGenerate']>>> {\n      const transformedParams = await doTransform({ params, type: 'generate' });\n      const doGenerate = async () => model.doGenerate(transformedParams);\n      const doStream = async () => model.doStream(transformedParams);\n      return wrapGenerate\n        ? wrapGenerate({\n            doGenerate,\n            doStream,\n            params: transformedParams,\n            model,\n          })\n        : doGenerate();\n    },\n\n    async doStream(\n      params: LanguageModelV1CallOptions,\n    ): Promise<Awaited<ReturnType<LanguageModelV1['doStream']>>> {\n      const transformedParams = await doTransform({ params, type: 'stream' });\n      const doGenerate = async () => model.doGenerate(transformedParams);\n      const doStream = async () => model.doStream(transformedParams);\n      return wrapStream\n        ? wrapStream({ doGenerate, doStream, params: transformedParams, model })\n        : doStream();\n    },\n  };\n};\n\n/**\n * @deprecated Use `wrapLanguageModel` instead.\n */\n// TODO remove in v5\nexport const experimental_wrapLanguageModel = wrapLanguageModel;\n", "import { Message } from '@ai-sdk/ui-utils';\n\n/**\n * Appends a client message to the messages array.\n * If the last message in the array has the same id as the new message, it will be replaced.\n * Otherwise, the new message will be appended.\n */\nexport function appendClientMessage({\n  messages,\n  message,\n}: {\n  messages: Message[];\n  message: Message;\n}) {\n  return [\n    ...(messages.length > 0 && messages[messages.length - 1].id === message.id\n      ? messages.slice(0, -1)\n      : messages),\n    message,\n  ];\n}\n", "import {\n  extractMaxToolInvocationStep,\n  FileUIPart,\n  Message,\n  ReasoningUIPart,\n  TextUIPart,\n  ToolInvocation,\n  ToolInvocationUIPart,\n} from '@ai-sdk/ui-utils';\nimport { ResponseMessage } from '../generate-text/step-result';\nimport { convertDataContentToBase64String } from './data-content';\nimport { AISDKError } from '@ai-sdk/provider';\n\n/**\n * Appends the ResponseMessage[] from the response to a Message[] (for useChat).\n * The messages are converted to Messages before being appended.\n * Timestamps are generated for the new messages.\n *\n * @returns A new Message[] with the response messages appended.\n */\nexport function appendResponseMessages({\n  messages,\n  responseMessages,\n  _internal: { currentDate = () => new Date() } = {},\n}: {\n  messages: Message[];\n  responseMessages: ResponseMessage[];\n\n  /**\nInternal. For test use only. May change without notice.\n     */\n  _internal?: {\n    currentDate?: () => Date;\n  };\n}): Message[] {\n  const clonedMessages = structuredClone(messages);\n\n  for (const message of responseMessages) {\n    const role = message.role;\n\n    // check if the last message is an assistant message:\n    const lastMessage = clonedMessages[clonedMessages.length - 1];\n    const isLastMessageAssistant = lastMessage.role === 'assistant';\n\n    switch (role) {\n      case 'assistant': {\n        function getToolInvocations(step: number) {\n          return (\n            typeof message.content === 'string'\n              ? []\n              : message.content.filter(part => part.type === 'tool-call')\n          ).map(call => ({\n            state: 'call' as const,\n            step,\n            args: call.args,\n            toolCallId: call.toolCallId,\n            toolName: call.toolName,\n          }));\n        }\n\n        const parts: Array<\n          TextUIPart | ReasoningUIPart | ToolInvocationUIPart | FileUIPart\n        > = [];\n        let textContent = '';\n        let reasoningTextContent = undefined;\n\n        if (typeof message.content === 'string') {\n          textContent = message.content;\n          parts.push({\n            type: 'text' as const,\n            text: message.content,\n          });\n        } else {\n          let reasoningPart: ReasoningUIPart | undefined = undefined;\n          for (const part of message.content) {\n            switch (part.type) {\n              case 'text': {\n                reasoningPart = undefined; // reset the reasoning part\n\n                textContent += part.text;\n                parts.push({\n                  type: 'text' as const,\n                  text: part.text,\n                });\n                break;\n              }\n              case 'reasoning': {\n                if (reasoningPart == null) {\n                  reasoningPart = {\n                    type: 'reasoning' as const,\n                    reasoning: '',\n                    details: [],\n                  };\n                  parts.push(reasoningPart);\n                }\n\n                reasoningTextContent = (reasoningTextContent ?? '') + part.text;\n                reasoningPart.reasoning += part.text;\n                reasoningPart.details.push({\n                  type: 'text' as const,\n                  text: part.text,\n                  signature: part.signature,\n                });\n                break;\n              }\n              case 'redacted-reasoning': {\n                if (reasoningPart == null) {\n                  reasoningPart = {\n                    type: 'reasoning' as const,\n                    reasoning: '',\n                    details: [],\n                  };\n                  parts.push(reasoningPart);\n                }\n\n                reasoningPart.details.push({\n                  type: 'redacted' as const,\n                  data: part.data,\n                });\n                break;\n              }\n              case 'tool-call':\n                break;\n              case 'file':\n                if (part.data instanceof URL) {\n                  throw new AISDKError({\n                    name: 'InvalidAssistantFileData',\n                    message: 'File data cannot be a URL',\n                  });\n                }\n                parts.push({\n                  type: 'file' as const,\n                  mimeType: part.mimeType,\n                  data: convertDataContentToBase64String(part.data),\n                });\n                break;\n            }\n          }\n        }\n\n        if (isLastMessageAssistant) {\n          const maxStep = extractMaxToolInvocationStep(\n            lastMessage.toolInvocations,\n          );\n\n          lastMessage.parts ??= [];\n\n          lastMessage.content = textContent;\n          lastMessage.reasoning = reasoningTextContent;\n          lastMessage.parts.push(...parts);\n\n          lastMessage.toolInvocations = [\n            ...(lastMessage.toolInvocations ?? []),\n            ...getToolInvocations(maxStep === undefined ? 0 : maxStep + 1),\n          ];\n\n          getToolInvocations(maxStep === undefined ? 0 : maxStep + 1)\n            .map(call => ({\n              type: 'tool-invocation' as const,\n              toolInvocation: call,\n            }))\n            .forEach(part => {\n              lastMessage.parts!.push(part);\n            });\n        } else {\n          // last message was a user message, add the assistant message:\n          clonedMessages.push({\n            role: 'assistant',\n            id: message.id,\n            createdAt: currentDate(), // generate a createdAt date for the message, will be overridden by the client\n            content: textContent,\n            reasoning: reasoningTextContent,\n            toolInvocations: getToolInvocations(0),\n            parts: [\n              ...parts,\n              ...getToolInvocations(0).map(call => ({\n                type: 'tool-invocation' as const,\n                toolInvocation: call,\n              })),\n            ],\n          });\n        }\n\n        break;\n      }\n\n      case 'tool': {\n        // for tool call results, add the result to previous message:\n        lastMessage.toolInvocations ??= []; // ensure the toolInvocations array exists\n\n        if (lastMessage.role !== 'assistant') {\n          throw new Error(\n            `Tool result must follow an assistant message: ${lastMessage.role}`,\n          );\n        }\n\n        lastMessage.parts ??= [];\n\n        for (const contentPart of message.content) {\n          // find the tool call in the previous message:\n          const toolCall = lastMessage.toolInvocations.find(\n            call => call.toolCallId === contentPart.toolCallId,\n          );\n          const toolCallPart: ToolInvocationUIPart | undefined =\n            lastMessage.parts.find(\n              (part): part is ToolInvocationUIPart =>\n                part.type === 'tool-invocation' &&\n                part.toolInvocation.toolCallId === contentPart.toolCallId,\n            );\n\n          if (!toolCall) {\n            throw new Error('Tool call not found in previous message');\n          }\n\n          // add the result to the tool call:\n          toolCall.state = 'result';\n          const toolResult = toolCall as ToolInvocation & { state: 'result' };\n          toolResult.result = contentPart.result;\n\n          if (toolCallPart) {\n            toolCallPart.toolInvocation = toolResult;\n          } else {\n            lastMessage.parts.push({\n              type: 'tool-invocation' as const,\n              toolInvocation: toolResult,\n            });\n          }\n        }\n\n        break;\n      }\n\n      default: {\n        const _exhaustiveCheck: never = role;\n        throw new Error(`Unsupported message role: ${_exhaustiveCheck}`);\n      }\n    }\n  }\n\n  return clonedMessages;\n}\n", "import { NoSuchModelError, ProviderV1 } from '@ai-sdk/provider';\nimport { EmbeddingModel, ImageModel, LanguageModel, Provider } from '../types';\n\n/**\n * Creates a custom provider with specified language models, text embedding models, and an optional fallback provider.\n *\n * @param {Object} options - The options for creating the custom provider.\n * @param {Record<string, LanguageModel>} [options.languageModels] - A record of language models, where keys are model IDs and values are LanguageModel instances.\n * @param {Record<string, EmbeddingModel<string>>} [options.textEmbeddingModels] - A record of text embedding models, where keys are model IDs and values are EmbeddingModel<string> instances.\n * @param {Record<string, ImageModel>} [options.imageModels] - A record of image models, where keys are model IDs and values are ImageModel instances.\n * @param {Provider} [options.fallbackProvider] - An optional fallback provider to use when a requested model is not found in the custom provider.\n * @returns {Provider} A Provider object with languageModel, textEmbeddingModel, and imageModel methods.\n *\n * @throws {NoSuchModelError} Throws when a requested model is not found and no fallback provider is available.\n */\nexport function customProvider<\n  LANGUAGE_MODELS extends Record<string, LanguageModel>,\n  EMBEDDING_MODELS extends Record<string, EmbeddingModel<string>>,\n  IMAGE_MODELS extends Record<string, ImageModel>,\n>({\n  languageModels,\n  textEmbeddingModels,\n  imageModels,\n  fallbackProvider,\n}: {\n  languageModels?: LANGUAGE_MODELS;\n  textEmbeddingModels?: EMBEDDING_MODELS;\n  imageModels?: IMAGE_MODELS;\n  fallbackProvider?: ProviderV1;\n}): Provider & {\n  languageModel(modelId: ExtractModelId<LANGUAGE_MODELS>): LanguageModel;\n  textEmbeddingModel(\n    modelId: ExtractModelId<EMBEDDING_MODELS>,\n  ): EmbeddingModel<string>;\n  imageModel(modelId: ExtractModelId<IMAGE_MODELS>): ImageModel;\n} {\n  return {\n    languageModel(modelId: ExtractModelId<LANGUAGE_MODELS>): LanguageModel {\n      if (languageModels != null && modelId in languageModels) {\n        return languageModels[modelId];\n      }\n\n      if (fallbackProvider) {\n        return fallbackProvider.languageModel(modelId);\n      }\n\n      throw new NoSuchModelError({ modelId, modelType: 'languageModel' });\n    },\n\n    textEmbeddingModel(\n      modelId: ExtractModelId<EMBEDDING_MODELS>,\n    ): EmbeddingModel<string> {\n      if (textEmbeddingModels != null && modelId in textEmbeddingModels) {\n        return textEmbeddingModels[modelId];\n      }\n\n      if (fallbackProvider) {\n        return fallbackProvider.textEmbeddingModel(modelId);\n      }\n\n      throw new NoSuchModelError({ modelId, modelType: 'textEmbeddingModel' });\n    },\n\n    imageModel(modelId: ExtractModelId<IMAGE_MODELS>): ImageModel {\n      if (imageModels != null && modelId in imageModels) {\n        return imageModels[modelId];\n      }\n\n      if (fallbackProvider?.imageModel) {\n        return fallbackProvider.imageModel(modelId);\n      }\n\n      throw new NoSuchModelError({ modelId, modelType: 'imageModel' });\n    },\n  };\n}\n\n/**\n * @deprecated Use `customProvider` instead.\n */\nexport const experimental_customProvider = customProvider;\n\ntype ExtractModelId<MODELS extends Record<string, unknown>> = Extract<\n  keyof MODELS,\n  string\n>;\n", "import { AISDKError, NoSuchModelError } from '@ai-sdk/provider';\n\nconst name = 'AI_NoSuchProviderError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class NoSuchProviderError extends NoSuchModelError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly providerId: string;\n  readonly availableProviders: string[];\n\n  constructor({\n    modelId,\n    modelType,\n    providerId,\n    availableProviders,\n    message = `No such provider: ${providerId} (available providers: ${availableProviders.join()})`,\n  }: {\n    modelId: string;\n    modelType: 'languageModel' | 'textEmbeddingModel';\n    providerId: string;\n    availableProviders: string[];\n    message?: string;\n  }) {\n    super({ errorName: name, modelId, modelType, message });\n\n    this.providerId = providerId;\n    this.availableProviders = availableProviders;\n  }\n\n  static isInstance(error: unknown): error is NoSuchProviderError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { NoSuchModelError, ProviderV1 } from '@ai-sdk/provider';\nimport { EmbeddingModel, ImageModel, LanguageModel, Provider } from '../types';\nimport { NoSuchProviderError } from './no-such-provider-error';\n\n/**\n * Creates a registry for the given providers.\n */\nexport function experimental_createProviderRegistry(\n  providers: Record<string, ProviderV1>,\n): Provider {\n  const registry = new DefaultProviderRegistry();\n\n  for (const [id, provider] of Object.entries(providers)) {\n    registry.registerProvider({ id, provider });\n  }\n\n  return registry;\n}\n\nclass DefaultProviderRegistry implements Provider {\n  private providers: Record<string, ProviderV1> = {};\n\n  registerProvider({\n    id,\n    provider,\n  }: {\n    id: string;\n    provider: ProviderV1;\n  }): void {\n    this.providers[id] = provider;\n  }\n\n  private getProvider(id: string): ProviderV1 {\n    const provider = this.providers[id];\n\n    if (provider == null) {\n      throw new NoSuchProviderError({\n        modelId: id,\n        modelType: 'languageModel',\n        providerId: id,\n        availableProviders: Object.keys(this.providers),\n      });\n    }\n\n    return provider;\n  }\n\n  private splitId(\n    id: string,\n    modelType: 'languageModel' | 'textEmbeddingModel' | 'imageModel',\n  ): [string, string] {\n    const index = id.indexOf(':');\n\n    if (index === -1) {\n      throw new NoSuchModelError({\n        modelId: id,\n        modelType,\n        message:\n          `Invalid ${modelType} id for registry: ${id} ` +\n          `(must be in the format \"providerId:modelId\")`,\n      });\n    }\n\n    return [id.slice(0, index), id.slice(index + 1)];\n  }\n\n  languageModel(id: string): LanguageModel {\n    const [providerId, modelId] = this.splitId(id, 'languageModel');\n    const model = this.getProvider(providerId).languageModel?.(modelId);\n\n    if (model == null) {\n      throw new NoSuchModelError({ modelId: id, modelType: 'languageModel' });\n    }\n\n    return model;\n  }\n\n  textEmbeddingModel(id: string): EmbeddingModel<string> {\n    const [providerId, modelId] = this.splitId(id, 'textEmbeddingModel');\n    const provider = this.getProvider(providerId);\n\n    const model = provider.textEmbeddingModel?.(modelId);\n\n    if (model == null) {\n      throw new NoSuchModelError({\n        modelId: id,\n        modelType: 'textEmbeddingModel',\n      });\n    }\n\n    return model;\n  }\n\n  imageModel(id: string): ImageModel {\n    const [providerId, modelId] = this.splitId(id, 'imageModel');\n    const provider = this.getProvider(providerId);\n\n    const model = provider.imageModel?.(modelId);\n\n    if (model == null) {\n      throw new NoSuchModelError({ modelId: id, modelType: 'imageModel' });\n    }\n\n    return model;\n  }\n\n  /**\n   * @deprecated Use `textEmbeddingModel` instead.\n   */\n  textEmbedding(id: string): EmbeddingModel<string> {\n    return this.textEmbeddingModel(id);\n  }\n}\n", "import { JSONSchema7 } from '@ai-sdk/provider';\nimport { jsonSchema } from '@ai-sdk/ui-utils';\nimport { z, ZodType } from 'zod';\nimport { MCPClientError } from '../../../errors';\nimport { inferParameters, tool, Tool, ToolExecutionOptions } from '../tool';\nimport {\n  JSONRPCError,\n  JSONRPCNotification,\n  JSONRPCRequest,\n  JSONRPCResponse,\n} from './json-rpc-message';\nimport {\n  createMcpTransport,\n  isCustomMcpTransport,\n  MCPTransport,\n  MCPTransportConfig,\n} from './mcp-transport';\nimport {\n  CallToolResult,\n  CallToolResultSchema,\n  Configuration as ClientConfiguration,\n  InitializeResultSchema,\n  LATEST_PROTOCOL_VERSION,\n  ListToolsResult,\n  ListToolsResultSchema,\n  McpToolSet,\n  Notification,\n  PaginatedRequest,\n  Request,\n  RequestOptions,\n  ServerCapabilities,\n  SUPPORTED_PROTOCOL_VERSIONS,\n  ToolSchemas,\n} from './types';\n\nconst CLIENT_VERSION = '1.0.0';\n\ninterface MCPClientConfig {\n  /** Transport configuration for connecting to the MCP server */\n  transport: MCPTransportConfig | MCPTransport;\n  /** Optional callback for uncaught errors */\n  onUncaughtError?: (error: unknown) => void;\n  /** Optional client name, defaults to 'ai-sdk-mcp-client' */\n  name?: string;\n}\n\nexport async function createMCPClient(\n  config: MCPClientConfig,\n): Promise<MCPClient> {\n  const client = new MCPClient(config);\n  await client.init();\n  return client;\n}\n\n/**\n * A lightweight MCP Client implementation\n *\n * The primary purpose of this client is tool conversion between MCP<>AI SDK\n * but can later be extended to support other MCP features\n *\n * Tool parameters are automatically inferred from the server's JSON schema\n * if not explicitly provided in the tools configuration\n *\n * Not supported:\n * - Client options (e.g. sampling, roots) as they are not needed for tool conversion\n * - Accepting notifications\n */\nclass MCPClient {\n  private transport: MCPTransport;\n  private onUncaughtError?: (error: unknown) => void;\n  private clientInfo: ClientConfiguration;\n  private requestMessageId = 0;\n  private responseHandlers: Map<\n    number,\n    (response: JSONRPCResponse | Error) => void\n  > = new Map();\n  private serverCapabilities: ServerCapabilities = {};\n  private isClosed = true;\n\n  constructor({\n    transport: transportConfig,\n    name = 'ai-sdk-mcp-client',\n    onUncaughtError,\n  }: MCPClientConfig) {\n    this.onUncaughtError = onUncaughtError;\n\n    if (isCustomMcpTransport(transportConfig)) {\n      this.transport = transportConfig;\n    } else {\n      this.transport = createMcpTransport(transportConfig);\n    }\n\n    this.transport.onclose = () => this.onClose();\n    this.transport.onerror = (error: Error) => this.onError(error);\n    this.transport.onmessage = message => {\n      if ('method' in message) {\n        // This lightweight client implementation does not support\n        // receiving notifications or requests from server.\n        // If we get an unsupported message, we can safely ignore it and pass to the onError handler:\n        this.onError(\n          new MCPClientError({\n            message: 'Unsupported message type',\n          }),\n        );\n        return;\n      }\n\n      this.onResponse(message);\n    };\n\n    this.clientInfo = {\n      name,\n      version: CLIENT_VERSION,\n    };\n  }\n\n  async init(): Promise<this> {\n    try {\n      await this.transport.start();\n      this.isClosed = false;\n\n      const result = await this.request({\n        request: {\n          method: 'initialize',\n          params: {\n            protocolVersion: LATEST_PROTOCOL_VERSION,\n            capabilities: {},\n            clientInfo: this.clientInfo,\n          },\n        },\n        resultSchema: InitializeResultSchema,\n      });\n\n      if (result === undefined) {\n        throw new MCPClientError({\n          message: 'Server sent invalid initialize result',\n        });\n      }\n\n      if (!SUPPORTED_PROTOCOL_VERSIONS.includes(result.protocolVersion)) {\n        throw new MCPClientError({\n          message: `Server's protocol version is not supported: ${result.protocolVersion}`,\n        });\n      }\n\n      this.serverCapabilities = result.capabilities;\n\n      // Complete initialization handshake:\n      await this.notification({\n        method: 'notifications/initialized',\n      });\n\n      return this;\n    } catch (error) {\n      await this.close();\n      throw error;\n    }\n  }\n\n  async close(): Promise<void> {\n    if (this.isClosed) return;\n    await this.transport?.close();\n    this.onClose();\n  }\n\n  private async request<T extends ZodType<object>>({\n    request,\n    resultSchema,\n    options,\n  }: {\n    request: Request;\n    resultSchema: T;\n    options?: RequestOptions;\n  }): Promise<z.infer<T>> {\n    return new Promise((resolve, reject) => {\n      if (this.isClosed) {\n        return reject(\n          new MCPClientError({\n            message: 'Attempted to send a request from a closed client',\n          }),\n        );\n      }\n\n      const signal = options?.signal;\n      signal?.throwIfAborted();\n\n      const messageId = this.requestMessageId++;\n      const jsonrpcRequest: JSONRPCRequest = {\n        ...request,\n        jsonrpc: '2.0',\n        id: messageId,\n      };\n\n      const cleanup = () => {\n        this.responseHandlers.delete(messageId);\n      };\n\n      this.responseHandlers.set(messageId, response => {\n        if (signal?.aborted) {\n          return reject(\n            new MCPClientError({\n              message: 'Request was aborted',\n              cause: signal.reason,\n            }),\n          );\n        }\n\n        if (response instanceof Error) {\n          return reject(response);\n        }\n\n        try {\n          const result = resultSchema.parse(response.result);\n          resolve(result);\n        } catch (error) {\n          const parseError = new MCPClientError({\n            message: 'Failed to parse server initialization result',\n            cause: error,\n          });\n          reject(parseError);\n        }\n      });\n\n      this.transport.send(jsonrpcRequest).catch(error => {\n        cleanup();\n        reject(error);\n      });\n    });\n  }\n\n  private async listTools({\n    params,\n    options,\n  }: {\n    params?: PaginatedRequest['params'];\n    options?: RequestOptions;\n  } = {}): Promise<ListToolsResult> {\n    if (!this.serverCapabilities.tools) {\n      throw new MCPClientError({\n        message: `Server does not support tools`,\n      });\n    }\n\n    try {\n      return this.request({\n        request: { method: 'tools/list', params },\n        resultSchema: ListToolsResultSchema,\n        options,\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private async callTool({\n    name,\n    args,\n    options,\n  }: {\n    name: string;\n    args: Record<string, unknown>;\n    options?: ToolExecutionOptions;\n  }): Promise<CallToolResult> {\n    if (!this.serverCapabilities.tools) {\n      throw new MCPClientError({\n        message: `Server does not support tools`,\n      });\n    }\n\n    try {\n      return this.request({\n        request: { method: 'tools/call', params: { name, arguments: args } },\n        resultSchema: CallToolResultSchema,\n        options: {\n          signal: options?.abortSignal,\n        },\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private async notification(notification: Notification): Promise<void> {\n    const jsonrpcNotification: JSONRPCNotification = {\n      ...notification,\n      jsonrpc: '2.0',\n    };\n    await this.transport.send(jsonrpcNotification);\n  }\n\n  /**\n   * Returns a set of AI SDK tools from the MCP server\n   * @returns A record of tool names to their implementations\n   */\n  async tools<TOOL_SCHEMAS extends ToolSchemas = 'automatic'>({\n    schemas = 'automatic',\n  }: {\n    schemas?: TOOL_SCHEMAS;\n  } = {}): Promise<McpToolSet<TOOL_SCHEMAS>> {\n    const tools: Record<string, Tool> = {};\n\n    try {\n      const listToolsResult = await this.listTools();\n\n      for (const { name, description, inputSchema } of listToolsResult.tools) {\n        if (schemas !== 'automatic' && !(name in schemas)) {\n          continue;\n        }\n\n        const parameters =\n          schemas === 'automatic'\n            ? jsonSchema(inputSchema as JSONSchema7)\n            : schemas[name].parameters;\n\n        const self = this;\n        const toolWithExecute = tool({\n          description,\n          parameters,\n          execute: async (\n            args: inferParameters<typeof parameters>,\n            options: ToolExecutionOptions,\n          ): Promise<CallToolResult> => {\n            options?.abortSignal?.throwIfAborted();\n\n            return self.callTool({\n              name,\n              args,\n              options,\n            });\n          },\n        });\n\n        tools[name] = toolWithExecute;\n      }\n\n      return tools as McpToolSet<TOOL_SCHEMAS>;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private onClose(): void {\n    if (this.isClosed) return;\n\n    this.isClosed = true;\n    const error = new MCPClientError({\n      message: 'Connection closed',\n    });\n\n    for (const handler of this.responseHandlers.values()) {\n      handler(error);\n    }\n\n    this.responseHandlers.clear();\n  }\n\n  private onError(error: unknown): void {\n    if (this.onUncaughtError) {\n      this.onUncaughtError(error);\n    }\n  }\n\n  private onResponse(response: JSONRPCResponse | JSONRPCError): void {\n    const messageId = Number(response.id);\n    const handler = this.responseHandlers.get(messageId);\n\n    if (handler === undefined) {\n      throw new MCPClientError({\n        message: `Protocol error: Received a response for an unknown message ID: ${JSON.stringify(\n          response,\n        )}`,\n      });\n    }\n\n    this.responseHandlers.delete(messageId);\n\n    handler(\n      'result' in response\n        ? response\n        : new MCPClientError({\n            message: response.error.message,\n            cause: response.error,\n          }),\n    );\n  }\n}\n", "import { Schema } from '@ai-sdk/ui-utils';\nimport { z } from 'zod';\nimport { ToolResultContent } from '../prompt/tool-result-content';\nimport { CoreMessage } from '../prompt/message';\n\nexport type ToolParameters = z.ZodTypeAny | Schema<any>;\n\nexport type inferParameters<PARAMETERS extends ToolParameters> =\n  PARAMETERS extends Schema<any>\n    ? PARAMETERS['_type']\n    : PARAMETERS extends z.ZodTypeAny\n      ? z.infer<PARAMETERS>\n      : never;\n\nexport interface ToolExecutionOptions {\n  /**\n   * The ID of the tool call. You can use it e.g. when sending tool-call related information with stream data.\n   */\n  toolCallId: string;\n\n  /**\n   * Messages that were sent to the language model to initiate the response that contained the tool call.\n   * The messages **do not** include the system prompt nor the assistant response that contained the tool call.\n   */\n  messages: CoreMessage[];\n\n  /**\n   * An optional abort signal that indicates that the overall operation should be aborted.\n   */\n  abortSignal?: AbortSignal;\n}\n\n/**\nA tool contains the description and the schema of the input that the tool expects.\nThis enables the language model to generate the input.\n\nThe tool can also contain an optional execute function for the actual execution function of the tool.\n */\nexport type Tool<PARAMETERS extends ToolParameters = any, RESULT = any> = {\n  /**\nThe schema of the input that the tool expects. The language model will use this to generate the input.\nIt is also used to validate the output of the language model.\nUse descriptions to make the input understandable for the language model.\n   */\n  parameters: PARAMETERS;\n\n  /**\nAn optional description of what the tool does.\nWill be used by the language model to decide whether to use the tool.\nNot used for provider-defined tools.\n   */\n  description?: string;\n\n  /**\nOptional conversion function that maps the tool result to multi-part tool content for LLMs.\n   */\n  experimental_toToolResultContent?: (result: RESULT) => ToolResultContent;\n\n  /**\nAn async function that is called with the arguments from the tool call and produces a result.\nIf not provided, the tool will not be executed automatically.\n\n@args is the input of the tool call.\n@options.abortSignal is a signal that can be used to abort the tool call.\n   */\n  execute?: (\n    args: inferParameters<PARAMETERS>,\n    options: ToolExecutionOptions,\n  ) => PromiseLike<RESULT>;\n} & (\n  | {\n      /**\nFunction tool.\n       */\n      type?: undefined | 'function';\n    }\n  | {\n      /**\nProvider-defined tool.\n       */\n      type: 'provider-defined';\n\n      /**\nThe ID of the tool. Should follow the format `<provider-name>.<tool-name>`.\n       */\n      id: `${string}.${string}`;\n\n      /**\nThe arguments for configuring the tool. Must match the expected arguments defined by the provider for this tool.\n       */\n      args: Record<string, unknown>;\n    }\n);\n\n/**\n * @deprecated Use `Tool` instead.\n */\n// TODO remove in v5\nexport type CoreTool<\n  PARAMETERS extends ToolParameters = any,\n  RESULT = any,\n> = Tool<PARAMETERS, RESULT>;\n\n/**\nHelper function for inferring the execute args of a tool.\n */\n// Note: special type inference is needed for the execute function args to make sure they are inferred correctly.\nexport function tool<PARAMETERS extends ToolParameters, RESULT>(\n  tool: Tool<PARAMETERS, RESULT> & {\n    execute: (\n      args: inferParameters<PARAMETERS>,\n      options: ToolExecutionOptions,\n    ) => PromiseLike<RESULT>;\n  },\n): Tool<PARAMETERS, RESULT> & {\n  execute: (\n    args: inferParameters<PARAMETERS>,\n    options: ToolExecutionOptions,\n  ) => PromiseLike<RESULT>;\n};\nexport function tool<PARAMETERS extends ToolParameters, RESULT>(\n  tool: Tool<PARAMETERS, RESULT> & {\n    execute?: undefined;\n  },\n): Tool<PARAMETERS, RESULT> & {\n  execute: undefined;\n};\nexport function tool<PARAMETERS extends ToolParameters, RESULT = any>(\n  tool: Tool<PARAMETERS, RESULT>,\n): Tool<PARAMETERS, RESULT> {\n  return tool;\n}\n", "import { EventSourceParserStream } from 'eventsource-parser/stream';\nimport { MCPClientError } from '../../../errors';\nimport { JSONRPCMessage, JSONRPCMessageSchema } from './json-rpc-message';\nimport { MCPTransport } from './mcp-transport';\n\nexport class SseMCPTransport implements MCPTransport {\n  private endpoint?: URL;\n  private abortController?: AbortController;\n  private url: URL;\n  private connected = false;\n  private sseConnection?: {\n    close: () => void;\n  };\n\n  onclose?: () => void;\n  onerror?: (error: unknown) => void;\n  onmessage?: (message: JSONRPCMessage) => void;\n\n  constructor({ url }: { url: string }) {\n    this.url = new URL(url);\n  }\n\n  async start(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.connected) {\n        return resolve();\n      }\n\n      this.abortController = new AbortController();\n\n      const establishConnection = async () => {\n        try {\n          const response = await fetch(this.url.href, {\n            headers: {\n              Accept: 'text/event-stream',\n            },\n            signal: this.abortController?.signal,\n          });\n\n          if (!response.ok || !response.body) {\n            const error = new MCPClientError({\n              message: `MCP SSE Transport Error: ${response.status} ${response.statusText}`,\n            });\n            this.onerror?.(error);\n            return reject(error);\n          }\n\n          const stream = response.body\n            .pipeThrough(new TextDecoderStream())\n            .pipeThrough(new EventSourceParserStream());\n\n          const reader = stream.getReader();\n\n          const processEvents = async () => {\n            try {\n              while (true) {\n                const { done, value } = await reader.read();\n\n                if (done) {\n                  if (this.connected) {\n                    this.connected = false;\n                    throw new MCPClientError({\n                      message:\n                        'MCP SSE Transport Error: Connection closed unexpectedly',\n                    });\n                  }\n                  return;\n                }\n\n                const { event, data } = value;\n\n                if (event === 'endpoint') {\n                  this.endpoint = new URL(data, this.url);\n\n                  if (this.endpoint.origin !== this.url.origin) {\n                    throw new MCPClientError({\n                      message: `MCP SSE Transport Error: Endpoint origin does not match connection origin: ${this.endpoint.origin}`,\n                    });\n                  }\n\n                  this.connected = true;\n                  resolve();\n                } else if (event === 'message') {\n                  try {\n                    const message = JSONRPCMessageSchema.parse(\n                      JSON.parse(data),\n                    );\n                    this.onmessage?.(message);\n                  } catch (error) {\n                    const e = new MCPClientError({\n                      message:\n                        'MCP SSE Transport Error: Failed to parse message',\n                      cause: error,\n                    });\n                    this.onerror?.(e);\n                    // We do not throw here so we continue processing events after reporting the error\n                  }\n                }\n              }\n            } catch (error) {\n              if (error instanceof Error && error.name === 'AbortError') {\n                return;\n              }\n\n              this.onerror?.(error);\n              reject(error);\n            }\n          };\n\n          this.sseConnection = {\n            close: () => reader.cancel(),\n          };\n\n          processEvents();\n        } catch (error) {\n          if (error instanceof Error && error.name === 'AbortError') {\n            return;\n          }\n\n          this.onerror?.(error);\n          reject(error);\n        }\n      };\n\n      establishConnection();\n    });\n  }\n\n  async close(): Promise<void> {\n    this.connected = false;\n    this.sseConnection?.close();\n    this.abortController?.abort();\n    this.onclose?.();\n  }\n\n  async send(message: JSONRPCMessage): Promise<void> {\n    if (!this.endpoint || !this.connected) {\n      throw new MCPClientError({\n        message: 'MCP SSE Transport Error: Not connected',\n      });\n    }\n\n    try {\n      const headers = new Headers();\n      headers.set('Content-Type', 'application/json');\n      const init = {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(message),\n        signal: this.abortController?.signal,\n      };\n\n      const response = await fetch(this.endpoint, init);\n\n      if (!response.ok) {\n        const text = await response.text().catch(() => null);\n        const error = new MCPClientError({\n          message: `MCP SSE Transport Error: POSTing to endpoint (HTTP ${response.status}): ${text}`,\n        });\n        this.onerror?.(error);\n        return;\n      }\n    } catch (error) {\n      this.onerror?.(error);\n      return;\n    }\n  }\n}\n\nexport function deserializeMessage(line: string): JSONRPCMessage {\n  return JSONRPCMessageSchema.parse(JSON.parse(line));\n}\n", "import { z } from 'zod';\nimport { BaseParamsSchema, RequestSchema, ResultSchema } from './types';\n\nconst JSONRPC_VERSION = '2.0';\n\nconst JSONRPCRequestSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: z.union([z.string(), z.number().int()]),\n  })\n  .merge(RequestSchema)\n  .strict();\n\nexport type JSONRPCRequest = z.infer<typeof JSONRPCRequestSchema>;\n\nconst JSONRPCResponseSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: z.union([z.string(), z.number().int()]),\n    result: ResultSchema,\n  })\n  .strict();\n\nexport type JSONRPCResponse = z.infer<typeof JSONRPCResponseSchema>;\n\nconst JSONRPCErrorSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: z.union([z.string(), z.number().int()]),\n    error: z.object({\n      code: z.number().int(),\n      message: z.string(),\n      data: z.optional(z.unknown()),\n    }),\n  })\n  .strict();\n\nexport type JSONRPCError = z.infer<typeof JSONRPCErrorSchema>;\n\nconst JSONRPCNotificationSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n  })\n  .merge(\n    z.object({\n      method: z.string(),\n      params: z.optional(BaseParamsSchema),\n    }),\n  )\n  .strict();\n\nexport type JSONRPCNotification = z.infer<typeof JSONRPCNotificationSchema>;\n\nexport const JSONRPCMessageSchema = z.union([\n  JSONRPCRequestSchema,\n  JSONRPCNotificationSchema,\n  JSONRPCResponseSchema,\n  JSONRPCErrorSchema,\n]);\n\nexport type JSONRPCMessage = z.infer<typeof JSONRPCMessageSchema>;\n", "import { z } from 'zod';\nimport {\n  inferParameters,\n  Tool,\n  ToolExecutionOptions,\n  ToolParameters,\n} from '../tool';\n\nexport const LATEST_PROTOCOL_VERSION = '2024-11-05';\nexport const SUPPORTED_PROTOCOL_VERSIONS = [\n  LATEST_PROTOCOL_VERSION,\n  '2024-10-07',\n];\n\nexport type ToolSchemas =\n  | Record<string, { parameters: ToolParameters }>\n  | 'automatic'\n  | undefined;\n\nexport type McpToolSet<TOOL_SCHEMAS extends ToolSchemas = 'automatic'> =\n  TOOL_SCHEMAS extends Record<string, { parameters: ToolParameters }>\n    ? {\n        [K in keyof TOOL_SCHEMAS]: Tool<\n          TOOL_SCHEMAS[K]['parameters'],\n          CallToolResult\n        > & {\n          execute: (\n            args: inferParameters<TOOL_SCHEMAS[K]['parameters']>,\n            options: ToolExecutionOptions,\n          ) => PromiseLike<CallToolResult>;\n        };\n      }\n    : {\n        [k: string]: Tool<z.ZodUnknown, CallToolResult> & {\n          execute: (\n            args: unknown,\n            options: ToolExecutionOptions,\n          ) => PromiseLike<CallToolResult>;\n        };\n      };\n\nconst ClientOrServerImplementationSchema = z\n  .object({\n    name: z.string(),\n    version: z.string(),\n  })\n  .passthrough();\nexport type Configuration = z.infer<typeof ClientOrServerImplementationSchema>;\n\nexport const BaseParamsSchema = z\n  .object({\n    _meta: z.optional(z.object({}).passthrough()),\n  })\n  .passthrough();\ntype BaseParams = z.infer<typeof BaseParamsSchema>;\nexport const ResultSchema = BaseParamsSchema;\n\nexport const RequestSchema = z.object({\n  method: z.string(),\n  params: z.optional(BaseParamsSchema),\n});\nexport type Request = z.infer<typeof RequestSchema>;\nexport type RequestOptions = {\n  signal?: AbortSignal;\n  timeout?: number;\n  maxTotalTimeout?: number;\n};\n\nexport type Notification = z.infer<typeof RequestSchema>;\n\nconst ServerCapabilitiesSchema = z\n  .object({\n    experimental: z.optional(z.object({}).passthrough()),\n    logging: z.optional(z.object({}).passthrough()),\n    prompts: z.optional(\n      z\n        .object({\n          listChanged: z.optional(z.boolean()),\n        })\n        .passthrough(),\n    ),\n    resources: z.optional(\n      z\n        .object({\n          subscribe: z.optional(z.boolean()),\n          listChanged: z.optional(z.boolean()),\n        })\n        .passthrough(),\n    ),\n    tools: z.optional(\n      z\n        .object({\n          listChanged: z.optional(z.boolean()),\n        })\n        .passthrough(),\n    ),\n  })\n  .passthrough();\nexport type ServerCapabilities = z.infer<typeof ServerCapabilitiesSchema>;\n\nexport const InitializeResultSchema = ResultSchema.extend({\n  protocolVersion: z.string(),\n  capabilities: ServerCapabilitiesSchema,\n  serverInfo: ClientOrServerImplementationSchema,\n  instructions: z.optional(z.string()),\n});\nexport type InitializeResult = z.infer<typeof InitializeResultSchema>;\n\nexport type PaginatedRequest = Request & {\n  params?: BaseParams & {\n    cursor?: string;\n  };\n};\n\nconst PaginatedResultSchema = ResultSchema.extend({\n  nextCursor: z.optional(z.string()),\n});\n\nconst ToolSchema = z\n  .object({\n    name: z.string(),\n    description: z.optional(z.string()),\n    inputSchema: z\n      .object({\n        type: z.literal('object'),\n        properties: z.optional(z.object({}).passthrough()),\n      })\n      .passthrough(),\n  })\n  .passthrough();\nexport type MCPTool = z.infer<typeof ToolSchema>;\nexport const ListToolsResultSchema = PaginatedResultSchema.extend({\n  tools: z.array(ToolSchema),\n});\nexport type ListToolsResult = z.infer<typeof ListToolsResultSchema>;\n\nconst TextContentSchema = z\n  .object({\n    type: z.literal('text'),\n    text: z.string(),\n  })\n  .passthrough();\nconst ImageContentSchema = z\n  .object({\n    type: z.literal('image'),\n    data: z.string().base64(),\n    mimeType: z.string(),\n  })\n  .passthrough();\nconst ResourceContentsSchema = z\n  .object({\n    /**\n     * The URI of this resource.\n     */\n    uri: z.string(),\n    /**\n     * The MIME type of this resource, if known.\n     */\n    mimeType: z.optional(z.string()),\n  })\n  .passthrough();\nconst TextResourceContentsSchema = ResourceContentsSchema.extend({\n  text: z.string(),\n});\nconst BlobResourceContentsSchema = ResourceContentsSchema.extend({\n  blob: z.string().base64(),\n});\nconst EmbeddedResourceSchema = z\n  .object({\n    type: z.literal('resource'),\n    resource: z.union([TextResourceContentsSchema, BlobResourceContentsSchema]),\n  })\n  .passthrough();\n\nexport const CallToolResultSchema = ResultSchema.extend({\n  content: z.array(\n    z.union([TextContentSchema, ImageContentSchema, EmbeddedResourceSchema]),\n  ),\n  isError: z.boolean().default(false).optional(),\n}).or(\n  ResultSchema.extend({\n    toolResult: z.unknown(),\n  }),\n);\nexport type CallToolResult = z.infer<typeof CallToolResultSchema>;\n", "import { MCPClientError } from '../../../errors';\nimport { JSONRPCMessage } from './json-rpc-message';\nimport { SseMCPTransport } from './mcp-sse-transport';\n\n/**\n * Transport interface for MCP (Model Context Protocol) communication.\n * Maps to the `Transport` interface in the MCP spec.\n */\nexport interface MCPTransport {\n  /**\n   * Initialize and start the transport\n   */\n  start(): Promise<void>;\n\n  /**\n   * Send a JSON-RPC message through the transport\n   * @param message The JSON-RPC message to send\n   */\n  send(message: JSONRPCMessage): Promise<void>;\n\n  /**\n   * Clean up and close the transport\n   */\n  close(): Promise<void>;\n\n  /**\n   * Event handler for transport closure\n   */\n  onclose?: () => void;\n\n  /**\n   * Event handler for transport errors\n   */\n  onerror?: (error: Error) => void;\n\n  /**\n   * Event handler for received messages\n   */\n  onmessage?: (message: JSONRPCMessage) => void;\n}\n\nexport interface SSEConfig {\n  type: 'sse';\n  url: string;\n}\nexport type MCPTransportConfig = SSEConfig;\n\nexport function createMcpTransport(config: MCPTransportConfig): MCPTransport {\n  if (config.type !== 'sse') {\n    throw new MCPClientError({\n      message:\n        'Unsupported or invalid transport configuration. If you are using a custom transport, make sure it implements the MCPTransport interface.',\n    });\n  }\n\n  return new SseMCPTransport(config);\n}\n\nexport function isCustomMcpTransport(\n  transport: MCPTransportConfig | MCPTransport,\n): transport is MCPTransport {\n  return (\n    'start' in transport &&\n    typeof transport.start === 'function' &&\n    'send' in transport &&\n    typeof transport.send === 'function' &&\n    'close' in transport &&\n    typeof transport.close === 'function'\n  );\n}\n", "import { InvalidArgumentError } from '../../errors/invalid-argument-error';\n\n/**\n * Calculates the cosine similarity between two vectors. This is a useful metric for\n * comparing the similarity of two vectors such as embeddings.\n *\n * @param vector1 - The first vector.\n * @param vector2 - The second vector.\n * @param options - Optional configuration.\n * @param options.throwErrorForEmptyVectors - If true, throws an error for empty vectors. Default: false.\n *\n * @returns The cosine similarity between vector1 and vector2.\n * @returns 0 if either vector is the zero vector.\n *\n * @throws {InvalidArgumentError} If throwErrorForEmptyVectors is true and vectors are empty.\n * @throws {InvalidArgumentError} If the vectors do not have the same length.\n */\nexport function cosineSimilarity(\n  vector1: number[],\n  vector2: number[],\n  // TODO remove throw option in 5.0\n  options?: {\n    /**\n     * @deprecated will be removed in 5.0\n     */\n    throwErrorForEmptyVectors?: boolean;\n  },\n): number {\n  if (vector1.length !== vector2.length) {\n    throw new InvalidArgumentError({\n      parameter: 'vector1,vector2',\n      value: { vector1Length: vector1.length, vector2Length: vector2.length },\n      message: `Vectors must have the same length`,\n    });\n  }\n\n  const n = vector1.length;\n\n  if (n === 0) {\n    if (options?.throwErrorForEmptyVectors) {\n      throw new InvalidArgumentError({\n        parameter: 'vector1',\n        value: vector1,\n        message: 'Vectors cannot be empty',\n      });\n    }\n\n    return 0; // Return 0 for empty vectors if no error is thrown\n  }\n\n  let magnitudeSquared1 = 0;\n  let magnitudeSquared2 = 0;\n  let dotProduct = 0;\n\n  for (let i = 0; i < n; i++) {\n    const value1 = vector1[i];\n    const value2 = vector2[i];\n\n    magnitudeSquared1 += value1 * value1;\n    magnitudeSquared2 += value2 * value2;\n    dotProduct += value1 * value2;\n  }\n\n  return magnitudeSquared1 === 0 || magnitudeSquared2 === 0\n    ? 0\n    : dotProduct /\n        (Math.sqrt(magnitudeSquared1) * Math.sqrt(magnitudeSquared2));\n}\n", "import { delay as delayFunction } from '@ai-sdk/provider-utils';\n\n/**\n * Creates a ReadableStream that emits the provided values with an optional delay between each value.\n *\n * @param options - The configuration options\n * @param options.chunks - Array of values to be emitted by the stream\n * @param options.initialDelayInMs - Optional initial delay in milliseconds before emitting the first value (default: 0). Can be set to `null` to skip the initial delay. The difference between `initialDelayInMs: null` and `initialDelayInMs: 0` is that `initialDelayInMs: null` will emit the values without any delay, while `initialDelayInMs: 0` will emit the values with a delay of 0 milliseconds.\n * @param options.chunkDelayInMs - Optional delay in milliseconds between emitting each value (default: 0). Can be set to `null` to skip the delay. The difference between `chunkDelayInMs: null` and `chunkDelayInMs: 0` is that `chunkDelayInMs: null` will emit the values without any delay, while `chunkDelayInMs: 0` will emit the values with a delay of 0 milliseconds.\n * @returns A ReadableStream that emits the provided values\n */\nexport function simulateReadableStream<T>({\n  chunks,\n  initialDelayInMs = 0,\n  chunkDelayInMs = 0,\n  _internal,\n}: {\n  chunks: T[];\n  initialDelayInMs?: number | null;\n  chunkDelayInMs?: number | null;\n  _internal?: {\n    delay?: (ms: number | null) => Promise<void>;\n  };\n}): ReadableStream<T> {\n  const delay = _internal?.delay ?? delayFunction;\n\n  let index = 0;\n\n  return new ReadableStream({\n    async pull(controller) {\n      if (index < chunks.length) {\n        await delay(index === 0 ? initialDelayInMs : chunkDelayInMs);\n        controller.enqueue(chunks[index++]);\n      } else {\n        controller.close();\n      }\n    },\n  });\n}\n", "import {\n  AssistantMessage,\n  DataMessage,\n  formatAssistantStreamPart,\n} from '@ai-sdk/ui-utils';\n\n/**\nYou can pass the thread and the latest message into the `AssistantResponse`. This establishes the context for the response.\n */\ntype AssistantResponseSettings = {\n  /**\nThe thread ID that the response is associated with.\n   */\n  threadId: string;\n\n  /**\nThe ID of the latest message that the response is associated with.\n */\n  messageId: string;\n};\n\n/**\nThe process parameter is a callback in which you can run the assistant on threads, and send messages and data messages to the client.\n */\ntype AssistantResponseCallback = (options: {\n  /**\nForwards an assistant message (non-streaming) to the client.\n   */\n  sendMessage: (message: AssistantMessage) => void;\n\n  /**\nSend a data message to the client. You can use this to provide information for rendering custom UIs while the assistant is processing the thread.\n */\n  sendDataMessage: (message: DataMessage) => void;\n\n  /**\nForwards the assistant response stream to the client. Returns the `Run` object after it completes, or when it requires an action.\n   */\n  forwardStream: (stream: any) => Promise<any | undefined>;\n}) => Promise<void>;\n\n/**\nThe `AssistantResponse` allows you to send a stream of assistant update to `useAssistant`.\nIt is designed to facilitate streaming assistant responses to the `useAssistant` hook.\nIt receives an assistant thread and a current message, and can send messages and data messages to the client.\n */\nexport function AssistantResponse(\n  { threadId, messageId }: AssistantResponseSettings,\n  process: AssistantResponseCallback,\n): Response {\n  const stream = new ReadableStream({\n    async start(controller) {\n      const textEncoder = new TextEncoder();\n\n      const sendMessage = (message: AssistantMessage) => {\n        controller.enqueue(\n          textEncoder.encode(\n            formatAssistantStreamPart('assistant_message', message),\n          ),\n        );\n      };\n\n      const sendDataMessage = (message: DataMessage) => {\n        controller.enqueue(\n          textEncoder.encode(\n            formatAssistantStreamPart('data_message', message),\n          ),\n        );\n      };\n\n      const sendError = (errorMessage: string) => {\n        controller.enqueue(\n          textEncoder.encode(formatAssistantStreamPart('error', errorMessage)),\n        );\n      };\n\n      const forwardStream = async (stream: any) => {\n        let result: any | undefined = undefined;\n\n        for await (const value of stream) {\n          switch (value.event) {\n            case 'thread.message.created': {\n              controller.enqueue(\n                textEncoder.encode(\n                  formatAssistantStreamPart('assistant_message', {\n                    id: value.data.id,\n                    role: 'assistant',\n                    content: [{ type: 'text', text: { value: '' } }],\n                  }),\n                ),\n              );\n              break;\n            }\n\n            case 'thread.message.delta': {\n              const content = value.data.delta.content?.[0];\n\n              if (content?.type === 'text' && content.text?.value != null) {\n                controller.enqueue(\n                  textEncoder.encode(\n                    formatAssistantStreamPart('text', content.text.value),\n                  ),\n                );\n              }\n\n              break;\n            }\n\n            case 'thread.run.completed':\n            case 'thread.run.requires_action': {\n              result = value.data;\n              break;\n            }\n          }\n        }\n\n        return result;\n      };\n\n      // send the threadId and messageId as the first message:\n      controller.enqueue(\n        textEncoder.encode(\n          formatAssistantStreamPart('assistant_control_data', {\n            threadId,\n            messageId,\n          }),\n        ),\n      );\n\n      try {\n        await process({\n          sendMessage,\n          sendDataMessage,\n          forwardStream,\n        });\n      } catch (error) {\n        sendError((error as any).message ?? `${error}`);\n      } finally {\n        controller.close();\n      }\n    },\n    pull(controller) {},\n    cancel() {},\n  });\n\n  return new Response(stream, {\n    status: 200,\n    headers: {\n      'Content-Type': 'text/plain; charset=utf-8',\n    },\n  });\n}\n", "import { formatDataStreamPart } from '@ai-sdk/ui-utils';\nimport { DataStreamWriter } from '../core/data-stream/data-stream-writer';\nimport { mergeStreams } from '../core/util/merge-streams';\nimport { prepareResponseHeaders } from '../core/util/prepare-response-headers';\nimport {\n  createCallbacksTransformer,\n  StreamCallbacks,\n} from './stream-callbacks';\nimport { StreamData } from './stream-data';\n\ntype LangChainImageDetail = 'auto' | 'low' | 'high';\n\ntype LangChainMessageContentText = {\n  type: 'text';\n  text: string;\n};\n\ntype LangChainMessageContentImageUrl = {\n  type: 'image_url';\n  image_url:\n    | string\n    | {\n        url: string;\n        detail?: LangChainImageDetail;\n      };\n};\n\ntype LangChainMessageContentComplex =\n  | LangChainMessageContentText\n  | LangChainMessageContentImageUrl\n  | (Record<string, any> & {\n      type?: 'text' | 'image_url' | string;\n    })\n  | (Record<string, any> & {\n      type?: never;\n    });\n\ntype LangChainMessageContent = string | LangChainMessageContentComplex[];\n\ntype LangChainAIMessageChunk = {\n  content: LangChainMessageContent;\n};\n\n// LC stream event v2\ntype LangChainStreamEvent = {\n  event: string;\n  data: any;\n};\n\nfunction toDataStreamInternal(\n  stream:\n    | ReadableStream<LangChainStreamEvent>\n    | ReadableStream<LangChainAIMessageChunk>\n    | ReadableStream<string>,\n  callbacks?: StreamCallbacks,\n) {\n  return stream\n    .pipeThrough(\n      new TransformStream<\n        LangChainStreamEvent | LangChainAIMessageChunk | string\n      >({\n        transform: async (value, controller) => {\n          // text stream:\n          if (typeof value === 'string') {\n            controller.enqueue(value);\n            return;\n          }\n\n          // LC stream events v2:\n          if ('event' in value) {\n            // chunk is AIMessage Chunk for on_chat_model_stream event:\n            if (value.event === 'on_chat_model_stream') {\n              forwardAIMessageChunk(\n                value.data?.chunk as LangChainAIMessageChunk,\n                controller,\n              );\n            }\n            return;\n          }\n\n          // AI Message chunk stream:\n          forwardAIMessageChunk(value, controller);\n        },\n      }),\n    )\n    .pipeThrough(createCallbacksTransformer(callbacks))\n    .pipeThrough(new TextDecoderStream())\n    .pipeThrough(\n      new TransformStream({\n        transform: async (chunk, controller) => {\n          controller.enqueue(formatDataStreamPart('text', chunk));\n        },\n      }),\n    );\n}\n\n/**\nConverts LangChain output streams to an AI SDK Data Stream.\n\nThe following streams are supported:\n- `LangChainAIMessageChunk` streams (LangChain `model.stream` output)\n- `string` streams (LangChain `StringOutputParser` output)\n */\nexport function toDataStream(\n  stream:\n    | ReadableStream<LangChainStreamEvent>\n    | ReadableStream<LangChainAIMessageChunk>\n    | ReadableStream<string>,\n  callbacks?: StreamCallbacks,\n) {\n  return toDataStreamInternal(stream, callbacks).pipeThrough(\n    new TextEncoderStream(),\n  );\n}\n\nexport function toDataStreamResponse(\n  stream:\n    | ReadableStream<LangChainStreamEvent>\n    | ReadableStream<LangChainAIMessageChunk>\n    | ReadableStream<string>,\n  options?: {\n    init?: ResponseInit;\n    data?: StreamData;\n    callbacks?: StreamCallbacks;\n  },\n) {\n  const dataStream = toDataStreamInternal(\n    stream,\n    options?.callbacks,\n  ).pipeThrough(new TextEncoderStream());\n  const data = options?.data;\n  const init = options?.init;\n\n  const responseStream = data\n    ? mergeStreams(data.stream, dataStream)\n    : dataStream;\n\n  return new Response(responseStream, {\n    status: init?.status ?? 200,\n    statusText: init?.statusText,\n    headers: prepareResponseHeaders(init?.headers, {\n      contentType: 'text/plain; charset=utf-8',\n      dataStreamVersion: 'v1',\n    }),\n  });\n}\n\nexport function mergeIntoDataStream(\n  stream:\n    | ReadableStream<LangChainStreamEvent>\n    | ReadableStream<LangChainAIMessageChunk>\n    | ReadableStream<string>,\n  options: { dataStream: DataStreamWriter; callbacks?: StreamCallbacks },\n) {\n  options.dataStream.merge(toDataStreamInternal(stream, options.callbacks));\n}\n\nfunction forwardAIMessageChunk(\n  chunk: LangChainAIMessageChunk,\n  controller: TransformStreamDefaultController<any>,\n) {\n  if (typeof chunk.content === 'string') {\n    controller.enqueue(chunk.content);\n  } else {\n    const content: LangChainMessageContentComplex[] = chunk.content;\n    for (const item of content) {\n      if (item.type === 'text') {\n        controller.enqueue(item.text);\n      }\n    }\n  }\n}\n", "/**\n * Configuration options and helper callback methods for stream lifecycle events.\n */\nexport interface StreamCallbacks {\n  /** `onStart`: Called once when the stream is initialized. */\n  onStart?: () => Promise<void> | void;\n\n  /**\n   * `onCompletion`: Called for each tokenized message.\n   *\n   * @deprecated Use `onFinal` instead.\n   */\n  onCompletion?: (completion: string) => Promise<void> | void;\n\n  /** `onFinal`: Called once when the stream is closed with the final completion message. */\n  onFinal?: (completion: string) => Promise<void> | void;\n\n  /** `onToken`: Called for each tokenized message. */\n  onToken?: (token: string) => Promise<void> | void;\n\n  /** `onText`: Called for each text chunk. */\n  onText?: (text: string) => Promise<void> | void;\n}\n\n/**\n * Creates a transform stream that encodes input messages and invokes optional callback functions.\n * The transform stream uses the provided callbacks to execute custom logic at different stages of the stream's lifecycle.\n * - `onStart`: Called once when the stream is initialized.\n * - `onToken`: Called for each tokenized message.\n * - `onCompletion`: Called every time a completion message is received. This can occur multiple times when using e.g. OpenAI functions\n * - `onFinal`: Called once when the stream is closed with the final completion message.\n *\n * This function is useful when you want to process a stream of messages and perform specific actions during the stream's lifecycle.\n *\n * @param {StreamCallbacks} [callbacks] - An object containing the callback functions.\n * @return {TransformStream<string, Uint8Array>} A transform stream that encodes input messages as Uint8Array and allows the execution of custom logic through callbacks.\n *\n * @example\n * const callbacks = {\n *   onStart: async () => console.log('Stream started'),\n *   onToken: async (token) => console.log(`Token: ${token}`),\n *   onCompletion: async (completion) => console.log(`Completion: ${completion}`)\n *   onFinal: async () => data.close()\n * };\n * const transformer = createCallbacksTransformer(callbacks);\n */\nexport function createCallbacksTransformer(\n  callbacks: StreamCallbacks | undefined = {},\n): TransformStream<string, Uint8Array> {\n  const textEncoder = new TextEncoder();\n  let aggregatedResponse = '';\n\n  return new TransformStream({\n    async start(): Promise<void> {\n      if (callbacks.onStart) await callbacks.onStart();\n    },\n\n    async transform(message, controller): Promise<void> {\n      controller.enqueue(textEncoder.encode(message));\n\n      aggregatedResponse += message;\n\n      if (callbacks.onToken) await callbacks.onToken(message);\n      if (callbacks.onText && typeof message === 'string') {\n        await callbacks.onText(message);\n      }\n    },\n\n    async flush(): Promise<void> {\n      if (callbacks.onCompletion) {\n        await callbacks.onCompletion(aggregatedResponse);\n      }\n      if (callbacks.onFinal) {\n        await callbacks.onFinal(aggregatedResponse);\n      }\n    },\n  });\n}\n", "import { convertAsyncIteratorToReadableStream } from '@ai-sdk/provider-utils';\nimport { formatDataStreamPart } from '@ai-sdk/ui-utils';\nimport { DataStreamWriter } from '../core/data-stream/data-stream-writer';\nimport { mergeStreams } from '../core/util/merge-streams';\nimport { prepareResponseHeaders } from '../core/util/prepare-response-headers';\nimport {\n  createCallbacksTransformer,\n  StreamCallbacks,\n} from './stream-callbacks';\nimport { StreamData } from './stream-data';\n\ntype EngineResponse = {\n  delta: string;\n};\n\nfunction toDataStreamInternal(\n  stream: AsyncIterable<EngineResponse>,\n  callbacks?: StreamCallbacks,\n) {\n  const trimStart = trimStartOfStream();\n\n  return convertAsyncIteratorToReadableStream(stream[Symbol.asyncIterator]())\n    .pipeThrough(\n      new TransformStream({\n        async transform(message, controller): Promise<void> {\n          controller.enqueue(trimStart(message.delta));\n        },\n      }),\n    )\n    .pipeThrough(createCallbacksTransformer(callbacks))\n    .pipeThrough(new TextDecoderStream())\n    .pipeThrough(\n      new TransformStream({\n        transform: async (chunk, controller) => {\n          controller.enqueue(formatDataStreamPart('text', chunk));\n        },\n      }),\n    );\n}\n\nexport function toDataStream(\n  stream: AsyncIterable<EngineResponse>,\n  callbacks?: StreamCallbacks,\n) {\n  return toDataStreamInternal(stream, callbacks).pipeThrough(\n    new TextEncoderStream(),\n  );\n}\n\nexport function toDataStreamResponse(\n  stream: AsyncIterable<EngineResponse>,\n  options: {\n    init?: ResponseInit;\n    data?: StreamData;\n    callbacks?: StreamCallbacks;\n  } = {},\n) {\n  const { init, data, callbacks } = options;\n  const dataStream = toDataStreamInternal(stream, callbacks).pipeThrough(\n    new TextEncoderStream(),\n  );\n  const responseStream = data\n    ? mergeStreams(data.stream, dataStream)\n    : dataStream;\n\n  return new Response(responseStream, {\n    status: init?.status ?? 200,\n    statusText: init?.statusText,\n    headers: prepareResponseHeaders(init?.headers, {\n      contentType: 'text/plain; charset=utf-8',\n      dataStreamVersion: 'v1',\n    }),\n  });\n}\n\nexport function mergeIntoDataStream(\n  stream: AsyncIterable<EngineResponse>,\n  options: {\n    dataStream: DataStreamWriter;\n    callbacks?: StreamCallbacks;\n  },\n) {\n  options.dataStream.merge(toDataStreamInternal(stream, options.callbacks));\n}\n\nfunction trimStartOfStream(): (text: string) => string {\n  let isStreamStart = true;\n\n  return (text: string): string => {\n    if (isStreamStart) {\n      text = text.trimStart();\n      if (text) isStreamStart = false;\n    }\n    return text;\n  };\n}\n", "import { JSONValue, formatDataStreamPart } from '@ai-sdk/ui-utils';\nimport { HANGING_STREAM_WARNING_TIME_MS } from '../util/constants';\n\n/**\n * A stream wrapper to send custom JSON-encoded data back to the client.\n *\n * @deprecated Please use `createDataStream`, `createDataStreamResponse`, and `pipeDataStreamToResponse` instead.\n */\nexport class StreamData {\n  private encoder = new TextEncoder();\n\n  private controller: ReadableStreamController<Uint8Array> | null = null;\n  public stream: ReadableStream<Uint8Array>;\n\n  private isClosed: boolean = false;\n  private warningTimeout: NodeJS.Timeout | null = null;\n\n  constructor() {\n    const self = this;\n\n    this.stream = new ReadableStream({\n      start: async controller => {\n        self.controller = controller;\n\n        // Set a timeout to show a warning if the stream is not closed within 3 seconds\n        if (process.env.NODE_ENV === 'development') {\n          self.warningTimeout = setTimeout(() => {\n            console.warn(\n              'The data stream is hanging. Did you forget to close it with `data.close()`?',\n            );\n          }, HANGING_STREAM_WARNING_TIME_MS);\n        }\n      },\n      pull: controller => {\n        // No-op: we don't need to do anything special on pull\n      },\n      cancel: reason => {\n        this.isClosed = true;\n      },\n    });\n  }\n\n  async close(): Promise<void> {\n    if (this.isClosed) {\n      throw new Error('Data Stream has already been closed.');\n    }\n\n    if (!this.controller) {\n      throw new Error('Stream controller is not initialized.');\n    }\n\n    this.controller.close();\n    this.isClosed = true;\n\n    // Clear the warning timeout if the stream is closed\n    if (this.warningTimeout) {\n      clearTimeout(this.warningTimeout);\n    }\n  }\n\n  append(value: JSONValue): void {\n    if (this.isClosed) {\n      throw new Error('Data Stream has already been closed.');\n    }\n\n    if (!this.controller) {\n      throw new Error('Stream controller is not initialized.');\n    }\n\n    this.controller.enqueue(\n      this.encoder.encode(formatDataStreamPart('data', [value])),\n    );\n  }\n\n  appendMessageAnnotation(value: JSONValue): void {\n    if (this.isClosed) {\n      throw new Error('Data Stream has already been closed.');\n    }\n\n    if (!this.controller) {\n      throw new Error('Stream controller is not initialized.');\n    }\n\n    this.controller.enqueue(\n      this.encoder.encode(formatDataStreamPart('message_annotations', [value])),\n    );\n  }\n}\n", "/**\n * Warning time for notifying developers that a stream is hanging in dev mode\n * using a console.warn.\n */\nexport const HANGING_STREAM_WARNING_TIME_MS = 15 * 1000;\n", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=llm.types.js.map", null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=agent.types.js.map", null, null, "export const bigIntParser = (\n  val: null | undefined | string | number | bigint\n): bigint | null => {\n  if (val === null || val === undefined) {\n    return null;\n  }\n\n  return BigInt(val);\n};\n", "const baseUrl: string = \"https://api.covalenthq.com/v1\";\r\n\r\nexport const endpointGenerator = (\r\n  extension: string = \"\",\r\n  params: {\r\n    key: string;\r\n    value: boolean | null | string | string[] | number | undefined;\r\n  }[] = []\r\n): URL => {\r\n  extension = extension.replace(baseUrl, \"\");\r\n  if (extension.startsWith(\"/\")) {\r\n    extension = extension.slice(1);\r\n  }\r\n  if (!extension.endsWith(\"/\")) {\r\n    extension = `${extension}/`;\r\n  }\r\n\r\n  const urlParams = new URLSearchParams();\r\n\r\n  params.forEach((param) => {\r\n    if (param.value !== undefined && param.value !== null) {\r\n      urlParams.append(param.key, param.value.toString());\r\n    }\r\n  });\r\n\r\n  return new URL(`${baseUrl}/${extension}?${urlParams}`);\r\n};\r\n", "import { bigIntParser } from \"../utils/functions/bigIntParser\";\r\nimport { endpointGenerator } from \"../utils/functions/endpointGenerator\";\r\nimport { type Execution } from \"../utils/functions/execution\";\r\nimport {\r\n  type ChainActivityResponse,\r\n  type GetAddressActivityQueryParamOpts,\r\n  type GetMultiChainBalanceQueryParamOpts,\r\n  type GetMultiChainMultiAddressTransactionsParamOtps,\r\n  type MultiChainBalanceResponse,\r\n  type MultiChainMultiAddressTransactionsResponse,\r\n} from \"../utils/types/AllChainService.types\";\r\nimport { type GoldRushResponse } from \"../utils/types/Generic.types\";\r\n\r\n/**\r\n * Cross Chain API\r\n *\r\n */\r\nexport class AllChainsService {\r\n  constructor(private execution: Execution) {}\r\n\r\n  /**\r\n   *\r\n   * Commonly used to locate chains which an address is active on with a single API call.\r\n   *\r\n   * @param {string} walletAddress - The requested wallet address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetAddressActivityQueryParamOpts} queryParamOpts\r\n   *   - `testnets`: Set to true to include testnets with activity in the response. By default, it's set to `false` and only returns mainnet activity.\r\n   *\r\n   */\r\n  public async getAddressActivity(\r\n    walletAddress: string,\r\n    queryParamOpts?: GetAddressActivityQueryParamOpts\r\n  ): Promise<GoldRushResponse<ChainActivityResponse>> {\r\n    const endpoint = endpointGenerator(`address/${walletAddress}/activity`, [\r\n      {\r\n        key: \"testnets\",\r\n        value: queryParamOpts?.testnets,\r\n      },\r\n    ]);\r\n\r\n    const parseData = (data: GoldRushResponse<ChainActivityResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((activityItem) => ({\r\n              ...activityItem,\r\n              last_seen_at: activityItem.last_seen_at\r\n                ? new Date(activityItem.last_seen_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<ChainActivityResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get transactions cross chains and addresses.\r\n   *\r\n   * @param {Chain[]} chains - An array of the chain names or IDs to retrieve transactions from. Defaults to all foundational chains.\r\n   * @param {string[]} addresses - An array of addresses for which transactions are fetched. Does not support name resolution.\r\n   * @param {number} limit - Number of transactions to return per page, up to the default max of 100 items.\r\n   * @param {string} before - Pagination cursor pointing to fetch transactions before a certain point.\r\n   * @param {string} after - Pagination cursor pointing to fetch transactions after a certain point.\r\n   * @param {boolean} withLogs - Whether to include raw logs in the response.\r\n   * @param {boolean} withDecodedLogs - Whether to include decoded logs in the response.\r\n   * @param {Quote | CryptocurrencyQuote} quoteCurrency - The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, `GBP`, `BTC` and `ETH`.\r\n   *\r\n   */\r\n  public async getMultiChainMultiAddressTransactions(\r\n    queryParamOpts?: GetMultiChainMultiAddressTransactionsParamOtps\r\n  ): Promise<GoldRushResponse<MultiChainMultiAddressTransactionsResponse>> {\r\n    const endpoint = endpointGenerator(`allchains/transactions`, [\r\n      {\r\n        key: \"chains\",\r\n        value: queryParamOpts?.chains as string[],\r\n      },\r\n      {\r\n        key: \"addresses\",\r\n        value: queryParamOpts?.addresses,\r\n      },\r\n      {\r\n        key: \"limit\",\r\n        value: queryParamOpts?.limit,\r\n      },\r\n      {\r\n        key: \"before\",\r\n        value: queryParamOpts?.before,\r\n      },\r\n      {\r\n        key: \"after\",\r\n        value: queryParamOpts?.after,\r\n      },\r\n      {\r\n        key: \"with-logs\",\r\n        value: queryParamOpts?.withLogs,\r\n      },\r\n      {\r\n        key: \"with-decoded-logs\",\r\n        value: queryParamOpts?.withDecodedLogs,\r\n      },\r\n      {\r\n        key: \"quote-currency\",\r\n        value: queryParamOpts?.quoteCurrency,\r\n      },\r\n    ]);\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<MultiChainMultiAddressTransactionsResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((txItem) => ({\r\n              ...txItem,\r\n              value: bigIntParser(txItem.value),\r\n              fees_paid: bigIntParser(txItem.fees_paid),\r\n              block_signed_at: txItem.block_signed_at\r\n                ? new Date(txItem.block_signed_at)\r\n                : null,\r\n              log_events: txItem.log_events\r\n                ? txItem.log_events.map((logItem) => ({\r\n                    ...logItem,\r\n                    block_signed_at: logItem.block_signed_at\r\n                      ? new Date(logItem.block_signed_at)\r\n                      : null,\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<MultiChainMultiAddressTransactionsResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @deprecated This method is deprecated and will be removed in the upcoming versions. Please use `AllChainsService.getMultiChainMultiAddressTransactions` instead.\r\n   *\r\n   * Commonly used to get transactions cross chains and addresses.\r\n   *\r\n   * @param {Chain[]} chains - An array of the chain names or IDs to retrieve transactions from. Defaults to all foundational chains.\r\n   * @param {string[]} addresses - An array of addresses for which transactions are fetched. Does not support name resolution.\r\n   * @param {number} limit - Number of transactions to return per page, up to the default max of 100 items.\r\n   * @param {string} before - Pagination cursor pointing to fetch transactions before a certain point.\r\n   * @param {string} after - Pagination cursor pointing to fetch transactions after a certain point.\r\n   * @param {boolean} withLogs - Whether to include raw logs in the response.\r\n   * @param {boolean} withDecodedLogs - Whether to include decoded logs in the response.\r\n   * @param {Quote | CryptocurrencyQuote} quoteCurrency - The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, `GBP`, `BTC` and `ETH`.\r\n   *\r\n   */\r\n  public async getMultiChainAndMultiAddressTransactions(\r\n    queryParamOpts?: GetMultiChainMultiAddressTransactionsParamOtps\r\n  ): Promise<GoldRushResponse<MultiChainMultiAddressTransactionsResponse>> {\r\n    return await this.getMultiChainMultiAddressTransactions(queryParamOpts);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} walletAddress - The requested wallet Address.\r\n   * @param {GetMultiChainBalanceQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`,  `GBP`, `BTC`, and `ETH`.\r\n   *   - `chains`: Array chain ids or chain names to query. Limited to 10 chains.\r\n   *   - `limit`: The number of items to return. Default is 100.\r\n   *   - `timestamp`: The timestamp to query balances at. If omitted, the latest balances are returned.\r\n   *   - `cursorBefore`: The cursor of previous page.\r\n   */\r\n  public async getMultiChainBalances(\r\n    walletAddress: string,\r\n    queryParamOpts?: GetMultiChainBalanceQueryParamOpts\r\n  ): Promise<GoldRushResponse<MultiChainBalanceResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `allchains/address/${walletAddress}/balances`,\r\n      [\r\n        {\r\n          key: \"chains\",\r\n          value: queryParamOpts?.chains as string[],\r\n        },\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n        {\r\n          key: \"limit\",\r\n          value: queryParamOpts?.limit,\r\n        },\r\n        {\r\n          key: \"cutoff-timestamp\",\r\n          value: queryParamOpts?.cutoffTimestamp,\r\n        },\r\n        {\r\n          key: \"before\",\r\n          value: queryParamOpts?.before,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<MultiChainBalanceResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((balanceItem) => ({\r\n              ...balanceItem,\r\n              balance: bigIntParser(balanceItem.balance),\r\n              balance_24h: bigIntParser(balanceItem.balance_24h),\r\n              last_transferred_at: balanceItem.last_transferred_at\r\n                ? new Date(balanceItem.last_transferred_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<MultiChainBalanceResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n}\r\n", "import {\n  type GoldRushResponse,\n  type Nullable,\n  type Pagination,\n  type PaginationLinks,\n} from \"../types/Generic.types\";\nimport { type Execution } from \"./execution\";\n\nexport async function* paginateEndpoint<\n  T extends\n    | Nullable<{ pagination: Pagination }>\n    | Nullable<{ links: PaginationLinks }>\n    | null,\n>(\n  endpoint: URL,\n  execution: Execution,\n  parseData: (data: GoldRushResponse<T>) => GoldRushResponse<T>,\n  implementation: \"pagination\" | \"links\"\n): AsyncIterable<GoldRushResponse<T>> {\n  let _endpoint: URL = new URL(endpoint);\n  let hasMore: boolean = true;\n  let page_number: number = +(_endpoint.searchParams.get(\"page-number\") ?? 0);\n\n  while (hasMore) {\n    try {\n      if (implementation === \"pagination\") {\n        _endpoint.searchParams.set(\"page-number\", page_number.toString());\n\n        const parsedData = await execution.execute<T>(_endpoint, parseData);\n\n        if (parsedData.error) {\n          throw parsedData;\n        }\n\n        if (\n          !(\n            parsedData.data as {\n              pagination: Pagination;\n            }\n          )?.pagination?.has_more\n        ) {\n          hasMore = false;\n        } else {\n          page_number++;\n        }\n\n        yield parsedData as GoldRushResponse<T>;\n      } else if (implementation === \"links\") {\n        const parsedData = await execution.execute<T>(_endpoint, parseData);\n        const prevLink: string | null =\n          (\n            parsedData.data as {\n              links: PaginationLinks;\n            }\n          )?.links?.prev || null;\n\n        if (!prevLink) {\n          hasMore = false;\n        } else {\n          _endpoint = new URL(`${prevLink}?${_endpoint.searchParams}`);\n        }\n\n        yield parsedData as GoldRushResponse<T>;\n      }\n    } catch (error: any) {\n      hasMore = false;\n      yield {\n        data: null,\n        error: true,\n        error_code: error?.cause?.code || error?.error_code || 500,\n        error_message:\n          error?.cause?.message ||\n          error?.error_message ||\n          \"Internal server error\",\n      };\n    }\n  }\n}\n", "import { bigIntParser } from \"../utils/functions/bigIntParser\";\r\nimport { endpointGenerator } from \"../utils/functions/endpointGenerator\";\r\nimport { type Execution } from \"../utils/functions/execution\";\r\nimport { paginateEndpoint } from \"../utils/functions/paginateEndpoint\";\r\nimport {\r\n  type BalancesResponse,\r\n  type Erc20TransfersResponse,\r\n  type GetErc20TransfersForWalletAddressQueryParamOpts,\r\n  type GetHistoricalPortfolioForWalletAddressQueryParamOpts,\r\n  type GetHistoricalTokenBalancesForWalletAddressQueryParamOpts,\r\n  type GetNativeTokenBalanceQueryParamOpts,\r\n  type GetTokenBalancesForWalletAddressQueryParamOpts,\r\n  type GetTokenHoldersV2ForTokenAddressQueryParamOpts,\r\n  type HistoricalBalancesResponse,\r\n  type PortfolioResponse,\r\n  type TokenBalanceNativeResponse,\r\n  type TokenHoldersResponse,\r\n} from \"../utils/types/BalanceService.types\";\r\nimport {\r\n  type Chain,\r\n  type GoldRushResponse,\r\n} from \"../utils/types/Generic.types\";\r\n\r\n/**\r\n * Balances APIs\r\n *\r\n */\r\nexport class BalanceService {\r\n  constructor(private execution: Execution) {}\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch the native, fungible (ERC20), and non-fungible (ERC721 & ERC1155) tokens held by an address. Response includes spot prices and other metadata.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetTokenBalancesForWalletAddressQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `nft`: If `true`, NFTs will be included in the response.\r\n   *   - `noNftFetch`: If `true`, only NFTs that have been cached will be included in the response. Helpful for faster response times.\r\n   *   - `noSpam`: If `true`, the suspected spam tokens are removed. Supports `eth-mainnet` and `matic-mainnet`.\r\n   *   - `noNftAssetMetadata`: If `true`, the response shape is limited to a list of collections and token ids, omitting metadata and asset information. Helpful for faster response times and wallets holding a large number of NFTs.\r\n   *\r\n   */\r\n  public async getTokenBalancesForWalletAddress(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    queryParamOpts?: GetTokenBalancesForWalletAddressQueryParamOpts\r\n  ): Promise<GoldRushResponse<BalancesResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/balances_v2`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n        {\r\n          key: \"nft\",\r\n          value: queryParamOpts?.nft,\r\n        },\r\n        {\r\n          key: \"no-nft-fetch\",\r\n          value: queryParamOpts?.noNftFetch,\r\n        },\r\n        {\r\n          key: \"no-spam\",\r\n          value: queryParamOpts?.noSpam,\r\n        },\r\n        {\r\n          key: \"no-nft-asset-metadata\",\r\n          value: queryParamOpts?.noNftAssetMetadata,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<BalancesResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((balanceItem) => ({\r\n              ...balanceItem,\r\n              balance: bigIntParser(balanceItem.balance),\r\n              balance_24h: bigIntParser(balanceItem.balance_24h),\r\n              last_transferred_at: balanceItem.last_transferred_at\r\n                ? new Date(balanceItem.last_transferred_at)\r\n                : null,\r\n              nft_data: balanceItem.nft_data\r\n                ? balanceItem.nft_data.map((nftItem) => ({\r\n                    ...nftItem,\r\n                    token_id: bigIntParser(nftItem.token_id),\r\n                    token_balance: bigIntParser(nftItem.token_balance),\r\n                    token_price_wei: bigIntParser(nftItem.token_price_wei),\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<BalancesResponse>(endpoint, parseData);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to render a daily portfolio balance for an address broken down by the token. The timeframe is user-configurable, defaults to 30 days.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetHistoricalPortfolioForWalletAddressQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `days`: The number of days to return data for. Defaults to 30 days.\r\n   *\r\n   */\r\n  public async getHistoricalPortfolioForWalletAddress(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    queryParamOpts?: GetHistoricalPortfolioForWalletAddressQueryParamOpts\r\n  ): Promise<GoldRushResponse<PortfolioResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/portfolio_v2`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n        {\r\n          key: \"days\",\r\n          value: queryParamOpts?.days,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<PortfolioResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items =\r\n          data.data.items?.map((portfolioItem) => ({\r\n            ...portfolioItem,\r\n            holdings:\r\n              portfolioItem.holdings?.map((holdingItem) => ({\r\n                ...holdingItem,\r\n                timestamp: holdingItem.timestamp\r\n                  ? new Date(holdingItem.timestamp)\r\n                  : null,\r\n                close: {\r\n                  ...holdingItem.close!,\r\n                  balance: bigIntParser(holdingItem.close?.balance),\r\n                },\r\n                high: {\r\n                  ...holdingItem.high!,\r\n                  balance: bigIntParser(holdingItem.high?.balance),\r\n                },\r\n                low: {\r\n                  ...holdingItem.low!,\r\n                  balance: bigIntParser(holdingItem.low?.balance),\r\n                },\r\n                open: {\r\n                  ...holdingItem.open!,\r\n                  balance: bigIntParser(holdingItem.open?.balance),\r\n                },\r\n              })) || null,\r\n          })) || null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<PortfolioResponse>(endpoint, parseData);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to render the transfer-in and transfer-out of a token along with historical prices from an address.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetErc20TransfersForWalletAddressQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `contractAddress`: The requested contract address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   *   - `startingBlock`: The block height to start from, defaults to `0`.\r\n   *   - `endingBlock`: The block height to end at, defaults to current block height.\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *\r\n   */\r\n  public async *getErc20TransfersForWalletAddress(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    queryParamOpts?: GetErc20TransfersForWalletAddressQueryParamOpts\r\n  ): AsyncIterable<GoldRushResponse<Erc20TransfersResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/transfers_v2`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n        {\r\n          key: \"contract-address\",\r\n          value: queryParamOpts?.contractAddress,\r\n        },\r\n        {\r\n          key: \"starting-block\",\r\n          value: queryParamOpts?.startingBlock,\r\n        },\r\n        {\r\n          key: \"ending-block\",\r\n          value: queryParamOpts?.endingBlock,\r\n        },\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<Erc20TransfersResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((ercItem) => ({\r\n              ...ercItem,\r\n              block_signed_at: ercItem.block_signed_at\r\n                ? new Date(ercItem.block_signed_at)\r\n                : null,\r\n              value: bigIntParser(ercItem.value),\r\n              fees_paid: bigIntParser(ercItem.fees_paid),\r\n              transfers: ercItem.transfers\r\n                ? ercItem.transfers.map((transferItem) => ({\r\n                    ...transferItem,\r\n                    balance: bigIntParser(transferItem.balance),\r\n                    block_signed_at: transferItem.block_signed_at\r\n                      ? new Date(transferItem.block_signed_at)\r\n                      : null,\r\n                    delta: bigIntParser(transferItem.delta),\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n      return data;\r\n    };\r\n\r\n    for await (const data of paginateEndpoint<Erc20TransfersResponse>(\r\n      endpoint,\r\n      this.execution,\r\n      parseData,\r\n      \"pagination\"\r\n    )) {\r\n      yield data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to render the transfer-in and transfer-out of a token along with historical prices from an address.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetErc20TransfersForWalletAddressQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `contractAddress`: The requested contract address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   *   - `startingBlock`: The block height to start from, defaults to `0`.\r\n   *   - `endingBlock`: The block height to end at, defaults to current block height.\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *\r\n   */\r\n  public async getErc20TransfersForWalletAddressByPage(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    queryParamOpts?: GetErc20TransfersForWalletAddressQueryParamOpts\r\n  ): Promise<GoldRushResponse<Erc20TransfersResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/transfers_v2`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n        {\r\n          key: \"contract-address\",\r\n          value: queryParamOpts?.contractAddress,\r\n        },\r\n        {\r\n          key: \"starting-block\",\r\n          value: queryParamOpts?.startingBlock,\r\n        },\r\n        {\r\n          key: \"ending-block\",\r\n          value: queryParamOpts?.endingBlock,\r\n        },\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<Erc20TransfersResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((blockTxItem) => ({\r\n              ...blockTxItem,\r\n              block_signed_at: blockTxItem.block_signed_at\r\n                ? new Date(blockTxItem.block_signed_at)\r\n                : null,\r\n              fees_paid: bigIntParser(blockTxItem.fees_paid),\r\n              transfers:\r\n                blockTxItem.transfers?.map((transferItem) => ({\r\n                  ...transferItem,\r\n                  balance: bigIntParser(transferItem.balance),\r\n                  block_signed_at: transferItem.block_signed_at\r\n                    ? new Date(transferItem.block_signed_at)\r\n                    : null,\r\n                  delta: bigIntParser(transferItem.delta),\r\n                })) || null,\r\n              value: bigIntParser(blockTxItem.value),\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<Erc20TransfersResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get a list of all the token holders for a specified ERC20 or ERC721 token. Returns historic token holders when block-height is set (defaults to `latest`). Useful for building pie charts of token holders.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} tokenAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetTokenHoldersV2ForTokenAddressQueryParamOpts} queryParamOpts\r\n   *   - `blockHeight`: Ending block to define a block range. Omitting this parameter defaults to the latest block height.\r\n   *   - `pageSize`: Number of items per page. Note: Currently, only values of `100` and `1000` are supported. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *   - `date`: Ending date to define a block range (YYYY-MM-DD). Omitting this parameter defaults to the current date.\r\n   *\r\n   */\r\n  public async *getTokenHoldersV2ForTokenAddress(\r\n    chainName: Chain,\r\n    tokenAddress: string,\r\n    queryParamOpts?: GetTokenHoldersV2ForTokenAddressQueryParamOpts\r\n  ): AsyncIterable<GoldRushResponse<TokenHoldersResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/tokens/${tokenAddress}/token_holders_v2`,\r\n      [\r\n        {\r\n          key: \"block-height\",\r\n          value: queryParamOpts?.blockHeight,\r\n        },\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n        {\r\n          key: \"date\",\r\n          value: queryParamOpts?.date,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<TokenHoldersResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((tokenItem) => ({\r\n              ...tokenItem,\r\n              balance: bigIntParser(tokenItem.balance),\r\n              total_supply: bigIntParser(tokenItem.total_supply),\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    for await (const data of paginateEndpoint<TokenHoldersResponse>(\r\n      endpoint,\r\n      this.execution,\r\n      parseData,\r\n      \"pagination\"\r\n    )) {\r\n      yield data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get a list of all the token holders for a specified ERC20 or ERC721 token. Returns historic token holders when block-height is set (defaults to `latest`). Useful for building pie charts of token holders.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} tokenAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetTokenHoldersV2ForTokenAddressQueryParamOpts} queryParamOpts\r\n   *   - `blockHeight`: Ending block to define a block range. Omitting this parameter defaults to the latest block height.\r\n   *   - `pageSize`: Number of items per page. Note: Currently, only values of `100` and `1000` are supported. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *   - `date`: Ending date to define a block range (YYYY-MM-DD). Omitting this parameter defaults to the current date.\r\n   *\r\n   */\r\n  public async getTokenHoldersV2ForTokenAddressByPage(\r\n    chainName: Chain,\r\n    tokenAddress: string,\r\n    queryParamOpts?: GetTokenHoldersV2ForTokenAddressQueryParamOpts\r\n  ): Promise<GoldRushResponse<TokenHoldersResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/tokens/${tokenAddress}/token_holders_v2`,\r\n      [\r\n        {\r\n          key: \"block-height\",\r\n          value: queryParamOpts?.blockHeight,\r\n        },\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n        {\r\n          key: \"date\",\r\n          value: queryParamOpts?.date,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<TokenHoldersResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((balanceItem) => ({\r\n              ...balanceItem,\r\n              balance: bigIntParser(balanceItem.balance),\r\n              total_supply: bigIntParser(balanceItem.total_supply),\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<TokenHoldersResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch the historical native, fungible (ERC20), and non-fungible (ERC721 & ERC1155) tokens held by an address at a given block height or date. Response includes daily prices and other metadata.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetHistoricalTokenBalancesForWalletAddressQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `nft`: If `true`, NFTs will be included in the response.\r\n   *   - `noNftFetch`: If `true`, only NFTs that have been cached will be included in the response. Helpful for faster response times.\r\n   *   - `noSpam`: If `true`, the suspected spam tokens are removed. Supports `eth-mainnet` and `matic-mainnet`.\r\n   *   - `noNftAssetMetadata`: If `true`, the response shape is limited to a list of collections and token ids, omitting metadata and asset information. Helpful for faster response times and wallets holding a large number of NFTs.\r\n   *   - `blockHeight`: Ending block to define a block range. Omitting this parameter defaults to the latest block height.\r\n   *   - `date`: Ending date to define a block range (YYYY-MM-DD). Omitting this parameter defaults to the current date.\r\n   *\r\n   */\r\n  public async getHistoricalTokenBalancesForWalletAddress(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    queryParamOpts?: GetHistoricalTokenBalancesForWalletAddressQueryParamOpts\r\n  ): Promise<GoldRushResponse<HistoricalBalancesResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/historical_balances`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n        {\r\n          key: \"nft\",\r\n          value: queryParamOpts?.nft,\r\n        },\r\n        {\r\n          key: \"no-nft-fetch\",\r\n          value: queryParamOpts?.noNftFetch,\r\n        },\r\n        {\r\n          key: \"no-spam\",\r\n          value: queryParamOpts?.noSpam,\r\n        },\r\n        {\r\n          key: \"no-nft-asset-metadata\",\r\n          value: queryParamOpts?.noNftAssetMetadata,\r\n        },\r\n        {\r\n          key: \"block-height\",\r\n          value: queryParamOpts?.blockHeight,\r\n        },\r\n        {\r\n          key: \"date\",\r\n          value: queryParamOpts?.date,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<HistoricalBalancesResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((balanceItem) => ({\r\n              ...balanceItem,\r\n              balance: bigIntParser(balanceItem.balance),\r\n              last_transferred_at: balanceItem.last_transferred_at\r\n                ? new Date(balanceItem.last_transferred_at)\r\n                : null,\r\n              nft_data: balanceItem.nft_data\r\n                ? balanceItem.nft_data.map((nftItem) => ({\r\n                    ...nftItem,\r\n                    token_id: bigIntParser(nftItem.token_id),\r\n                    token_balance: bigIntParser(nftItem.token_balance),\r\n                    token_price_wei: bigIntParser(nftItem.token_price_wei),\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<HistoricalBalancesResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetNativeTokenBalanceQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `blockHeight`: Ending block to define a block range. Omitting this parameter defaults to the latest block height.\r\n   *\r\n   */\r\n  public async getNativeTokenBalance(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    queryParamOpts?: GetNativeTokenBalanceQueryParamOpts\r\n  ): Promise<GoldRushResponse<TokenBalanceNativeResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/balances_native`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n        {\r\n          key: \"block-height\",\r\n          value: queryParamOpts?.blockHeight,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<TokenBalanceNativeResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((balanceItem) => ({\r\n              ...balanceItem,\r\n              balance: bigIntParser(balanceItem.balance),\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<TokenBalanceNativeResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n}\r\n", "import { bigIntParser } from \"../utils/functions/bigIntParser\";\r\nimport { endpointGenerator } from \"../utils/functions/endpointGenerator\";\r\nimport { type Execution } from \"../utils/functions/execution\";\r\nimport { paginateEndpoint } from \"../utils/functions/paginateEndpoint\";\r\nimport {\r\n  type ChainActivityResponse,\r\n  type GetAddressActivityQueryParamOpts,\r\n} from \"../utils/types/AllChainService.types\";\r\nimport {\r\n  type AllChainsResponse,\r\n  type AllChainsStatusResponse,\r\n  type BlockHeightsResponse,\r\n  type BlockResponse,\r\n  type GasPricesResponse,\r\n  type GetBlockHeightsQueryParamOpts,\r\n  type GetGasPricesQueryParamOpts,\r\n  type GetLogEventsByAddressQueryParamOpts,\r\n  type GetLogEventsByTopicHashQueryParamOpts,\r\n  type GetLogsQueryParamOpts,\r\n  type GetLogsResponse,\r\n  type LogEventsByAddressResponse,\r\n  type LogEventsByTopicHashResponse,\r\n  type ResolvedAddress,\r\n} from \"../utils/types/BaseService.types\";\r\nimport {\r\n  type Chain,\r\n  type GoldRushResponse,\r\n} from \"../utils/types/Generic.types\";\r\n\r\n/**\r\n * Base API\r\n *\r\n */\r\nexport class BaseService {\r\n  constructor(private execution: Execution) {}\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch and render a single block for a block explorer.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} blockHeight - The block height or `latest` for the latest block available.\r\n   *\r\n   */\r\n  public async getBlock(\r\n    chainName: Chain,\r\n    blockHeight: string\r\n  ): Promise<GoldRushResponse<BlockResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/block_v2/${blockHeight}`,\r\n      []\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<BlockHeightsResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((blockItem) => ({\r\n              ...blockItem,\r\n              signed_at: blockItem.signed_at\r\n                ? new Date(blockItem.signed_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<BlockHeightsResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to resolve ENS, RNS and Unstoppable Domains addresses.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   *\r\n   */\r\n  public async getResolvedAddress(\r\n    chainName: Chain,\r\n    walletAddress: string\r\n  ): Promise<GoldRushResponse<ResolvedAddress>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/resolve_address`,\r\n      []\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<ResolvedAddress>) => {\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<ResolvedAddress>(endpoint, parseData);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get all the block heights within a particular date range. Useful for rendering a display where you sort blocks by day.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} startDate - The start date in YYYY-MM-DD format.\r\n   * @param {string | \"latest\"} endDate - The end date in YYYY-MM-DD format. Also accepts \"latest\" for the latest block height\r\n   * @param {GetBlockHeightsQueryParamOpts} queryParamOpts\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *\r\n   */\r\n  public async *getBlockHeights(\r\n    chainName: Chain,\r\n    startDate: string,\r\n    endDate: string | \"latest\",\r\n    queryParamOpts?: GetBlockHeightsQueryParamOpts\r\n  ): AsyncIterable<GoldRushResponse<BlockHeightsResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/block_v2/${startDate}/${endDate}`,\r\n      [\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<BlockHeightsResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((blockItem) => ({\r\n              ...blockItem,\r\n              signed_at: blockItem.signed_at\r\n                ? new Date(blockItem.signed_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    for await (const data of paginateEndpoint<BlockHeightsResponse>(\r\n      endpoint,\r\n      this.execution,\r\n      parseData,\r\n      \"pagination\"\r\n    )) {\r\n      yield data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get all the block heights within a particular date range. Useful for rendering a display where you sort blocks by day.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} startDate - The start date in YYYY-MM-DD format.\r\n   * @param {string | \"latest\"} endDate - The end date in YYYY-MM-DD format. Also accepts \"latest\" for the latest block height\r\n   * @param {GetBlockHeightsQueryParamOpts} queryParamOpts\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *\r\n   */\r\n  public async getBlockHeightsByPage(\r\n    chainName: Chain,\r\n    startDate: string,\r\n    endDate: string | \"latest\",\r\n    queryParamOpts?: GetBlockHeightsQueryParamOpts\r\n  ): Promise<GoldRushResponse<BlockHeightsResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/block_v2/${startDate}/${endDate}`,\r\n      [\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<BlockHeightsResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((blockItem) => ({\r\n              ...blockItem,\r\n              signed_at: blockItem.signed_at\r\n                ? new Date(blockItem.signed_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<BlockHeightsResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get all the event logs of the latest block, or for a range of blocks. Includes sender contract metadata as well as decoded logs.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {GetLogsQueryParamOpts} queryParamOpts\r\n   *   - `startingBlock`: The first block to retrieve log events with. Accepts decimals, hexadecimals, or the strings `earliest` and `latest`.\r\n   *   - `endingBlock`: The last block to retrieve log events with. Accepts decimals, hexadecimals, or the strings `earliest` and `latest`.\r\n   *   - `address`: The address of the log events sender contract.\r\n   *   - `topics`: The topic hash(es) to retrieve logs with.\r\n   *   - `blockHash`: The block hash to retrieve logs for.\r\n   *   - `skipDecode`: Omit decoded log events.\r\n   *\r\n   */\r\n  public async getLogs(\r\n    chainName: Chain,\r\n    queryParamOpts?: GetLogsQueryParamOpts\r\n  ): Promise<GoldRushResponse<GetLogsResponse>> {\r\n    const endpoint = endpointGenerator(`${chainName}/events`, [\r\n      {\r\n        key: \"starting-block\",\r\n        value: queryParamOpts?.startingBlock,\r\n      },\r\n      {\r\n        key: \"ending-block\",\r\n        value: queryParamOpts?.endingBlock,\r\n      },\r\n      {\r\n        key: \"address\",\r\n        value: queryParamOpts?.address,\r\n      },\r\n      {\r\n        key: \"topics\",\r\n        value: queryParamOpts?.topics,\r\n      },\r\n      {\r\n        key: \"block-hash\",\r\n        value: queryParamOpts?.blockHash,\r\n      },\r\n      {\r\n        key: \"skip-decode\",\r\n        value: queryParamOpts?.skipDecode,\r\n      },\r\n    ]);\r\n\r\n    const parseData = (data: GoldRushResponse<GetLogsResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((logItem) => ({\r\n              ...logItem,\r\n              block_signed_at: logItem.block_signed_at\r\n                ? new Date(logItem.block_signed_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<GetLogsResponse>(endpoint, parseData);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get all the event logs emitted from a particular contract address. Useful for building dashboards that examine on-chain interactions.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} contractAddress - The requested contract address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetLogEventsByAddressQueryParamOpts} queryParamOpts\r\n   *   - `startingBlock`: The first block to retrieve log events with. Accepts decimals, hexadecimals, or the strings `earliest` and `latest`.\r\n   *   - `endingBlock`: The last block to retrieve log events with. Accepts decimals, hexadecimals, or the strings `earliest` and `latest`.\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *\r\n   */\r\n  public async *getLogEventsByAddress(\r\n    chainName: Chain,\r\n    contractAddress: string,\r\n    queryParamOpts?: GetLogEventsByAddressQueryParamOpts\r\n  ): AsyncIterable<GoldRushResponse<LogEventsByAddressResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/events/address/${contractAddress}`,\r\n      [\r\n        {\r\n          key: \"starting-block\",\r\n          value: queryParamOpts?.startingBlock,\r\n        },\r\n        {\r\n          key: \"ending-block\",\r\n          value: queryParamOpts?.endingBlock,\r\n        },\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<LogEventsByAddressResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((logItem) => ({\r\n              ...logItem,\r\n              block_signed_at: logItem.block_signed_at\r\n                ? new Date(logItem.block_signed_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    for await (const data of paginateEndpoint<LogEventsByAddressResponse>(\r\n      endpoint,\r\n      this.execution,\r\n      parseData,\r\n      \"pagination\"\r\n    )) {\r\n      yield data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get all the event logs emitted from a particular contract address. Useful for building dashboards that examine on-chain interactions.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} contractAddress - The requested contract address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetLogEventsByAddressQueryParamOpts} queryParamOpts\r\n   *   - `startingBlock`: The first block to retrieve log events with. Accepts decimals, hexadecimals, or the strings `earliest` and `latest`.\r\n   *   - `endingBlock`: The last block to retrieve log events with. Accepts decimals, hexadecimals, or the strings `earliest` and `latest`.\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *\r\n   */\r\n  public async getLogEventsByAddressByPage(\r\n    chainName: Chain,\r\n    contractAddress: string,\r\n    queryParamOpts?: GetLogEventsByAddressQueryParamOpts\r\n  ): Promise<GoldRushResponse<LogEventsByAddressResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/events/address/${contractAddress}`,\r\n      [\r\n        {\r\n          key: \"starting-block\",\r\n          value: queryParamOpts?.startingBlock,\r\n        },\r\n        {\r\n          key: \"ending-block\",\r\n          value: queryParamOpts?.endingBlock,\r\n        },\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<LogEventsByAddressResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((logItem) => ({\r\n              ...logItem,\r\n              block_signed_at: logItem.block_signed_at\r\n                ? new Date(logItem.block_signed_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<LogEventsByAddressResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get all event logs of the same topic hash across all contracts within a particular chain. Useful for cross-sectional analysis of event logs that are emitted on-chain.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} topicHash - The endpoint will return event logs that contain this topic hash.\r\n   * @param {GetLogEventsByTopicHashQueryParamOpts} queryParamOpts\r\n   *   - `startingBlock`: The first block to retrieve log events with. Accepts decimals, hexadecimals, or the strings `earliest` and `latest`.\r\n   *   - `endingBlock`: The last block to retrieve log events with. Accepts decimals, hexadecimals, or the strings `earliest` and `latest`.\r\n   *   - `secondaryTopics`: Additional topic hash(es) to filter on - padded & unpadded address fields are supported. Separate multiple topics with a comma.\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *\r\n   */\r\n  public async *getLogEventsByTopicHash(\r\n    chainName: Chain,\r\n    topicHash: string,\r\n    queryParamOpts?: GetLogEventsByTopicHashQueryParamOpts\r\n  ): AsyncIterable<GoldRushResponse<LogEventsByTopicHashResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/events/topics/${topicHash}`,\r\n      [\r\n        {\r\n          key: \"starting-block\",\r\n          value: queryParamOpts?.startingBlock,\r\n        },\r\n        {\r\n          key: \"ending-block\",\r\n          value: queryParamOpts?.endingBlock,\r\n        },\r\n        {\r\n          key: \"secondary-topics\",\r\n          value: queryParamOpts?.secondaryTopics,\r\n        },\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<LogEventsByTopicHashResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((logItem) => ({\r\n              ...logItem,\r\n              block_signed_at: logItem.block_signed_at\r\n                ? new Date(logItem.block_signed_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    for await (const data of paginateEndpoint<LogEventsByTopicHashResponse>(\r\n      endpoint,\r\n      this.execution,\r\n      parseData,\r\n      \"pagination\"\r\n    )) {\r\n      yield data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get all event logs of the same topic hash across all contracts within a particular chain. Useful for cross-sectional analysis of event logs that are emitted on-chain.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} topicHash - The endpoint will return event logs that contain this topic hash.\r\n   * @param {GetLogEventsByTopicHashQueryParamOpts} queryParamOpts\r\n   *   - `startingBlock`: The first block to retrieve log events with. Accepts decimals, hexadecimals, or the strings `earliest` and `latest`.\r\n   *   - `endingBlock`: The last block to retrieve log events with. Accepts decimals, hexadecimals, or the strings `earliest` and `latest`.\r\n   *   - `secondaryTopics`: Additional topic hash(es) to filter on - padded & unpadded address fields are supported. Separate multiple topics with a comma.\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *\r\n   */\r\n  public async getLogEventsByTopicHashByPage(\r\n    chainName: Chain,\r\n    topicHash: string,\r\n    queryParamOpts?: GetLogEventsByTopicHashQueryParamOpts\r\n  ): Promise<GoldRushResponse<LogEventsByTopicHashResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/events/topics/${topicHash}`,\r\n      [\r\n        {\r\n          key: \"starting-block\",\r\n          value: queryParamOpts?.startingBlock,\r\n        },\r\n        {\r\n          key: \"ending-block\",\r\n          value: queryParamOpts?.endingBlock,\r\n        },\r\n        {\r\n          key: \"secondary-topics\",\r\n          value: queryParamOpts?.secondaryTopics,\r\n        },\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<LogEventsByTopicHashResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((logItem) => ({\r\n              ...logItem,\r\n              block_signed_at: logItem.block_signed_at\r\n                ? new Date(logItem.block_signed_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<LogEventsByTopicHashResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to build internal dashboards for all supported chains on Covalent.\r\n   *\r\n   *\r\n   */\r\n  public async getAllChains(): Promise<GoldRushResponse<AllChainsResponse>> {\r\n    const endpoint = endpointGenerator(`chains`);\r\n\r\n    const parseData = (data: GoldRushResponse<AllChainsResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((chainItem) => ({\r\n              ...chainItem,\r\n              chain_id: chainItem.chain_id ? +chainItem.chain_id : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<AllChainsResponse>(endpoint, parseData);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to build internal status dashboards of all supported chains.\r\n   *\r\n   *\r\n   */\r\n  public async getAllChainStatus(): Promise<\r\n    GoldRushResponse<AllChainsStatusResponse>\r\n  > {\r\n    const endpoint = endpointGenerator(`chains/status`);\r\n\r\n    const parseData = (data: GoldRushResponse<AllChainsStatusResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((chainItem) => ({\r\n              ...chainItem,\r\n              chain_id: chainItem.chain_id ? +chainItem.chain_id : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<AllChainsStatusResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @deprecated This method is deprecated and will be removed in the upcoming versions. Please use `AllChainsService.getAddressActivity` instead.\r\n   *\r\n   * Commonly used to locate chains which an address is active on with a single API call.\r\n   *\r\n   * @param {string} walletAddress - The requested wallet address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetAddressActivityQueryParamOpts} queryParamOpts\r\n   *   - `testnets`: Set to true to include testnets with activity in the response. By default, it's set to `false` and only returns mainnet activity.\r\n   *\r\n   */\r\n  public async getAddressActivity(\r\n    walletAddress: string,\r\n    queryParamOpts?: GetAddressActivityQueryParamOpts\r\n  ): Promise<GoldRushResponse<ChainActivityResponse>> {\r\n    const endpoint = endpointGenerator(`address/${walletAddress}/activity`, [\r\n      {\r\n        key: \"testnets\",\r\n        value: queryParamOpts?.testnets,\r\n      },\r\n    ]);\r\n\r\n    const parseData = (data: GoldRushResponse<ChainActivityResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((activityItem) => ({\r\n              ...activityItem,\r\n              last_seen_at: activityItem.last_seen_at\r\n                ? new Date(activityItem.last_seen_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<ChainActivityResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} eventType - The desired event type to retrieve gas prices for. Supports `erc20` transfer events, `uniswapv3` swap events and `nativetokens` transfers.\r\n   * @param {GetGasPricesQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *\r\n   */\r\n  public async getGasPrices(\r\n    chainName: Chain,\r\n    eventType: \"erc20\" | \"nativetokens\" | \"uniswapv3\",\r\n    queryParamOpts?: GetGasPricesQueryParamOpts\r\n  ): Promise<GoldRushResponse<GasPricesResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/event/${eventType}/gas_prices`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<GasPricesResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.base_fee = bigIntParser(data.data.base_fee);\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<GasPricesResponse>(endpoint, parseData);\r\n  }\r\n}\r\n", "export enum ChainName {\r\n  ETH_MAINNET = \"eth-mainnet\",\r\n  ETH_SEPOLIA = \"eth-sepolia\",\r\n  ETH_HOLESKY = \"eth-holesky\",\r\n  MATIC_MAINNET = \"matic-mainnet\",\r\n  AVALANCHE_MAINNET = \"avalanche-mainnet\",\r\n  AVALANCHE_TESTNET = \"avalanche-testnet\",\r\n  BSC_MAINNET = \"bsc-mainnet\",\r\n  BSC_TESTNET = \"bsc-testnet\",\r\n  MOONBEAM_MAINNET = \"moonbeam-mainnet\",\r\n  MOONBEAM_MOONBASE_ALPHA = \"moonbeam-moonbase-alpha\",\r\n  MOONBEAM_MOONRIVER = \"moonbeam-moonriver\",\r\n  RSK_MAINNET = \"rsk-mainnet\",\r\n  RSK_TESTNET = \"rsk-testnet\",\r\n  ARBITRUM_MAINNET = \"arbitrum-mainnet\",\r\n  ARBITRUM_NOVA_MAINNET = \"arbitrum-nova-mainnet\",\r\n  ARBITRUM_SEPOLIA = \"arbitrum-sepolia\",\r\n  FANTOM_MAINNET = \"fantom-mainnet\",\r\n  FANTOM_TESTNET = \"fantom-testnet\",\r\n  PALM_MAINNET = \"palm-mainnet\",\r\n  PALM_TESTNET = \"palm-testnet\",\r\n  SOLANA_MAINNET = \"solana-mainnet\",\r\n  BTC_MAINNET = \"btc-mainnet\",\r\n  AXIE_MAINNET = \"axie-mainnet\",\r\n  OPTIMISM_MAINNET = \"optimism-mainnet\",\r\n  OPTIMISM_SEPOLIA = \"optimism-sepolia\",\r\n  CRONOS_MAINNET = \"cronos-mainnet\",\r\n  CRONOS_TESTNET = \"cronos-testnet\",\r\n  CRONOS_ZKEVM_TESTNET = \"cronos-zkevm-testnet\",\r\n  CRONOS_ZKEVM_MAINNET = \"cronos-zkevm-mainnet\",\r\n  AURORA_MAINNET = \"aurora-mainnet\",\r\n  AURORA_TESTNET = \"aurora-testnet\",\r\n  EMERALD_PARATIME_MAINNET = \"emerald-paratime-mainnet\",\r\n  DEFI_KINGDOMS_MAINNET = \"defi-kingdoms-mainnet\",\r\n  DEFI_KINGDOMS_TESTNET = \"defi-kingdoms-testnet\",\r\n  BOBA_MAINNET = \"boba-mainnet\",\r\n  BOBA_BNB_MAINNET = \"boba-bnb-mainnet\",\r\n  BOBA_BNB_TESTNET = \"boba-bnb-testnet\",\r\n  SCROLL_SEPOLIA_TESTNET = \"scroll-sepolia-testnet\",\r\n  METIS_MAINNET = \"metis-mainnet\",\r\n  AVALANCHE_DEXALOT_MAINNET = \"avalanche-dexalot-mainnet\",\r\n  AVALANCHE_DEXALOT_TESTNET = \"avalanche-dexalot-testnet\",\r\n  AVALANCHE_SHRAPNEL_MAINNET = \"avalanche-shrapnel-mainnet\",\r\n  AVALANCHE_NUMBERS = \"avalanche-numbers\",\r\n  AVALANCHE_XANACHAIN = \"avalanche-xanachain\",\r\n  AVALANCHE_STEP_NETWORK = \"avalanche-step-network\",\r\n  AVALANCHE_SHRAPNEL_TESTNET = \"avalanche-shrapnel-testnet\",\r\n  AVALANCHE_BEAM_TESTNET = \"avalanche-beam-testnet\",\r\n  AVALANCHE_BLITZ_TESTNET = \"avalanche-blitz-testnet\",\r\n  AVALANCHE_UPTN = \"avalanche-uptn\",\r\n  AVALANCHE_BEAM_MAINNET = \"avalanche-beam-mainnet\",\r\n  AVALANCHE_MIRAI_TESTNET = \"avalanche-mirai-testnet\",\r\n  BERACHAIN_MAINNET = \"berachain-mainnet\",\r\n  UNICHAIN_MAINNET = \"unichain-mainnet\",\r\n  CANTO_MAINNET = \"canto-mainnet\",\r\n  FLARENETWORKS_FLARE_MAINNET = \"flarenetworks-flare-mainnet\",\r\n  FLARENETWORKS_FLARE_TESTNET = \"flarenetworks-flare-testnet\",\r\n  POLYGON_ZKEVM_MAINNET = \"polygon-zkevm-mainnet\",\r\n  LINEA_MAINNET = \"linea-mainnet\",\r\n  LINEA_GOERLI_TESTNET = \"linea-goerli-testnet\",\r\n  LINEA_SEPOLIA_TESTNET = \"linea-sepolia-testnet\",\r\n  POLYGON_ZKEVM_TESTNET = \"polygon-zkevm-testnet\",\r\n  POLYGON_AMOY_TESTNET = \"polygon-amoy-testnet\",\r\n  MANTLE_MAINNET = \"mantle-mainnet\",\r\n  MANTLE_SEPOLIA_TESTNET = \"mantle-sepolia-testnet\",\r\n  POLYGON_ZKEVM_CARDONA_TESTNET = \"polygon-zkevm-cardona-testnet\",\r\n  BASE_MAINNET = \"base-mainnet\",\r\n  BASE_SEPOLIA_TESTNET = \"base-sepolia-testnet\",\r\n  SX_MAINNET = \"sx-mainnet\",\r\n  OASIS_SAPPHIRE_MAINNET = \"oasis-sapphire-mainnet\",\r\n  SYNDR_TESTNET = \"syndr-testnet\",\r\n  OASIS_SAPPHIRE_TESTNET = \"oasis-sapphire-testnet\",\r\n  CELO_MAINNET = \"celo-mainnet\",\r\n  X1_MAINNET = \"x1-mainnet\",\r\n  HORIZEN_EON_MAINNET = \"horizen-eon-mainnet\",\r\n  HORIZEN_GOBI_TESTNET = \"horizen-gobi-testnet\",\r\n  FRAXTAL_MAINNET = \"fraxtal-mainnet\",\r\n  APECHAIN_TESTNET = \"apechain-testnet\",\r\n  BERACHAIN_TESTNET = \"berachain-testnet\",\r\n  REDSTONE_MAINNET = \"redstone-mainnet\",\r\n  SEI_MAINNET = \"sei-mainnet\",\r\n  APECHAIN_MAINNET = \"apechain-mainnet\",\r\n  UNICHAIN_SEPOLIA_TESTNET = \"unichain-sepolia-testnet\",\r\n  WORLD_MAINNET = \"world-mainnet\",\r\n  WORLD_SEPOLIA_TESTNET = \"world-sepolia-testnet\",\r\n  LENS_SEPOLIA_TESTNET = \"lens-sepolia-testnet\",\r\n  INK_SEPOLIA_TESTNET = \"ink-sepolia-testnet\",\r\n  INK_MAINNET = \"ink-mainnet\",\r\n  AVALANCHE_MELD_TESTNET = \"avalanche-meld-testnet\",\r\n  AVALANCHE_MELD_MAINNET = \"avalanche-meld-mainnet\",\r\n  GUNZILLA_TESTNET = \"gunzilla-testnet\",\r\n  ZORA_MAINNET = \"zora-mainnet\",\r\n  ZORA_SEPOLIA_TESTNET = \"zora-sepolia-testnet\",\r\n  ZKSYNC_MAINNET = \"zksync-mainnet\",\r\n  ZKSYNC_SEPOLIA_TESTNET = \"zksync-sepolia-testnet\",\r\n  BNB_OPBNB_TESTNET = \"bnb-opbnb-testnet\",\r\n  BNB_OPBNB_MAINNET = \"bnb-opbnb-mainnet\",\r\n  ZETACHAIN_TESTNET = \"zetachain-testnet\",\r\n  ZETACHAIN_MAINNET = \"zetachain-mainnet\",\r\n  KINTO_TESTNET = \"kinto-testnet\",\r\n  MANTA_SEPOLIA_TESTNET = \"manta-sepolia-testnet\",\r\n  ROLLUX_MAINNET = \"rollux-mainnet\",\r\n  GNOSIS_MAINNET = \"gnosis-mainnet\",\r\n  GNOSIS_TESTNET = \"gnosis-testnet\",\r\n  VICTION_MAINNET = \"viction-mainnet\",\r\n  VICTION_TESTNET = \"viction-testnet\",\r\n  TAIKO_HEKLA_TESTNET = \"taiko-hekla-testnet\",\r\n  TAIKO_MAINNET = \"taiko-mainnet\",\r\n  MERLIN_MAINNET = \"merlin-mainnet\",\r\n  MERLIN_TESTNET = \"merlin-testnet\",\r\n  MOVEMENT_MEVM_TESTNET = \"movement-mevm-testnet\",\r\n  BLAST_MAINNET = \"blast-mainnet\",\r\n  SCROLL_MAINNET = \"scroll-mainnet\",\r\n}\r\n\r\nexport enum ChainID {\r\n  ETH_MAINNET = 1,\r\n  ETH_SEPOLIA = 11155111,\r\n  ETH_HOLESKY = 17000,\r\n  MATIC_MAINNET = 137,\r\n  AVALANCHE_MAINNET = 43114,\r\n  AVALANCHE_TESTNET = 43113,\r\n  BSC_MAINNET = 56,\r\n  BSC_TESTNET = 97,\r\n  MOONBEAM_MAINNET = 1284,\r\n  MOONBEAM_MOONBASE_ALPHA = 1287,\r\n  MOONBEAM_MOONRIVER = 1285,\r\n  RSK_MAINNET = 30,\r\n  RSK_TESTNET = 31,\r\n  ARBITRUM_MAINNET = 42161,\r\n  ARBITRUM_NOVA_MAINNET = 42170,\r\n  ARBITRUM_SEPOLIA = 421614,\r\n  FANTOM_MAINNET = 250,\r\n  FANTOM_TESTNET = 4002,\r\n  PALM_MAINNET = 11297108109,\r\n  PALM_TESTNET = 11297108099,\r\n  BTC_MAINNET = 20090103,\r\n  SOLANA_MAINNET = 1399811149,\r\n  AXIE_MAINNET = 2020,\r\n  OPTIMISM_MAINNET = 10,\r\n  OPTIMISM_SEPOLIA = 11155420,\r\n  CRONOS_MAINNET = 25,\r\n  CRONOS_TESTNET = 338,\r\n  CRONOS_ZKEVM_TESTNET = 282,\r\n  CRONOS_ZKEVM_MAINNET = 388,\r\n  AURORA_MAINNET = 1313161554,\r\n  AURORA_TESTNET = 1313161555,\r\n  EMERALD_PARATIME_MAINNET = 42262,\r\n  DEFI_KINGDOMS_MAINNET = 53935,\r\n  DEFI_KINGDOMS_TESTNET = 335,\r\n  BOBA_MAINNET = 288,\r\n  BOBA_BNB_MAINNET = 56288,\r\n  BOBA_BNB_TESTNET = 9728,\r\n  SCROLL_SEPOLIA_TESTNET = 534351,\r\n  METIS_MAINNET = 1088,\r\n  AVALANCHE_DEXALOT_MAINNET = 432204,\r\n  AVALANCHE_DEXALOT_TESTNET = 432201,\r\n  AVALANCHE_SHRAPNEL_MAINNET = 2044,\r\n  AVALANCHE_NUMBERS = 10507,\r\n  AVALANCHE_XANACHAIN = 8888,\r\n  AVALANCHE_STEP_NETWORK = 1234,\r\n  AVALANCHE_SHRAPNEL_TESTNET = 2038,\r\n  AVALANCHE_BEAM_TESTNET = 13337,\r\n  AVALANCHE_BLITZ_TESTNET = 1343,\r\n  AVALANCHE_UPTN = 6119,\r\n  AVALANCHE_BEAM_MAINNET = 4337,\r\n  AVALANCHE_MIRAI_TESTNET = 2195,\r\n  BERACHAIN_MAINNET = 80094,\r\n  UNICHAIN_MAINNET = 130,\r\n  CANTO_MAINNET = 7700,\r\n  FLARENETWORKS_FLARE_MAINNET = 14,\r\n  FLARENETWORKS_FLARE_TESTNET = 114,\r\n  POLYGON_ZKEVM_MAINNET = 1101,\r\n  LINEA_MAINNET = 59144,\r\n  LINEA_GOERLI_TESTNET = 59140,\r\n  LINEA_SEPOLIA_TESTNET = 59141,\r\n  POLYGON_ZKEVM_TESTNET = 1422,\r\n  POLYGON_AMOY_TESTNET = 80002,\r\n  MANTLE_MAINNET = 5000,\r\n  MANTLE_SEPOLIA_TESTNET = 5003,\r\n  POLYGON_ZKEVM_CARDONA_TESTNET = 2442,\r\n  BASE_MAINNET = 8453,\r\n  BASE_SEPOLIA_TESTNET = 84532,\r\n  SX_MAINNET = 416,\r\n  OASIS_SAPPHIRE_MAINNET = 23294,\r\n  SYNDR_TESTNET = 412346,\r\n  OASIS_SAPPHIRE_TESTNET = 23295,\r\n  CELO_MAINNET = 42220,\r\n  X1_MAINNET = 196,\r\n  HORIZEN_EON_MAINNET = 7332,\r\n  HORIZEN_GOBI_TESTNET = 1663,\r\n  FRAXTAL_MAINNET = 252,\r\n  APECHAIN_TESTNET = 1798,\r\n  BERACHAIN_TESTNET = 80084,\r\n  REDSTONE_MAINNET = 690,\r\n  SEI_MAINNET = 1329,\r\n  APECHAIN_MAINNET = 33139,\r\n  UNICHAIN_SEPOLIA_TESTNET = 1301,\r\n  WORLD_MAINNET = 480,\r\n  WORLD_SEPOLIA_TESTNET = 4801,\r\n  LENS_SEPOLIA_TESTNET = 37111,\r\n  INK_SEPOLIA_TESTNET = 763373,\r\n  INK_MAINNET = 57073,\r\n  AVALANCHE_MELD_TESTNET = 222000222,\r\n  AVALANCHE_MELD_MAINNET = 333000333,\r\n  GUNZILLA_TESTNET = 49321,\r\n  ZORA_MAINNET = 7777777,\r\n  ZORA_SEPOLIA_TESTNET = 999999999,\r\n  ZKSYNC_MAINNET = 324,\r\n  ZKSYNC_SEPOLIA_TESTNET = 300,\r\n  BNB_OPBNB_TESTNET = 5611,\r\n  BNB_OPBNB_MAINNET = 204,\r\n  ZETACHAIN_TESTNET = 7001,\r\n  ZETACHAIN_MAINNET = 7000,\r\n  KINTO_TESTNET = 42888,\r\n  MANTA_SEPOLIA_TESTNET = 3441006,\r\n  ROLLUX_MAINNET = 570,\r\n  GNOSIS_MAINNET = 100,\r\n  GNOSIS_TESTNET = 10200,\r\n  VICTION_MAINNET = 88,\r\n  VICTION_TESTNET = 89,\r\n  TAIKO_HEKLA_TESTNET = 167009,\r\n  TAIKO_MAINNET = 167000,\r\n  MERLIN_MAINNET = 4200,\r\n  MERLIN_TESTNET = 686868,\r\n  MOVEMENT_MEVM_TESTNET = 336,\r\n  BLAST_MAINNET = 81457,\r\n  SCROLL_MAINNET = 534352,\r\n}\r\n\r\nexport type Chain = ChainID | ChainName | `${ChainName}` | `${ChainID}`;\r\n\r\nexport type Source = \"Ponder\" | \"GoldRush\" | \"Viem\";\r\n\r\nexport type Quote =\r\n  | \"USD\"\r\n  | \"CAD\"\r\n  | \"EUR\"\r\n  | \"SGD\"\r\n  | \"INR\"\r\n  | \"JPY\"\r\n  | \"VND\"\r\n  | \"CNY\"\r\n  | \"KRW\"\r\n  | \"RUB\"\r\n  | \"TRY\"\r\n  | \"NGN\"\r\n  | \"ARS\"\r\n  | \"AUD\"\r\n  | \"CHF\"\r\n  | \"GBP\";\r\n\r\nexport type CryptocurrencyQuote = \"ETH\" | \"BTC\";\r\n\r\nexport type ChainLabel = \"Foundational\" | \"Frontier\" | \"Community\";\r\n\r\nexport interface Pagination {\r\n  /** * True is there is another page. */\r\n  has_more: boolean;\r\n  /** * The requested page number. */\r\n  page_number: number;\r\n  /** * The requested number of items on the current page. */\r\n  page_size: number;\r\n  /** * The total number of items across all pages for this request. */\r\n  total_count: number;\r\n}\r\n\r\nexport interface PaginationLinks {\r\n  /** * URL link to the next page. */\r\n  prev: string;\r\n  /** * URL link to the previous page. */\r\n  next: string;\r\n}\r\n\r\nexport interface NftCollectionAttribute {\r\n  trait_type: string;\r\n  value: string;\r\n}\r\n\r\nexport type NftData = Nullable<{\r\n  /** * The token's id. */\r\n  token_id: bigint;\r\n  token_url: string;\r\n  /** * The original minter. */\r\n  original_owner: string;\r\n  /** * The current holder of this NFT. */\r\n  current_owner: string;\r\n  external_data: NftExternalData;\r\n  /** * If `true`, the asset data is available from the Covalent CDN. */\r\n  asset_cached: boolean;\r\n  /** * If `true`, the image data is available from the Covalent CDN. */\r\n  image_cached: boolean;\r\n}>;\r\n\r\nexport interface NftExternalData {\r\n  name: string;\r\n  description: string;\r\n  asset_url: string;\r\n  asset_file_extension: string;\r\n  asset_mime_type: string;\r\n  asset_size_bytes: string;\r\n  image: string;\r\n  image_256: string;\r\n  image_512: string;\r\n  image_1024: string;\r\n  animation_url: string;\r\n  external_url: string;\r\n  attributes: NftCollectionAttribute[];\r\n  thumbnails: NFTThumbnails;\r\n}\r\n\r\nexport interface NFTThumbnails {\r\n  image256: string;\r\n  image512: string;\r\n  image1024: string;\r\n  image_opengraph_url: string;\r\n  thumbhash: string;\r\n}\r\n\r\nexport interface DecodedItem {\r\n  name: string;\r\n  signature: string;\r\n  params: Param[];\r\n}\r\n\r\nexport interface Param {\r\n  name: string;\r\n  type: string;\r\n  indexed: boolean;\r\n  decoded: boolean;\r\n  value: string;\r\n}\r\n\r\nexport type LogEvent = Nullable<{\r\n  /** * The block signed timestamp in UTC. */\r\n  block_signed_at: Date;\r\n  /** * The height of the block. */\r\n  block_height: number;\r\n  /** * The offset is the position of the tx in the block. */\r\n  tx_offset: number;\r\n  /** * The offset is the position of the log entry within an event log. */\r\n  log_offset: number;\r\n  /** * The requested transaction hash. */\r\n  tx_hash: string;\r\n  /** * The log topics in raw data. */\r\n  raw_log_topics: string[];\r\n  /** * Use contract decimals to format the token balance for display purposes - divide the balance by `10^{contract_decimals}`. */\r\n  sender_contract_decimals: number;\r\n  /** * The name of the sender. */\r\n  sender_name: string;\r\n  sender_contract_ticker_symbol: string;\r\n  /** * The address of the sender. */\r\n  sender_address: string;\r\n  /** * The label of the sender address. */\r\n  sender_address_label: string;\r\n  /** * The contract logo URL. */\r\n  sender_logo_url: string;\r\n  /** * A list of supported standard ERC interfaces, eg: `ERC20` and `ERC721`. */\r\n  supports_erc: string[];\r\n  /** * The address of the deployed UniswapV2 like factory contract for this DEX. */\r\n  sender_factory_address: string;\r\n  /** * The log events in raw. */\r\n  raw_log_data: string;\r\n  /** * The decoded item. */\r\n  decoded: DecodedItem;\r\n}>;\r\n\r\nexport interface ContractMetadata {\r\n  /** * Use contract decimals to format the token balance for display purposes - divide the balance by `10^{contract_decimals}`. */\r\n  contract_decimals: number;\r\n  /** * The string returned by the `name()` method. */\r\n  contract_name: string;\r\n  /** * The ticker symbol for this contract. This field is set by a developer and non-unique across a network. */\r\n  contract_ticker_symbol: string;\r\n  /** * Use the relevant `contract_address` to lookup prices, logos, token transfers, etc. */\r\n  contract_address: string;\r\n  /** * A list of supported standard ERC interfaces, eg: `ERC20` and `ERC721`. */\r\n  supports_erc: string[];\r\n  /** * The contract logo URL. */\r\n  logo_url: string;\r\n}\r\n\r\nexport interface Explorer {\r\n  /** * The name of the explorer. */\r\n  label: string;\r\n  /** * The URL of the explorer. */\r\n  url: string;\r\n}\r\n\r\nexport interface LogoUrls {\r\n  /** * The token logo URL. */\r\n  token_logo_url: string;\r\n  /** * The protocol logo URL. */\r\n  protocol_logo_url: string;\r\n  /** * The chain logo URL. */\r\n  chain_logo_url: string;\r\n}\r\n\r\nexport type GoldRushResponse<T> =\r\n  | {\r\n      data: T;\r\n      error: false | null;\r\n      error_code: null;\r\n      error_message: null;\r\n    }\r\n  | {\r\n      data: null;\r\n      error: true;\r\n      error_code: number;\r\n      error_message: string;\r\n    };\r\n\r\nexport interface GoldRushClientSettings {\r\n  /** * Toggle to analyze the execution of each api request. */\r\n  debug?: boolean;\r\n  /** * The number of concurrent requests allowed. */\r\n  threadCount?: number;\r\n  /** Toggle to turn on and off retry logic */\r\n  enableRetry?: boolean;\r\n  /** Set the retry logic count */\r\n  maxRetries?: number;\r\n  /** Set the retry delay in ms */\r\n  retryDelay?: number;\r\n  /** Set the source of the usage */\r\n  source?: Source | string;\r\n}\r\n\r\nexport type Nullable<T> = {\r\n  [P in keyof T]: T[P] | null;\r\n};\r\n", "import { bigIntParser } from \"../utils/functions/bigIntParser\";\r\nimport { endpointGenerator } from \"../utils/functions/endpointGenerator\";\r\nimport { type Execution } from \"../utils/functions/execution\";\r\nimport { type BalancesResponse } from \"../utils/types/BalanceService.types\";\r\nimport {\r\n  type BitcoinHdWalletBalancesResponse,\r\n  type BitcoinTransactionResponse,\r\n  type GetBitcoinHdWalletBalancesQueryParamOpts,\r\n  type GetBitcoinNonHdWalletBalancesQueryParamOpts,\r\n  type GetTransactionsForBitcoinAddressParamOpts,\r\n} from \"../utils/types/BitcoinService.types\";\r\nimport { ChainName, type GoldRushResponse } from \"../utils/types/Generic.types\";\r\n\r\n/**\r\n * Bitcoin APIs\r\n *\r\n */\r\nexport class BitcoinService {\r\n  constructor(private execution: Execution) {}\r\n\r\n  /**\r\n   *\r\n   * @param {string} walletAddress - The requested Bitcoin HD address.\r\n   * @param {GetBitcoinHdWalletBalancesQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *\r\n   */\r\n  public async getBitcoinHdWalletBalances(\r\n    walletAddress: string,\r\n    queryParamOpts?: GetBitcoinHdWalletBalancesQueryParamOpts\r\n  ): Promise<GoldRushResponse<BitcoinHdWalletBalancesResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${ChainName.BTC_MAINNET}/address/${walletAddress}/hd_wallets`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<BitcoinHdWalletBalancesResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((balanceItem) => ({\r\n              ...balanceItem,\r\n              balance: bigIntParser(balanceItem.balance),\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<BitcoinHdWalletBalancesResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Used to fetch the full transaction history of a Bitcoin wallet.\r\n   *\r\n   * @param {GetTransactionsForBitcoinAddressParamOpts} queryParamOpts\r\n   *   - `address`: The bitcoin address to query.\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   */\r\n  public async getTransactionsForBtcAddress(\r\n    queryParamOpts?: GetTransactionsForBitcoinAddressParamOpts\r\n  ): Promise<GoldRushResponse<BitcoinTransactionResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `cq/covalent/app/bitcoin/transactions/`,\r\n      [\r\n        {\r\n          key: \"address\",\r\n          value: queryParamOpts?.address,\r\n        },\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<BitcoinTransactionResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((txItem) => ({\r\n              ...txItem,\r\n              value: bigIntParser(txItem.value),\r\n              fees_paid: bigIntParser(txItem.fees_paid),\r\n              block_signed_at: txItem.block_signed_at\r\n                ? new Date(txItem.block_signed_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<BitcoinTransactionResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch the tokens held by an address. Response includes spot prices and other metadata.\r\n   *\r\n   * @param {string} walletAddress - The requested Bitcoin Non HD address.\r\n   * @param {GetBitcoinNonHdWalletBalancesQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *\r\n   */\r\n  public async getBitcoinNonHdWalletBalances(\r\n    walletAddress: string,\r\n    queryParamOpts?: GetBitcoinNonHdWalletBalancesQueryParamOpts\r\n  ): Promise<GoldRushResponse<BalancesResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${ChainName.BTC_MAINNET}/address/${walletAddress}/balances_v2`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<BalancesResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((balanceItem) => ({\r\n              ...balanceItem,\r\n              balance: bigIntParser(balanceItem.balance),\r\n              balance_24h: bigIntParser(balanceItem.balance_24h),\r\n              last_transferred_at: balanceItem.last_transferred_at\r\n                ? new Date(balanceItem.last_transferred_at)\r\n                : null,\r\n              nft_data: balanceItem.nft_data\r\n                ? balanceItem.nft_data.map((nftItem) => ({\r\n                    ...nftItem,\r\n                    token_id: bigIntParser(nftItem.token_id),\r\n                    token_balance: bigIntParser(nftItem.token_balance),\r\n                    token_price_wei: bigIntParser(nftItem.token_price_wei),\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<BalancesResponse>(endpoint, parseData);\r\n  }\r\n}\r\n", "import { bigIntParser } from \"../utils/functions/bigIntParser\";\r\nimport { endpointGenerator } from \"../utils/functions/endpointGenerator\";\r\nimport { type Execution } from \"../utils/functions/execution\";\r\nimport { paginateEndpoint } from \"../utils/functions/paginateEndpoint\";\r\nimport {\r\n  type Chain,\r\n  type GoldRushResponse,\r\n} from \"../utils/types/Generic.types\";\r\nimport {\r\n  type ChainCollectionResponse,\r\n  type CheckOwnershipInNftQueryParamOpts,\r\n  type GetChainCollectionsQueryParamOpts,\r\n  type GetCollectionMarketDataQueryParamOpts,\r\n  type GetNftMetadataForGivenTokenIdForContractQueryParamOpts,\r\n  type GetNftTransactionsForContractTokenIdQueryParamOpts,\r\n  type GetNftsForAddressQueryParamOpts,\r\n  type GetTokenIdsForContractWithMetadataQueryParamOpts,\r\n  type NftAddressBalanceNftResponse,\r\n  type NftCollectionAttributesForTraitResponse,\r\n  type NftCollectionFloorPriceResponse,\r\n  type NftCollectionSalesCountResponse,\r\n  type NftCollectionTraitsResponse,\r\n  type NftCollectionTraitsSummaryResponse,\r\n  type NftCollectionVolumeResponse,\r\n  type NftMetadataResponse,\r\n  type NftOwnershipForCollectionResponse,\r\n  type NftTransactionsResponse,\r\n} from \"../utils/types/NftService.types\";\r\n\r\n/**\r\n * NFTs API\r\n *\r\n */\r\nexport class NftService {\r\n  constructor(private execution: Execution) {}\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch the list of NFT collections with downloaded and cached off chain data like token metadata and asset files.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {GetChainCollectionsQueryParamOpts} queryParamOpts\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *   - `noSpam`: If `true`, the suspected spam tokens are removed. Supports `eth-mainnet` and `matic-mainnet`.\r\n   *\r\n   */\r\n  public async *getChainCollections(\r\n    chainName: Chain,\r\n    queryParamOpts?: GetChainCollectionsQueryParamOpts\r\n  ): AsyncIterable<GoldRushResponse<ChainCollectionResponse>> {\r\n    const endpoint = endpointGenerator(`${chainName}/nft/collections`, [\r\n      {\r\n        key: \"page-size\",\r\n        value: queryParamOpts?.pageSize,\r\n      },\r\n      {\r\n        key: \"page-number\",\r\n        value: queryParamOpts?.pageNumber,\r\n      },\r\n      {\r\n        key: \"no-spam\",\r\n        value: queryParamOpts?.noSpam,\r\n      },\r\n    ]);\r\n\r\n    const parseData = (data: GoldRushResponse<ChainCollectionResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((collectionItem) => ({\r\n              ...collectionItem,\r\n              last_scraped_at: collectionItem.last_scraped_at\r\n                ? new Date(collectionItem.last_scraped_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    for await (const data of paginateEndpoint<ChainCollectionResponse>(\r\n      endpoint,\r\n      this.execution,\r\n      parseData,\r\n      \"pagination\"\r\n    )) {\r\n      yield data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch the list of NFT collections with downloaded and cached off chain data like token metadata and asset files.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {GetChainCollectionsQueryParamOpts} queryParamOpts\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *   - `noSpam`: If `true`, the suspected spam tokens are removed. Supports `eth-mainnet` and `matic-mainnet`.\r\n   *\r\n   */\r\n  public async getChainCollectionsByPage(\r\n    chainName: Chain,\r\n    queryParamOpts?: GetChainCollectionsQueryParamOpts\r\n  ): Promise<GoldRushResponse<ChainCollectionResponse>> {\r\n    const endpoint = endpointGenerator(`${chainName}/nft/collections`, [\r\n      {\r\n        key: \"page-size\",\r\n        value: queryParamOpts?.pageSize,\r\n      },\r\n      {\r\n        key: \"page-number\",\r\n        value: queryParamOpts?.pageNumber,\r\n      },\r\n      {\r\n        key: \"no-spam\",\r\n        value: queryParamOpts?.noSpam,\r\n      },\r\n    ]);\r\n\r\n    const parseData = (data: GoldRushResponse<ChainCollectionResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((collectionItem) => ({\r\n              ...collectionItem,\r\n              last_scraped_at: collectionItem.last_scraped_at\r\n                ? new Date(collectionItem.last_scraped_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<ChainCollectionResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to render the NFTs (including ERC721 and ERC1155) held by an address.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetNftsForAddressQueryParamOpts} queryParamOpts\r\n   *   - `noSpam`: If `true`, the suspected spam tokens are removed. Supports `eth-mainnet` and `matic-mainnet`.\r\n   *   - `noNftAssetMetadata`: If `true`, the response shape is limited to a list of collections and token ids, omitting metadata and asset information. Helpful for faster response times and wallets holding a large number of NFTs.\r\n   *   - `withUncached`: By default, this endpoint only works on chains where we've cached the assets and the metadata. When set to `true`, the API will fetch metadata from upstream servers even if it's not cached - the downside being that the upstream server can block or rate limit the call and therefore resulting in time outs or slow response times on the Covalent side.\r\n   *\r\n   */\r\n  public async getNftsForAddress(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    queryParamOpts?: GetNftsForAddressQueryParamOpts\r\n  ): Promise<GoldRushResponse<NftAddressBalanceNftResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/balances_nft`,\r\n      [\r\n        {\r\n          key: \"no-spam\",\r\n          value: queryParamOpts?.noSpam,\r\n        },\r\n        {\r\n          key: \"no-nft-asset-metadata\",\r\n          value: queryParamOpts?.noNftAssetMetadata,\r\n        },\r\n        {\r\n          key: \"with-uncached\",\r\n          value: queryParamOpts?.withUncached,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<NftAddressBalanceNftResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((balanceItem) => ({\r\n              ...balanceItem,\r\n              balance: bigIntParser(balanceItem.balance),\r\n              balance_24h: bigIntParser(balanceItem.balance_24h),\r\n              nft_data: balanceItem.nft_data\r\n                ? balanceItem.nft_data.map((nftItem) => ({\r\n                    ...nftItem,\r\n                    token_id: bigIntParser(nftItem.token_id),\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftAddressBalanceNftResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get NFT token IDs with metadata from a collection. Useful for building NFT card displays.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} contractAddress - The requested contract address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetTokenIdsForContractWithMetadataQueryParamOpts} queryParamOpts\r\n   *   - `noMetadata`: Omit metadata.\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *   - `traitsFilter`: Filters NFTs based on a specific trait. If this filter is used, the API will return all NFTs with the specified trait. Accepts comma-separated values, is case-sensitive, and requires proper URL encoding.\r\n   *   - `valuesFilter`: Filters NFTs based on a specific trait value. If this filter is used, the API will return all NFTs with the specified trait value. If used with \"traits-filter\", only NFTs matching both filters will be returned. Accepts comma-separated values, is case-sensitive, and requires proper URL encoding.\r\n   *   - `withUncached`: By default, this endpoint only works on chains where we've cached the assets and the metadata. When set to `true`, the API will fetch metadata from upstream servers even if it's not cached - the downside being that the upstream server can block or rate limit the call and therefore resulting in time outs or slow response times on the Covalent side.\r\n   *\r\n   */\r\n  public async *getTokenIdsForContractWithMetadata(\r\n    chainName: Chain,\r\n    contractAddress: string,\r\n    queryParamOpts?: GetTokenIdsForContractWithMetadataQueryParamOpts\r\n  ): AsyncIterable<GoldRushResponse<NftMetadataResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/nft/${contractAddress}/metadata`,\r\n      [\r\n        {\r\n          key: \"no-metadata\",\r\n          value: queryParamOpts?.noMetadata,\r\n        },\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n        {\r\n          key: \"traits-filter\",\r\n          value: queryParamOpts?.traitsFilter,\r\n        },\r\n        {\r\n          key: \"values-filter\",\r\n          value: queryParamOpts?.valuesFilter,\r\n        },\r\n        {\r\n          key: \"with-uncached\",\r\n          value: queryParamOpts?.withUncached,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<NftMetadataResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((tokenItem) => ({\r\n              ...tokenItem,\r\n              nft_data: {\r\n                ...tokenItem.nft_data!,\r\n                token_id: bigIntParser(tokenItem.nft_data?.token_id),\r\n              },\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    for await (const data of paginateEndpoint<NftMetadataResponse>(\r\n      endpoint,\r\n      this.execution,\r\n      parseData,\r\n      \"pagination\"\r\n    )) {\r\n      yield data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get NFT token IDs with metadata from a collection. Useful for building NFT card displays.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} contractAddress - The requested contract address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetTokenIdsForContractWithMetadataQueryParamOpts} queryParamOpts\r\n   *   - `noMetadata`: Omit metadata.\r\n   *   - `pageSize`: Number of items per page. Omitting this parameter defaults to 100.\r\n   *   - `pageNumber`: 0-indexed page number to begin pagination.\r\n   *   - `traitsFilter`: Filters NFTs based on a specific trait. If this filter is used, the API will return all NFTs with the specified trait. Accepts comma-separated values, is case-sensitive, and requires proper URL encoding.\r\n   *   - `valuesFilter`: Filters NFTs based on a specific trait value. If this filter is used, the API will return all NFTs with the specified trait value. If used with \"traits-filter\", only NFTs matching both filters will be returned. Accepts comma-separated values, is case-sensitive, and requires proper URL encoding.\r\n   *   - `withUncached`: By default, this endpoint only works on chains where we've cached the assets and the metadata. When set to `true`, the API will fetch metadata from upstream servers even if it's not cached - the downside being that the upstream server can block or rate limit the call and therefore resulting in time outs or slow response times on the Covalent side.\r\n   *\r\n   */\r\n  public async getTokenIdsForContractWithMetadataByPage(\r\n    chainName: Chain,\r\n    contractAddress: string,\r\n    queryParamOpts?: GetTokenIdsForContractWithMetadataQueryParamOpts\r\n  ): Promise<GoldRushResponse<NftMetadataResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/nft/${contractAddress}/metadata`,\r\n      [\r\n        {\r\n          key: \"no-metadata\",\r\n          value: queryParamOpts?.noMetadata,\r\n        },\r\n        {\r\n          key: \"page-size\",\r\n          value: queryParamOpts?.pageSize,\r\n        },\r\n        {\r\n          key: \"page-number\",\r\n          value: queryParamOpts?.pageNumber,\r\n        },\r\n        {\r\n          key: \"traits-filter\",\r\n          value: queryParamOpts?.traitsFilter,\r\n        },\r\n        {\r\n          key: \"values-filter\",\r\n          value: queryParamOpts?.valuesFilter,\r\n        },\r\n        {\r\n          key: \"with-uncached\",\r\n          value: queryParamOpts?.withUncached,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<NftMetadataResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((tokenItem) => ({\r\n              ...tokenItem,\r\n              nft_data: {\r\n                ...tokenItem.nft_data!,\r\n                token_id: bigIntParser(tokenItem.nft_data?.token_id),\r\n              },\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftMetadataResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get a single NFT metadata by token ID from a collection. Useful for building NFT card displays.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} contractAddress - The requested contract address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {string} tokenId - The requested token ID.\r\n   * @param {GetNftMetadataForGivenTokenIdForContractQueryParamOpts} queryParamOpts\r\n   *   - `noMetadata`: Omit metadata.\r\n   *   - `withUncached`: By default, this endpoint only works on chains where we've cached the assets and the metadata. When set to `true`, the API will fetch metadata from upstream servers even if it's not cached - the downside being that the upstream server can block or rate limit the call and therefore resulting in time outs or slow response times on the Covalent side.\r\n   *\r\n   */\r\n  public async getNftMetadataForGivenTokenIdForContract(\r\n    chainName: Chain,\r\n    contractAddress: string,\r\n    tokenId: string,\r\n    queryParamOpts?: GetNftMetadataForGivenTokenIdForContractQueryParamOpts\r\n  ): Promise<GoldRushResponse<NftMetadataResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/nft/${contractAddress}/metadata/${tokenId}`,\r\n      [\r\n        {\r\n          key: \"no-metadata\",\r\n          value: queryParamOpts?.noMetadata,\r\n        },\r\n        {\r\n          key: \"with-uncached\",\r\n          value: queryParamOpts?.withUncached,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<NftMetadataResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((tokenItem) => ({\r\n              ...tokenItem,\r\n              nft_data: {\r\n                ...tokenItem.nft_data!,\r\n                token_id: bigIntParser(tokenItem.nft_data?.token_id),\r\n              },\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftMetadataResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get all transactions of an NFT token. Useful for building a transaction history table or price chart.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} contractAddress - The requested contract address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {string} tokenId - The requested token ID.\r\n   * @param {GetNftTransactionsForContractTokenIdQueryParamOpts} queryParamOpts\r\n   *   - `noSpam`: If `true`, the suspected spam tokens are removed. Supports `eth-mainnet` and `matic-mainnet`.\r\n   *\r\n   */\r\n  public async getNftTransactionsForContractTokenId(\r\n    chainName: Chain,\r\n    contractAddress: string,\r\n    tokenId: string,\r\n    queryParamOpts?: GetNftTransactionsForContractTokenIdQueryParamOpts\r\n  ): Promise<GoldRushResponse<NftTransactionsResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/tokens/${contractAddress}/nft_transactions/${tokenId}`,\r\n      [\r\n        {\r\n          key: \"no-spam\",\r\n          value: queryParamOpts?.noSpam,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<NftTransactionsResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((nftItem) => ({\r\n              ...nftItem,\r\n              nft_transactions: nftItem.nft_transactions\r\n                ? nftItem.nft_transactions.map((txItem) => ({\r\n                    ...txItem,\r\n                    block_signed_at: txItem.block_signed_at\r\n                      ? new Date(txItem.block_signed_at)\r\n                      : null,\r\n                    value: bigIntParser(txItem.value),\r\n                    fees_paid: bigIntParser(txItem.fees_paid),\r\n                    log_events: txItem.log_events\r\n                      ? txItem.log_events.map((logItem) => ({\r\n                          ...logItem,\r\n                          block_signed_at: logItem.block_signed_at\r\n                            ? new Date(logItem.block_signed_at)\r\n                            : null,\r\n                        }))\r\n                      : null,\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftTransactionsResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch and render the traits of a collection as seen in rarity calculators.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} collectionContract - The requested collection address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   *\r\n   */\r\n  public async getTraitsForCollection(\r\n    chainName: Chain,\r\n    collectionContract: string\r\n  ): Promise<GoldRushResponse<NftCollectionTraitsResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/nft/${collectionContract}/traits`,\r\n      []\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<NftCollectionTraitsResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftCollectionTraitsResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to get the count of unique values for traits within an NFT collection.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} collectionContract - The requested collection address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {string} trait - The requested trait.\r\n   *\r\n   */\r\n  public async getAttributesForTraitInCollection(\r\n    chainName: Chain,\r\n    collectionContract: string,\r\n    trait: string\r\n  ): Promise<GoldRushResponse<NftCollectionAttributesForTraitResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/nft/${collectionContract}/traits/${trait}/attributes`,\r\n      []\r\n    );\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<NftCollectionAttributesForTraitResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftCollectionAttributesForTraitResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to calculate rarity scores for a collection based on its traits.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} collectionContract - The requested collection address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   *\r\n   */\r\n  public async getCollectionTraitsSummary(\r\n    chainName: Chain,\r\n    collectionContract: string\r\n  ): Promise<GoldRushResponse<NftCollectionTraitsSummaryResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/nft/${collectionContract}/traits_summary`,\r\n      []\r\n    );\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<NftCollectionTraitsSummaryResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftCollectionTraitsSummaryResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to render a price floor chart for an NFT collection.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} collectionAddress - The requested address.\r\n   * @param {GetNftsForAddressQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `days`: The number of days to return data for. Request up 365 days. Defaults to 30 days.\r\n   *\r\n   */\r\n  public async getHistoricalFloorPricesForCollection(\r\n    chainName: Chain,\r\n    collectionAddress: string,\r\n    queryParamOpts?: GetCollectionMarketDataQueryParamOpts\r\n  ): Promise<GoldRushResponse<NftCollectionFloorPriceResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/nft_market/${collectionAddress}/floor_price`,\r\n      [\r\n        {\r\n          key: \"days\",\r\n          value: queryParamOpts?.days,\r\n        },\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quote_currency,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<NftCollectionFloorPriceResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((floorPriceItem) => ({\r\n              ...floorPriceItem,\r\n              date: floorPriceItem.date ? new Date(floorPriceItem.date) : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftCollectionFloorPriceResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to build a time-series chart of the transaction volume of an NFT collection.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} collectionAddress - The requested address.\r\n   * @param {GetNftsForAddressQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `days`: The number of days to return data for. Request up 365 days. Defaults to 30 days.\r\n   *\r\n   */\r\n  public async getHistoricalVolumeForCollection(\r\n    chainName: Chain,\r\n    collectionAddress: string,\r\n    queryParamOpts?: GetCollectionMarketDataQueryParamOpts\r\n  ): Promise<GoldRushResponse<NftCollectionVolumeResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/nft_market/${collectionAddress}/volume`,\r\n      [\r\n        {\r\n          key: \"days\",\r\n          value: queryParamOpts?.days,\r\n        },\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quote_currency,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<NftCollectionVolumeResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((floorPriceItem) => ({\r\n              ...floorPriceItem,\r\n              date: floorPriceItem.date ? new Date(floorPriceItem.date) : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftCollectionVolumeResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to build a time-series chart of the sales count of an NFT collection.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} collectionAddress - The requested address.\r\n   * @param {GetNftsForAddressQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `days`: The number of days to return data for. Request up 365 days. Defaults to 30 days.\r\n   *\r\n   */\r\n  public async getHistoricalSalesCountForCollection(\r\n    chainName: Chain,\r\n    collectionAddress: string,\r\n    queryParamOpts?: GetCollectionMarketDataQueryParamOpts\r\n  ): Promise<GoldRushResponse<NftCollectionSalesCountResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/nft_market/${collectionAddress}/sale_count`,\r\n      [\r\n        {\r\n          key: \"days\",\r\n          value: queryParamOpts?.days,\r\n        },\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quote_currency,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<NftCollectionSalesCountResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((floorPriceItem) => ({\r\n              ...floorPriceItem,\r\n              date: floorPriceItem.date ? new Date(floorPriceItem.date) : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftCollectionSalesCountResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to verify ownership of NFTs (including ERC-721 and ERC-1155) within a collection.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {string} collectionContract - The requested collection address.\r\n   * @param {CheckOwnershipInNftQueryParamOpts} queryParamOpts\r\n   *   - `traitsFilter`: Filters NFTs based on a specific trait. If this filter is used, the API will return all NFTs with the specified trait. Must be used with \"values-filter\", is case-sensitive, and requires proper URL encoding.\r\n   *   - `valuesFilter`: Filters NFTs based on a specific trait value. If this filter is used, the API will return all NFTs with the specified trait value. Must be used with \"traits-filter\", is case-sensitive, and requires proper URL encoding.\r\n   *\r\n   */\r\n  public async checkOwnershipInNft(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    collectionContract: string,\r\n    queryParamOpts?: CheckOwnershipInNftQueryParamOpts\r\n  ): Promise<GoldRushResponse<NftOwnershipForCollectionResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/collection/${collectionContract}`,\r\n      [\r\n        {\r\n          key: \"traits-filter\",\r\n          value: queryParamOpts?.traitsFilter,\r\n        },\r\n        {\r\n          key: \"values-filter\",\r\n          value: queryParamOpts?.valuesFilter,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<NftOwnershipForCollectionResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((nftItem) => ({\r\n              ...nftItem,\r\n              balance: bigIntParser(nftItem.balance),\r\n              balance_24h: bigIntParser(nftItem.balance_24h),\r\n              token_id: bigIntParser(nftItem.token_id),\r\n              nft_data: {\r\n                ...nftItem.nft_data!,\r\n                token_id: bigIntParser(nftItem.nft_data?.token_id),\r\n              },\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftOwnershipForCollectionResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to verify ownership of a specific token (ERC-721 or ERC-1155) within a collection.\r\n   *\r\n   * @param {string} chainName - The chain name eg: `eth-mainnet`.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {string} collectionContract - The requested collection address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {string} tokenId - The requested token ID.\r\n   *\r\n   */\r\n  public async checkOwnershipInNftForSpecificTokenId(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    collectionContract: string,\r\n    tokenId: string\r\n  ): Promise<GoldRushResponse<NftOwnershipForCollectionResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/collection/${collectionContract}/token/${tokenId}`,\r\n      []\r\n    );\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<NftOwnershipForCollectionResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((balanceItem) => ({\r\n              ...balanceItem,\r\n              balance: bigIntParser(balanceItem.balance),\r\n              balance_24h: bigIntParser(balanceItem.balance_24h),\r\n              token_id: bigIntParser(balanceItem.token_id),\r\n              last_transfered_at: balanceItem.last_transfered_at\r\n                ? new Date(balanceItem.last_transfered_at)\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<NftOwnershipForCollectionResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n}\r\n", "import { endpointGenerator } from \"../utils/functions/endpointGenerator\";\nimport { type Execution } from \"../utils/functions/execution\";\nimport {\n  type Chain,\n  type GoldRushResponse,\n  type Quote,\n} from \"../utils/types/Generic.types\";\nimport {\n  type GetTokenPricesQueryParamOpts,\n  type TokenPricesResponse,\n} from \"../utils/types/PricingService.types\";\n\n/**\n * Pricing API\n *\n */\nexport class PricingService {\n  constructor(private execution: Execution) {}\n\n  /**\n   *\n   * Commonly used to get historic prices of a token between date ranges. Supports native tokens.\n   *\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\n   * @param {string} quoteCurrency - The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\n   * @param {string} contractAddress - Contract address for the token. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically. Supports multiple contract addresses separated by commas.\n   * @param {GetTokenPricesQueryParamOpts} queryParamOpts\n   *   - `from`: The start day of the historical price range (YYYY-MM-DD).\n   *   - `to`: The end day of the historical price range (YYYY-MM-DD).\n   *   - `pricesAtAsc`: Sort the prices in chronological ascending order. By default, it's set to `false` and returns prices in chronological descending order.\n   *\n   */\n  public async getTokenPrices(\n    chainName: Chain,\n    quoteCurrency: Quote,\n    contractAddress: string,\n    queryParamOpts?: GetTokenPricesQueryParamOpts\n  ): Promise<GoldRushResponse<TokenPricesResponse[]>> {\n    const endpoint = endpointGenerator(\n      `pricing/historical_by_addresses_v2/${chainName}/${quoteCurrency}/${contractAddress}`,\n      [\n        {\n          key: \"from\",\n          value: queryParamOpts?.from,\n        },\n        {\n          key: \"to\",\n          value: queryParamOpts?.to,\n        },\n        {\n          key: \"prices-at-asc\",\n          value: queryParamOpts?.pricesAtAsc,\n        },\n      ]\n    );\n\n    const parseData = (data: GoldRushResponse<TokenPricesResponse[]>) => {\n      if (data.data) {\n        data.data.forEach((dataItem) => {\n          dataItem.update_at = dataItem.update_at\n            ? new Date(dataItem.update_at)\n            : null;\n          dataItem.items = dataItem.items\n            ? dataItem.items.map((priceItem) => ({\n                ...priceItem,\n                date: priceItem.date ? new Date(priceItem.date) : null,\n              }))\n            : null;\n        });\n      }\n\n      return data;\n    };\n\n    return await this.execution.execute<TokenPricesResponse[]>(\n      endpoint,\n      parseData\n    );\n  }\n}\n", "import { bigIntParser } from \"../utils/functions/bigIntParser\";\nimport { endpointGenerator } from \"../utils/functions/endpointGenerator\";\nimport { type Execution } from \"../utils/functions/execution\";\nimport {\n  type Chain,\n  type GoldRushResponse,\n} from \"../utils/types/Generic.types\";\nimport {\n  type ApprovalsResponse,\n  type NftApprovalsResponse,\n} from \"../utils/types/SecurityService.types\";\n\n/**\n * Approvals API\n *\n */\nexport class SecurityService {\n  constructor(private execution: Execution) {}\n\n  /**\n   *\n   * Commonly used to get a list of approvals across all token contracts categorized by spenders for a wallet’s assets.\n   *\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\n   *\n   */\n  public async getApprovals(\n    chainName: Chain,\n    walletAddress: string\n  ): Promise<GoldRushResponse<ApprovalsResponse>> {\n    const endpoint = endpointGenerator(\n      `${chainName}/approvals/${walletAddress}`,\n      []\n    );\n\n    const parseData = (data: GoldRushResponse<ApprovalsResponse>) => {\n      if (data.data) {\n        data.data.updated_at = data.data.updated_at\n          ? new Date(data.data.updated_at)\n          : null;\n        data.data.items = data.data.items\n          ? data.data.items.map((approvalItem) => ({\n              ...approvalItem,\n              balance: bigIntParser(approvalItem.balance),\n              spenders: approvalItem.spenders\n                ? approvalItem.spenders.map((spenderItem) => ({\n                    ...spenderItem,\n                    block_signed_at: spenderItem.block_signed_at\n                      ? new Date(spenderItem.block_signed_at)\n                      : null,\n                  }))\n                : null,\n            }))\n          : null;\n      }\n\n      return data;\n    };\n\n    return await this.execution.execute<ApprovalsResponse>(endpoint, parseData);\n  }\n\n  /**\n     *\n     * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\n     * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\n     \n     *\n     */\n  public async getNftApprovals(\n    chainName: Chain,\n    walletAddress: string\n  ): Promise<GoldRushResponse<NftApprovalsResponse>> {\n    const endpoint = endpointGenerator(\n      `${chainName}/nft/approvals/${walletAddress}`,\n      []\n    );\n\n    const parseData = (data: GoldRushResponse<NftApprovalsResponse>) => {\n      if (data.data) {\n        data.data.updated_at = data.data.updated_at\n          ? new Date(data.data.updated_at)\n          : null;\n        data.data.items = data.data.items\n          ? data.data.items.map((approvalItem) => ({\n              ...approvalItem,\n              token_balances: approvalItem.token_balances\n                ? approvalItem.token_balances.map((balanceItem) => ({\n                    ...balanceItem,\n                    token_balance: bigIntParser(balanceItem.token_balance),\n                    token_id: bigIntParser(balanceItem.token_id),\n                  }))\n                : null,\n            }))\n          : null;\n      }\n\n      return data;\n    };\n\n    return await this.execution.execute<NftApprovalsResponse>(\n      endpoint,\n      parseData\n    );\n  }\n}\n", "import { bigIntParser } from \"../utils/functions/bigIntParser\";\r\nimport { endpointGenerator } from \"../utils/functions/endpointGenerator\";\r\nimport { type Execution } from \"../utils/functions/execution\";\r\nimport { paginateEndpoint } from \"../utils/functions/paginateEndpoint\";\r\nimport {\r\n  type Chain,\r\n  type GoldRushResponse,\r\n} from \"../utils/types/Generic.types\";\r\nimport {\r\n  type GetAllTransactionsForAddressQueryParamOpts,\r\n  type GetTimeBucketTransactionsForAddressQueryParamOpts,\r\n  type GetTransactionQueryParamOpts,\r\n  type GetTransactionSummaryQueryParamOpts,\r\n  type GetTransactionsForAddressV3QueryParamOpts,\r\n  type GetTransactionsForBlockQueryParamOpts,\r\n  type RecentTransactionsResponse,\r\n  type TransactionResponse,\r\n  type TransactionsBlockResponse,\r\n  type TransactionsResponse,\r\n  type TransactionsSummaryResponse,\r\n  type TransactionsTimeBucketResponse,\r\n} from \"../utils/types/TransactionService.types\";\r\n\r\n/**\r\n * Transactions API\r\n *\r\n */\r\nexport class TransactionService {\r\n  constructor(private execution: Execution) {}\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch and render a single transaction including its decoded log events.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} txHash - The transaction hash.\r\n   * @param {GetTransactionQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `noLogs`: Omit log events.\r\n   *   - `withInternal`: Include internal transfers/transactions.\r\n   *   - `withState`: Include all transaction state changes with before and after values.\r\n   *   - `withInputData`: Include the transaction's input data such as the Method ID.\r\n   *\r\n   */\r\n  public async getTransaction(\r\n    chainName: Chain,\r\n    txHash: string,\r\n    queryParamOpts?: GetTransactionQueryParamOpts\r\n  ): Promise<GoldRushResponse<TransactionResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/transaction_v2/${txHash}`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n        {\r\n          key: \"no-logs\",\r\n          value: queryParamOpts?.noLogs,\r\n        },\r\n        {\r\n          key: \"with-internal\",\r\n          value: queryParamOpts?.withInternal,\r\n        },\r\n        {\r\n          key: \"with-state\",\r\n          value: queryParamOpts?.withState,\r\n        },\r\n        {\r\n          key: \"with-input-data\",\r\n          value: queryParamOpts?.withInputData,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<TransactionResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((txItem) => ({\r\n              ...txItem,\r\n              value: bigIntParser(txItem.value),\r\n              fees_paid: bigIntParser(txItem.fees_paid),\r\n              block_signed_at: txItem.block_signed_at\r\n                ? new Date(txItem.block_signed_at)\r\n                : null,\r\n              log_events: txItem.log_events\r\n                ? txItem.log_events.map((logItem) => ({\r\n                    ...logItem,\r\n                    block_signed_at: logItem.block_signed_at\r\n                      ? new Date(logItem.block_signed_at)\r\n                      : null,\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<TransactionResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch and render the most recent transactions involving an address. Frequently seen in wallet applications.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetAllTransactionsForAddressQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `noLogs`: Omit log events.\r\n   *   - `blockSignedAtAsc`: Sort the transactions in ascending chronological order. By default, it's set to `false` and returns transactions in descending chronological order.\r\n   *   - `withInternal`: Include internal transfers/transactions.\r\n   *   - `withState`: Include all transaction state changes with before and after values.\r\n   *   - `withInputData`: Include the transaction's input data such as the Method ID.\r\n   *\r\n   */\r\n  public async *getAllTransactionsForAddress(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    queryParamOpts?: GetAllTransactionsForAddressQueryParamOpts\r\n  ): AsyncIterable<GoldRushResponse<RecentTransactionsResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/transactions_v3`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n        {\r\n          key: \"no-logs\",\r\n          value: queryParamOpts?.noLogs,\r\n        },\r\n        {\r\n          key: \"block-signed-at-asc\",\r\n          value: queryParamOpts?.blockSignedAtAsc,\r\n        },\r\n        {\r\n          key: \"with-internal\",\r\n          value: queryParamOpts?.withInternal,\r\n        },\r\n        {\r\n          key: \"with-state\",\r\n          value: queryParamOpts?.withState,\r\n        },\r\n        {\r\n          key: \"with-input-data\",\r\n          value: queryParamOpts?.withInputData,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<RecentTransactionsResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((txItem) => ({\r\n              ...txItem,\r\n              value: bigIntParser(txItem.value),\r\n              fees_paid: bigIntParser(txItem.fees_paid),\r\n              block_signed_at: txItem.block_signed_at\r\n                ? new Date(txItem.block_signed_at)\r\n                : null,\r\n              log_events: txItem.log_events\r\n                ? txItem.log_events.map((logItem) => ({\r\n                    ...logItem,\r\n                    block_signed_at: logItem.block_signed_at\r\n                      ? new Date(logItem.block_signed_at)\r\n                      : null,\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    for await (const data of paginateEndpoint<RecentTransactionsResponse>(\r\n      endpoint,\r\n      this.execution,\r\n      parseData,\r\n      \"links\"\r\n    )) {\r\n      yield data;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch and render the most recent transactions involving an address. Frequently seen in wallet applications.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetAllTransactionsForAddressQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `noLogs`: Omit log events.\r\n   *   - `blockSignedAtAsc`: Sort the transactions in ascending chronological order. By default, it's set to `false` and returns transactions in descending chronological order.\r\n   *   - `withInternal`: Include internal transfers/transactions.\r\n   *   - `withState`: Include all transaction state changes with before and after values.\r\n   *   - `withInputData`: Include the transaction's input data such as the Method ID.\r\n   *\r\n   */\r\n  public async getAllTransactionsForAddressByPage(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    queryParamOpts?: GetAllTransactionsForAddressQueryParamOpts\r\n  ): Promise<GoldRushResponse<RecentTransactionsResponse>> {\r\n    const searchParams = [\r\n      {\r\n        key: \"quote-currency\",\r\n        value: queryParamOpts?.quoteCurrency,\r\n      },\r\n      {\r\n        key: \"no-logs\",\r\n        value: queryParamOpts?.noLogs,\r\n      },\r\n      {\r\n        key: \"block-signed-at-asc\",\r\n        value: queryParamOpts?.blockSignedAtAsc,\r\n      },\r\n      {\r\n        key: \"with-internal\",\r\n        value: queryParamOpts?.withInternal,\r\n      },\r\n      {\r\n        key: \"with-state\",\r\n        value: queryParamOpts?.withState,\r\n      },\r\n      {\r\n        key: \"with-input-data\",\r\n        value: queryParamOpts?.withInputData,\r\n      },\r\n    ];\r\n\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/transactions_v3`,\r\n      searchParams\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<RecentTransactionsResponse>) => {\r\n      if (data.data) {\r\n        data.data.prev = data.data?.links?.prev\r\n          ? async () =>\r\n              this.execution.execute<RecentTransactionsResponse>(\r\n                endpointGenerator(data.data?.links?.prev, searchParams),\r\n                parseData\r\n              )\r\n          : null;\r\n        data.data.next = data.data?.links?.next\r\n          ? async () =>\r\n              this.execution.execute<RecentTransactionsResponse>(\r\n                endpointGenerator(data.data?.links?.next, searchParams),\r\n                parseData\r\n              )\r\n          : null;\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((txItem) => ({\r\n              ...txItem,\r\n              value: bigIntParser(txItem.value),\r\n              fees_paid: bigIntParser(txItem.fees_paid),\r\n              block_signed_at: txItem.block_signed_at\r\n                ? new Date(txItem.block_signed_at)\r\n                : null,\r\n              log_events: txItem.log_events\r\n                ? txItem.log_events.map((logItem) => ({\r\n                    ...logItem,\r\n                    block_signed_at: logItem.block_signed_at\r\n                      ? new Date(logItem.block_signed_at)\r\n                      : null,\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<RecentTransactionsResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch all transactions including their decoded log events in a block and further flag interesting wallets or transactions.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {number} blockHeight - The requested block height.\r\n   * @param {GetTransactionsForBlockQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `noLogs`: Omit log events.\r\n   *\r\n   */\r\n  public async getTransactionsForBlock(\r\n    chainName: Chain,\r\n    blockHeight: number | string | \"latest\",\r\n    queryParamOpts?: GetTransactionsForBlockQueryParamOpts\r\n  ): Promise<GoldRushResponse<TransactionsBlockResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/block/${blockHeight}/transactions_v3`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n        {\r\n          key: \"no-logs\",\r\n          value: queryParamOpts?.noLogs,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<TransactionsBlockResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((txItem) => ({\r\n              ...txItem,\r\n              value: bigIntParser(txItem.value),\r\n              fees_paid: bigIntParser(txItem.fees_paid),\r\n              block_signed_at: txItem.block_signed_at\r\n                ? new Date(txItem.block_signed_at)\r\n                : null,\r\n              log_events: txItem.log_events\r\n                ? txItem.log_events.map((logItem) => ({\r\n                    ...logItem,\r\n                    block_signed_at: logItem.block_signed_at\r\n                      ? new Date(logItem.block_signed_at)\r\n                      : null,\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<TransactionsBlockResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Commonly used to fetch the earliest and latest transactions, and the transaction count for a wallet. Calculate the age of the wallet and the time it has been idle and quickly gain insights into their engagement with web3.\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {GetTransactionSummaryQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `withGas`: Include gas summary details. Additional charge of 1 credit when true. Response times may be impacted for wallets with millions of transactions.\r\n   *\r\n   */\r\n  public async getTransactionSummary(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    queryParamOpts?: GetTransactionSummaryQueryParamOpts\r\n  ): Promise<GoldRushResponse<TransactionsSummaryResponse>> {\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/transactions_summary`,\r\n      [\r\n        {\r\n          key: \"quote-currency\",\r\n          value: queryParamOpts?.quoteCurrency,\r\n        },\r\n        {\r\n          key: \"with-gas\",\r\n          value: queryParamOpts?.withGas,\r\n        },\r\n      ]\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<TransactionsSummaryResponse>) => {\r\n      if (data.data) {\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((txsItem) => ({\r\n              ...txsItem,\r\n              earliest_transaction: {\r\n                ...txsItem.earliest_transaction!,\r\n                block_signed_at: txsItem?.earliest_transaction?.block_signed_at\r\n                  ? new Date(txsItem.earliest_transaction.block_signed_at)\r\n                  : null,\r\n              },\r\n              latest_transaction: {\r\n                ...txsItem.latest_transaction!,\r\n                block_signed_at: txsItem?.latest_transaction?.block_signed_at\r\n                  ? new Date(txsItem?.latest_transaction?.block_signed_at)\r\n                  : null,\r\n              },\r\n              // ? API vs docs non-consistent\r\n              // gas_summary: {\r\n              //   ...txsItem.gas_summary,\r\n              //   total_fees_paid: bigIntParser(\r\n              //     txsItem.gas_summary.total_fees_paid\r\n              //   ),\r\n              // },\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<TransactionsSummaryResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {number} page - The requested page, 0-indexed.\r\n   * @param {GetTransactionsForAddressV3QueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `noLogs`: Omit log events.\r\n   *   - `blockSignedAtAsc`: Sort the transactions in ascending chronological order. By default, it's set to `false` and returns transactions in descending chronological order.\r\n   *\r\n   */\r\n  public async getTransactionsForAddressV3(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    page: number,\r\n    queryParamOpts?: GetTransactionsForAddressV3QueryParamOpts\r\n  ): Promise<GoldRushResponse<TransactionsResponse>> {\r\n    const searchParams = [\r\n      {\r\n        key: \"quote-currency\",\r\n        value: queryParamOpts?.quoteCurrency,\r\n      },\r\n      {\r\n        key: \"no-logs\",\r\n        value: queryParamOpts?.noLogs,\r\n      },\r\n      {\r\n        key: \"block-signed-at-asc\",\r\n        value: queryParamOpts?.blockSignedAtAsc,\r\n      },\r\n    ];\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/address/${walletAddress}/transactions_v3/page/${page}`,\r\n      searchParams\r\n    );\r\n\r\n    const parseData = (data: GoldRushResponse<TransactionsResponse>) => {\r\n      if (data.data) {\r\n        data.data.prev = data.data?.links?.prev\r\n          ? async () =>\r\n              this.execution.execute<TransactionsResponse>(\r\n                endpointGenerator(data.data?.links?.prev, searchParams),\r\n                parseData\r\n              )\r\n          : null;\r\n        data.data.next = data.data?.links?.next\r\n          ? async () =>\r\n              this.execution.execute<TransactionsResponse>(\r\n                endpointGenerator(data.data?.links?.next, searchParams),\r\n                parseData\r\n              )\r\n          : null;\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((txItem) => ({\r\n              ...txItem,\r\n              value: bigIntParser(txItem.value),\r\n              fees_paid: bigIntParser(txItem.fees_paid),\r\n              block_signed_at: txItem.block_signed_at\r\n                ? new Date(txItem.block_signed_at)\r\n                : null,\r\n              log_events: txItem.log_events\r\n                ? txItem.log_events.map((logItem) => ({\r\n                    ...logItem,\r\n                    block_signed_at: logItem.block_signed_at\r\n                      ? new Date(logItem.block_signed_at)\r\n                      : null,\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<TransactionsResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Chain} chainName - The chain name eg: `eth-mainnet` or 1.\r\n   * @param {string} walletAddress - The requested address. Passing in an `ENS`, `RNS`, `Lens Handle`, or an `Unstoppable Domain` resolves automatically.\r\n   * @param {number} timeBucket - The 0-indexed 15-minute time bucket. E.g. 27 Feb 2023 05:23 GMT = 1677475383 (Unix time). 1677475383/900=1863861 timeBucket.\r\n   * @param {GetTimeBucketTransactionsForAddressQueryParamOpts} queryParamOpts\r\n   *   - `quoteCurrency`: The currency to convert. Supports `USD`, `CAD`, `EUR`, `SGD`, `INR`, `JPY`, `VND`, `CNY`, `KRW`, `RUB`, `TRY`, `NGN`, `ARS`, `AUD`, `CHF`, and `GBP`.\r\n   *   - `noLogs`: Omit log events.\r\n   *\r\n   */\r\n  public async getTimeBucketTransactionsForAddress(\r\n    chainName: Chain,\r\n    walletAddress: string,\r\n    timeBucket: number,\r\n    queryParamOpts?: GetTimeBucketTransactionsForAddressQueryParamOpts\r\n  ): Promise<GoldRushResponse<TransactionsTimeBucketResponse>> {\r\n    const searchParams = [\r\n      {\r\n        key: \"quote-currency\",\r\n        value: queryParamOpts?.quoteCurrency,\r\n      },\r\n      {\r\n        key: \"no-logs\",\r\n        value: queryParamOpts?.noLogs,\r\n      },\r\n    ];\r\n    const endpoint = endpointGenerator(\r\n      `${chainName}/bulk/transactions/${walletAddress}/${timeBucket}`,\r\n      searchParams\r\n    );\r\n\r\n    const parseData = (\r\n      data: GoldRushResponse<TransactionsTimeBucketResponse>\r\n    ) => {\r\n      if (data.data) {\r\n        data.data.prev = data.data?.links?.prev\r\n          ? async () =>\r\n              this.execution.execute<TransactionsTimeBucketResponse>(\r\n                endpointGenerator(data.data?.links?.prev, searchParams),\r\n                parseData\r\n              )\r\n          : null;\r\n        data.data.next = data.data?.links?.next\r\n          ? async () =>\r\n              this.execution.execute<TransactionsTimeBucketResponse>(\r\n                endpointGenerator(data.data?.links?.next, searchParams),\r\n                parseData\r\n              )\r\n          : null;\r\n        data.data.updated_at = data.data.updated_at\r\n          ? new Date(data.data.updated_at)\r\n          : null;\r\n        data.data.items = data.data.items\r\n          ? data.data.items.map((txItem) => ({\r\n              ...txItem,\r\n              value: bigIntParser(txItem.value),\r\n              fees_paid: bigIntParser(txItem.fees_paid),\r\n              block_signed_at: txItem.block_signed_at\r\n                ? new Date(txItem.block_signed_at)\r\n                : null,\r\n              log_events: txItem.log_events\r\n                ? txItem.log_events.map((logItem) => ({\r\n                    ...logItem,\r\n                    block_signed_at: logItem.block_signed_at\r\n                      ? new Date(logItem.block_signed_at)\r\n                      : null,\r\n                  }))\r\n                : null,\r\n            }))\r\n          : null;\r\n      }\r\n\r\n      return data;\r\n    };\r\n\r\n    return await this.execution.execute<TransactionsTimeBucketResponse>(\r\n      endpoint,\r\n      parseData\r\n    );\r\n  }\r\n}\r\n", "import { type GoldRushClientSettings } from \"../types/Generic.types\";\n\nexport async function debugOutput(\n  settings: GoldRushClientSettings,\n  ...content: unknown[]\n) {\n  if (settings.debug) {\n    content.forEach((c) => {\n      console.info(\"[DEBUG] |\", c);\n    });\n  }\n}\n", "class Node {\n\t/// value;\n\t/// next;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\n\t\t// TODO: Remove this when targeting Node.js 12.\n\t\tthis.next = undefined;\n\t}\n}\n\nclass Queue {\n\t// TODO: Use private class fields when targeting Node.js 12.\n\t// #_head;\n\t// #_tail;\n\t// #_size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tenqueue(value) {\n\t\tconst node = new Node(value);\n\n\t\tif (this._head) {\n\t\t\tthis._tail.next = node;\n\t\t\tthis._tail = node;\n\t\t} else {\n\t\t\tthis._head = node;\n\t\t\tthis._tail = node;\n\t\t}\n\n\t\tthis._size++;\n\t}\n\n\tdequeue() {\n\t\tconst current = this._head;\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._head = this._head.next;\n\t\tthis._size--;\n\t\treturn current.value;\n\t}\n\n\tclear() {\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t}\n\n\tget size() {\n\t\treturn this._size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this._head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n}\n\nmodule.exports = Queue;\n", "'use strict';\nconst Queue = require('yocto-queue');\n\nconst pLimit = concurrency => {\n\tif (!((Number.isInteger(concurrency) || concurrency === Infinity) && concurrency > 0)) {\n\t\tthrow new TypeError('Expected `concurrency` to be a number from 1 and up');\n\t}\n\n\tconst queue = new Queue();\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.size > 0) {\n\t\t\tqueue.dequeue()();\n\t\t}\n\t};\n\n\tconst run = async (fn, resolve, ...args) => {\n\t\tactiveCount++;\n\n\t\tconst result = (async () => fn(...args))();\n\n\t\tresolve(result);\n\n\t\ttry {\n\t\t\tawait result;\n\t\t} catch {}\n\n\t\tnext();\n\t};\n\n\tconst enqueue = (fn, resolve, ...args) => {\n\t\tqueue.enqueue(run.bind(null, fn, resolve, ...args));\n\n\t\t(async () => {\n\t\t\t// This function needs to wait until the next microtask before comparing\n\t\t\t// `activeCount` to `concurrency`, because `activeCount` is updated asynchronously\n\t\t\t// when the run function is dequeued and called. The comparison in the if-statement\n\t\t\t// needs to happen asynchronously as well to get an up-to-date value for `activeCount`.\n\t\t\tawait Promise.resolve();\n\n\t\t\tif (activeCount < concurrency && queue.size > 0) {\n\t\t\t\tqueue.dequeue()();\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => {\n\t\tenqueue(fn, resolve, ...args);\n\t});\n\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.size\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.clear();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn generator;\n};\n\nmodule.exports = pLimit;\n", "import {\n  type GoldRushClientSettings,\n  type GoldRushResponse,\n} from \"../types/Generic.types\";\nimport { debugOutput } from \"./debugOutput\";\nimport pLimit from \"p-limit\";\n\nexport class Execution {\n  private maxRetries: number;\n  private retryDelay: number;\n  private enableRetry: boolean;\n  private processes: pLimit.Limit;\n\n  constructor(\n    private settings: GoldRushClientSettings,\n    private headers: Record<string, string>\n  ) {\n    this.processes = pLimit(this.settings.threadCount ?? 2);\n    this.maxRetries = settings.maxRetries ?? 2;\n    this.retryDelay = settings.retryDelay ?? 1500;\n    this.enableRetry = settings.enableRetry ?? true;\n  }\n\n  async execute<T>(\n    endpoint: URL,\n    parseData: (data: GoldRushResponse<T>) => GoldRushResponse<T>\n  ): Promise<GoldRushResponse<T>> {\n    let retryCount: number = 0;\n    let completed: boolean = false;\n\n    while (!completed) {\n      try {\n        const startTime: Date = new Date();\n\n        const response = await this.processes(() =>\n          fetch(endpoint, {\n            headers: this.headers,\n          })\n        );\n\n        debugOutput(\n          this.settings,\n          `Request URL: ${\n            response ? new URL(response.url) : endpoint\n          } | Response code: ${\n            response ? response.status : 429\n          } | Response time: ${(\n            new Date().getTime() - startTime.getTime()\n          ).toFixed(2)}ms`\n        );\n\n        if (response.status === null || response.status === 429) {\n          throw new Error(`Received status code: ${response.status ?? 429}`);\n        }\n\n        const data = (await response.json()) as GoldRushResponse<T>;\n\n        if (data.error) {\n          throw data;\n        }\n\n        const parsedData = parseData(data);\n        completed = true;\n\n        return {\n          data: parsedData.data as T,\n          error: false,\n          error_code: null,\n          error_message: null,\n        };\n      } catch (error: any) {\n        debugOutput(\n          this.settings,\n          `Request URL: ${endpoint} | Retry Enabled: ${this.enableRetry} | Retry Count: ${retryCount} | Max Retries: ${this.maxRetries} | Retry Delay: ${this.retryDelay}ms`,\n          error\n        );\n\n        if (\n          this.enableRetry &&\n          (error?.error_code === 429 || error?.cause?.code === 429)\n        ) {\n          if (retryCount >= this.maxRetries) {\n            completed = true;\n            return {\n              data: null,\n              error: true,\n              error_code: 429,\n              error_message: `${this.maxRetries} retries exceeded`,\n            };\n          } else {\n            retryCount++;\n            await new Promise((resolve) =>\n              setTimeout(resolve, this.retryDelay)\n            );\n            completed = false;\n          }\n        } else {\n          completed = true;\n          return {\n            data: null,\n            error: true,\n            error_code: error?.cause?.code || error?.error_code || 500,\n            error_message:\n              error?.cause?.message ||\n              error?.error_message ||\n              \"Internal server error\",\n          };\n        }\n      }\n    }\n\n    return {\n      data: null,\n      error: true,\n      error_code: 500,\n      error_message: \"Internal server error\",\n    };\n  }\n}\n", "const _apiKeyV1Pattern: RegExp = /^ckey_([a-f0-9]{27})$/;\nconst _apiKeyV2Pattern: RegExp =\n  /^cqt_(wF|rQ)([bcdfghjkmpqrtvwxyBCDFGHJKMPQRTVWXY346789]{26})$/;\n\nexport const isValidApiKey = (apiKey: string): boolean => {\n  return _apiKeyV1Pattern.test(apiKey) || _apiKeyV2Pattern.test(apiKey);\n};\n", "import { version } from \"../package.json\";\r\nimport { AllChainsService } from \"./services/AllChainsService\";\r\nimport { BalanceService } from \"./services/BalanceService\";\r\nimport { BaseService } from \"./services/BaseService\";\r\nimport { BitcoinService } from \"./services/BitcoinService\";\r\nimport { NftService } from \"./services/NftService\";\r\nimport { PricingService } from \"./services/PricingService\";\r\nimport { SecurityService } from \"./services/SecurityService\";\r\nimport { TransactionService } from \"./services/TransactionService\";\r\nimport { Execution } from \"./utils/functions/execution\";\r\nimport { isValidApiKey } from \"./utils/functions/isValidApiKey\";\r\nimport {\r\n  type GoldRushClientSettings,\r\n  type GoldRushResponse,\r\n} from \"./utils/types/Generic.types\";\r\n\r\n/**\r\n * GoldRushClient Class\r\n */\r\nexport class GoldRushClient {\r\n  private readonly userAgent: string = `com.covalenthq.sdk.typescript/${version}`;\r\n\r\n  public AllChainsService: AllChainsService;\r\n  public BalanceService: BalanceService;\r\n  public BaseService: BaseService;\r\n  public BitcoinService: BitcoinService;\r\n  public NftService: NftService;\r\n  public PricingService: PricingService;\r\n  public SecurityService: SecurityService;\r\n  public TransactionService: TransactionService;\r\n\r\n  constructor(apiKey: string, settings: GoldRushClientSettings = {}) {\r\n    const validKey: boolean = isValidApiKey(apiKey);\r\n\r\n    if (!validKey) {\r\n      throw {\r\n        data: null,\r\n        error: true,\r\n        error_code: 401,\r\n        error_message:\r\n          \"Invalid or missing API key (sign up at https://goldrush.dev/platform/apikey)\",\r\n      } as GoldRushResponse<null>;\r\n    }\r\n\r\n    const execution: Execution = new Execution(settings, {\r\n      Authorization: `Bearer ${apiKey}`,\r\n      \"X-Requested-With\": settings.source\r\n        ? `${settings.source} (${this.userAgent})`\r\n        : this.userAgent,\r\n    });\r\n\r\n    this.AllChainsService = new AllChainsService(execution);\r\n    this.BalanceService = new BalanceService(execution);\r\n    this.BaseService = new BaseService(execution);\r\n    this.BitcoinService = new BitcoinService(execution);\r\n    this.NftService = new NftService(execution);\r\n    this.PricingService = new PricingService(execution);\r\n    this.SecurityService = new SecurityService(execution);\r\n    this.TransactionService = new TransactionService(execution);\r\n  }\r\n}\r\n", "/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n  // The default values below must be integers within the stated ranges.\r\n\r\n  /*\r\n   * The maximum number of decimal places (DP) of the results of operations involving division:\r\n   * div and sqrt, and pow with negative exponents.\r\n   */\r\nvar DP = 20,          // 0 to MAX_DP\r\n\r\n  /*\r\n   * The rounding mode (RM) used when rounding to the above decimal places.\r\n   *\r\n   *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n   *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n   *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n   *  3  Away from zero.                                  (ROUND_UP)\r\n   */\r\n  RM = 1,             // 0, 1, 2 or 3\r\n\r\n  // The maximum value of DP and Big.DP.\r\n  MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n  // The maximum magnitude of the exponent argument to the pow method.\r\n  MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n  /*\r\n   * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n   * (JavaScript numbers: -7)\r\n   * -1000000 is the minimum recommended exponent value of a Big.\r\n   */\r\n  NE = -7,            // 0 to -1000000\r\n\r\n  /*\r\n   * The positive exponent (PE) at and above which toString returns exponential notation.\r\n   * (JavaScript numbers: 21)\r\n   * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n   */\r\n  PE = 21,            // 0 to 1000000\r\n\r\n  /*\r\n   * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n   * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n   * primitive number without a loss of precision.\r\n   */\r\n  STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n  // Error messages.\r\n  NAME = '[big.js] ',\r\n  INVALID = NAME + 'Invalid ',\r\n  INVALID_DP = INVALID + 'decimal places',\r\n  INVALID_RM = INVALID + 'rounding mode',\r\n  DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n  // The shared prototype object.\r\n  P = {},\r\n  UNDEFINED = void 0,\r\n  NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n/*\r\n * Create and return a Big constructor.\r\n */\r\nfunction _Big_() {\r\n\r\n  /*\r\n   * The Big constructor and exported function.\r\n   * Create and return a new instance of a Big number object.\r\n   *\r\n   * n {number|string|Big} A numeric value.\r\n   */\r\n  function Big(n) {\r\n    var x = this;\r\n\r\n    // Enable constructor usage without new.\r\n    if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n    // Duplicate.\r\n    if (n instanceof Big) {\r\n      x.s = n.s;\r\n      x.e = n.e;\r\n      x.c = n.c.slice();\r\n    } else {\r\n      if (typeof n !== 'string') {\r\n        if (Big.strict === true && typeof n !== 'bigint') {\r\n          throw TypeError(INVALID + 'value');\r\n        }\r\n\r\n        // Minus zero?\r\n        n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n      }\r\n\r\n      parse(x, n);\r\n    }\r\n\r\n    // Retain a reference to this Big constructor.\r\n    // Shadow Big.prototype.constructor which points to Object.\r\n    x.constructor = Big;\r\n  }\r\n\r\n  Big.prototype = P;\r\n  Big.DP = DP;\r\n  Big.RM = RM;\r\n  Big.NE = NE;\r\n  Big.PE = PE;\r\n  Big.strict = STRICT;\r\n  Big.roundDown = 0;\r\n  Big.roundHalfUp = 1;\r\n  Big.roundHalfEven = 2;\r\n  Big.roundUp = 3;\r\n\r\n  return Big;\r\n}\r\n\r\n\r\n/*\r\n * Parse the number or string value passed to a Big constructor.\r\n *\r\n * x {Big} A Big number instance.\r\n * n {number|string} A numeric value.\r\n */\r\nfunction parse(x, n) {\r\n  var e, i, nl;\r\n\r\n  if (!NUMERIC.test(n)) {\r\n    throw Error(INVALID + 'number');\r\n  }\r\n\r\n  // Determine sign.\r\n  x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n  // Decimal point?\r\n  if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = n.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +n.slice(i + 1);\r\n    n = n.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = n.length;\r\n  }\r\n\r\n  nl = n.length;\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n  if (i == nl) {\r\n\r\n    // Zero.\r\n    x.c = [x.e = 0];\r\n  } else {\r\n\r\n    // Determine trailing zeros.\r\n    for (; nl > 0 && n.charAt(--nl) == '0';);\r\n    x.e = e - i - 1;\r\n    x.c = [];\r\n\r\n    // Convert string to array of digits without leading/trailing zeros.\r\n    for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n *\r\n * x {Big} The Big to round.\r\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n * [more] {boolean} Whether the result of division was truncated.\r\n */\r\nfunction round(x, sd, rm, more) {\r\n  var xc = x.c;\r\n\r\n  if (rm === UNDEFINED) rm = x.constructor.RM;\r\n  if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n    throw Error(INVALID_RM);\r\n  }\r\n\r\n  if (sd < 1) {\r\n    more =\r\n      rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n      rm === 1 && xc[0] >= 5 ||\r\n      rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n    );\r\n\r\n    xc.length = 1;\r\n\r\n    if (more) {\r\n\r\n      // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n      x.e = x.e - sd + 1;\r\n      xc[0] = 1;\r\n    } else {\r\n\r\n      // Zero.\r\n      xc[0] = x.e = 0;\r\n    }\r\n  } else if (sd < xc.length) {\r\n\r\n    // xc[sd] is the digit after the digit that may be rounded up.\r\n    more =\r\n      rm === 1 && xc[sd] >= 5 ||\r\n      rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n        (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n      rm === 3 && (more || !!xc[0]);\r\n\r\n    // Remove any digits after the required precision.\r\n    xc.length = sd;\r\n\r\n    // Round up?\r\n    if (more) {\r\n\r\n      // Rounding up may mean the previous digit has to be rounded up.\r\n      for (; ++xc[--sd] > 9;) {\r\n        xc[sd] = 0;\r\n        if (sd === 0) {\r\n          ++x.e;\r\n          xc.unshift(1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (sd = xc.length; !xc[--sd];) xc.pop();\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a string representing the value of Big x in normal or exponential notation.\r\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n */\r\nfunction stringify(x, doExponential, isNonzero) {\r\n  var e = x.e,\r\n    s = x.c.join(''),\r\n    n = s.length;\r\n\r\n  // Exponential notation?\r\n  if (doExponential) {\r\n    s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n  // Normal notation.\r\n  } else if (e < 0) {\r\n    for (; ++e;) s = '0' + s;\r\n    s = '0.' + s;\r\n  } else if (e > 0) {\r\n    if (++e > n) {\r\n      for (e -= n; e--;) s += '0';\r\n    } else if (e < n) {\r\n      s = s.slice(0, e) + '.' + s.slice(e);\r\n    }\r\n  } else if (n > 1) {\r\n    s = s.charAt(0) + '.' + s.slice(1);\r\n  }\r\n\r\n  return x.s < 0 && isNonzero ? '-' + s : s;\r\n}\r\n\r\n\r\n// Prototype/instance methods\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the absolute value of this Big.\r\n */\r\nP.abs = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = 1;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return 1 if the value of this Big is greater than the value of Big y,\r\n *       -1 if the value of this Big is less than the value of Big y, or\r\n *        0 if they have the same value.\r\n */\r\nP.cmp = function (y) {\r\n  var isneg,\r\n    x = this,\r\n    xc = x.c,\r\n    yc = (y = new x.constructor(y)).c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  isneg = i < 0;\r\n\r\n  // Compare exponents.\r\n  if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = -1; ++i < j;) {\r\n    if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.div = function (y) {\r\n  var x = this,\r\n    Big = x.constructor,\r\n    a = x.c,                  // dividend\r\n    b = (y = new Big(y)).c,   // divisor\r\n    k = x.s == y.s ? 1 : -1,\r\n    dp = Big.DP;\r\n\r\n  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n    throw Error(INVALID_DP);\r\n  }\r\n\r\n  // Divisor is zero?\r\n  if (!b[0]) {\r\n    throw Error(DIV_BY_ZERO);\r\n  }\r\n\r\n  // Dividend is 0? Return +-0.\r\n  if (!a[0]) {\r\n    y.s = k;\r\n    y.c = [y.e = 0];\r\n    return y;\r\n  }\r\n\r\n  var bl, bt, n, cmp, ri,\r\n    bz = b.slice(),\r\n    ai = bl = b.length,\r\n    al = a.length,\r\n    r = a.slice(0, bl),   // remainder\r\n    rl = r.length,\r\n    q = y,                // quotient\r\n    qc = q.c = [],\r\n    qi = 0,\r\n    p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n  q.s = k;\r\n  k = p < 0 ? 0 : p;\r\n\r\n  // Create version of divisor with leading zero.\r\n  bz.unshift(0);\r\n\r\n  // Add zeros to make remainder as long as divisor.\r\n  for (; rl++ < bl;) r.push(0);\r\n\r\n  do {\r\n\r\n    // n is how many times the divisor goes into current remainder.\r\n    for (n = 0; n < 10; n++) {\r\n\r\n      // Compare divisor and remainder.\r\n      if (bl != (rl = r.length)) {\r\n        cmp = bl > rl ? 1 : -1;\r\n      } else {\r\n        for (ri = -1, cmp = 0; ++ri < bl;) {\r\n          if (b[ri] != r[ri]) {\r\n            cmp = b[ri] > r[ri] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // If divisor < remainder, subtract divisor from remainder.\r\n      if (cmp < 0) {\r\n\r\n        // Remainder can't be more than 1 digit longer than divisor.\r\n        // Equalise lengths using divisor with extra leading zero?\r\n        for (bt = rl == bl ? b : bz; rl;) {\r\n          if (r[--rl] < bt[rl]) {\r\n            ri = rl;\r\n            for (; ri && !r[--ri];) r[ri] = 9;\r\n            --r[ri];\r\n            r[rl] += 10;\r\n          }\r\n          r[rl] -= bt[rl];\r\n        }\r\n\r\n        for (; !r[0];) r.shift();\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Add the digit n to the result array.\r\n    qc[qi++] = cmp ? n : ++n;\r\n\r\n    // Update the remainder.\r\n    if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n    else r = [a[ai]];\r\n\r\n  } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n  // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n  if (!qc[0] && qi != 1) {\r\n\r\n    // There can't be more than one zero.\r\n    qc.shift();\r\n    q.e--;\r\n    p--;\r\n  }\r\n\r\n  // Round?\r\n  if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n  return q;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n */\r\nP.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n * false.\r\n */\r\nP.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.gte = function (y) {\r\n  return this.cmp(y) > -1;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n */\r\nP.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var i, j, t, xlty,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  // Signs differ?\r\n  if (a != b) {\r\n    y.s = -b;\r\n    return x.plus(y);\r\n  }\r\n\r\n  var xc = x.c.slice(),\r\n    xe = x.e,\r\n    yc = y.c,\r\n    ye = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) {\r\n    if (yc[0]) {\r\n      y.s = -b;\r\n    } else if (xc[0]) {\r\n      y = new Big(x);\r\n    } else {\r\n      y.s = 1;\r\n    }\r\n    return y;\r\n  }\r\n\r\n  // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n  if (a = xe - ye) {\r\n\r\n    if (xlty = a < 0) {\r\n      a = -a;\r\n      t = xc;\r\n    } else {\r\n      ye = xe;\r\n      t = yc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (b = a; b--;) t.push(0);\r\n    t.reverse();\r\n  } else {\r\n\r\n    // Exponents equal. Check digit by digit.\r\n    j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n    for (a = b = 0; b < j; b++) {\r\n      if (xc[b] != yc[b]) {\r\n        xlty = xc[b] < yc[b];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // x < y? Point xc to the array of the bigger number.\r\n  if (xlty) {\r\n    t = xc;\r\n    xc = yc;\r\n    yc = t;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  /*\r\n   * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n   * needs to start at yc.length.\r\n   */\r\n  if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n  // Subtract yc from xc.\r\n  for (b = i; j > a;) {\r\n    if (xc[--j] < yc[j]) {\r\n      for (i = j; i && !xc[--i];) xc[i] = 9;\r\n      --xc[i];\r\n      xc[j] += 10;\r\n    }\r\n\r\n    xc[j] -= yc[j];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xc[--b] === 0;) xc.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xc[0] === 0;) {\r\n    xc.shift();\r\n    --ye;\r\n  }\r\n\r\n  if (!xc[0]) {\r\n\r\n    // n - n = +0\r\n    y.s = 1;\r\n\r\n    // Result must be zero.\r\n    xc = [ye = 0];\r\n  }\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n */\r\nP.mod = function (y) {\r\n  var ygtx,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  if (!y.c[0]) {\r\n    throw Error(DIV_BY_ZERO);\r\n  }\r\n\r\n  x.s = y.s = 1;\r\n  ygtx = y.cmp(x) == 1;\r\n  x.s = a;\r\n  y.s = b;\r\n\r\n  if (ygtx) return new Big(x);\r\n\r\n  a = Big.DP;\r\n  b = Big.RM;\r\n  Big.DP = Big.RM = 0;\r\n  x = x.div(y);\r\n  Big.DP = a;\r\n  Big.RM = b;\r\n\r\n  return this.minus(x.times(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big negated.\r\n */\r\nP.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n */\r\nP.plus = P.add = function (y) {\r\n  var e, k, t,\r\n    x = this,\r\n    Big = x.constructor;\r\n\r\n  y = new Big(y);\r\n\r\n  // Signs differ?\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  var xe = x.e,\r\n    xc = x.c,\r\n    ye = y.e,\r\n    yc = y.c;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) {\r\n    if (!yc[0]) {\r\n      if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = x.s;\r\n      }\r\n    }\r\n    return y;\r\n  }\r\n\r\n  xc = xc.slice();\r\n\r\n  // Prepend zeros to equalise exponents.\r\n  // Note: reverse faster than unshifts.\r\n  if (e = xe - ye) {\r\n    if (e > 0) {\r\n      ye = xe;\r\n      t = yc;\r\n    } else {\r\n      e = -e;\r\n      t = xc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (; e--;) t.push(0);\r\n    t.reverse();\r\n  }\r\n\r\n  // Point xc to the longer array.\r\n  if (xc.length - yc.length < 0) {\r\n    t = yc;\r\n    yc = xc;\r\n    xc = t;\r\n  }\r\n\r\n  e = yc.length;\r\n\r\n  // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n  for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n  if (k) {\r\n    xc.unshift(k);\r\n    ++ye;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a Big whose value is the value of this Big raised to the power n.\r\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n * mode Big.RM.\r\n *\r\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n */\r\nP.pow = function (n) {\r\n  var x = this,\r\n    one = new x.constructor('1'),\r\n    y = one,\r\n    isneg = n < 0;\r\n\r\n  if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n    throw Error(INVALID + 'exponent');\r\n  }\r\n\r\n  if (isneg) n = -n;\r\n\r\n  for (;;) {\r\n    if (n & 1) y = y.times(x);\r\n    n >>= 1;\r\n    if (!n) break;\r\n    x = x.times(x);\r\n  }\r\n\r\n  return isneg ? one.div(y) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.prec = function (sd, rm) {\r\n  if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n    throw Error(INVALID + 'precision');\r\n  }\r\n  return round(new this.constructor(this), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n * using rounding mode rm, or Big.RM if rm is not specified.\r\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n * If dp is not specified, round to 0 decimal places.\r\n *\r\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.round = function (dp, rm) {\r\n  if (dp === UNDEFINED) dp = 0;\r\n  else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n    throw Error(INVALID_DP);\r\n  }\r\n  return round(new this.constructor(this), dp + this.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.sqrt = function () {\r\n  var r, c, t,\r\n    x = this,\r\n    Big = x.constructor,\r\n    s = x.s,\r\n    e = x.e,\r\n    half = new Big('0.5');\r\n\r\n  // Zero?\r\n  if (!x.c[0]) return new Big(x);\r\n\r\n  // Negative?\r\n  if (s < 0) {\r\n    throw Error(NAME + 'No square root');\r\n  }\r\n\r\n  // Estimate.\r\n  s = Math.sqrt(x + '');\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n  if (s === 0 || s === 1 / 0) {\r\n    c = x.c.join('');\r\n    if (!(c.length + e & 1)) c += '0';\r\n    s = Math.sqrt(c);\r\n    e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n    r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n  } else {\r\n    r = new Big(s + '');\r\n  }\r\n\r\n  e = r.e + (Big.DP += 4);\r\n\r\n  // Newton-Raphson iteration.\r\n  do {\r\n    t = r;\r\n    r = half.times(t.plus(x.div(t)));\r\n  } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n  return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big times the value of Big y.\r\n */\r\nP.times = P.mul = function (y) {\r\n  var c,\r\n    x = this,\r\n    Big = x.constructor,\r\n    xc = x.c,\r\n    yc = (y = new Big(y)).c,\r\n    a = xc.length,\r\n    b = yc.length,\r\n    i = x.e,\r\n    j = y.e;\r\n\r\n  // Determine sign of result.\r\n  y.s = x.s == y.s ? 1 : -1;\r\n\r\n  // Return signed 0 if either 0.\r\n  if (!xc[0] || !yc[0]) {\r\n    y.c = [y.e = 0];\r\n    return y;\r\n  }\r\n\r\n  // Initialise exponent of result as x.e + y.e.\r\n  y.e = i + j;\r\n\r\n  // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n  if (a < b) {\r\n    c = xc;\r\n    xc = yc;\r\n    yc = c;\r\n    j = a;\r\n    a = b;\r\n    b = j;\r\n  }\r\n\r\n  // Initialise coefficient array of result with zeros.\r\n  for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n  // Multiply.\r\n\r\n  // i is initially xc.length.\r\n  for (i = b; i--;) {\r\n    b = 0;\r\n\r\n    // a is yc.length.\r\n    for (j = a + i; j > i;) {\r\n\r\n      // Current sum of products at this digit position, plus carry.\r\n      b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n      c[j--] = b % 10;\r\n\r\n      // carry\r\n      b = b / 10 | 0;\r\n    }\r\n\r\n    c[j] = b;\r\n  }\r\n\r\n  // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n  if (b) ++y.e;\r\n  else c.shift();\r\n\r\n  // Remove trailing zeros.\r\n  for (i = c.length; !c[--i];) c.pop();\r\n  y.c = c;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var x = this,\r\n    n = x.c[0];\r\n\r\n  if (dp !== UNDEFINED) {\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    x = round(new x.constructor(x), ++dp, rm);\r\n    for (; x.c.length < dp;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, true, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var x = this,\r\n    n = x.c[0];\r\n\r\n  if (dp !== UNDEFINED) {\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n    // x.e may have changed if the value is rounded up.\r\n    for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, false, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Omit the sign for negative zero.\r\n */\r\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toJSON = P.toString = function () {\r\n  var x = this,\r\n    Big = x.constructor;\r\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Big as a primitve number.\r\n */\r\nP.toNumber = function () {\r\n  var n = Number(stringify(this, true, true));\r\n  if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n    throw Error(NAME + 'Imprecise conversion');\r\n  }\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big rounded to sd significant digits using\r\n * rounding mode rm, or Big.RM if rm is not specified.\r\n * Use exponential notation if sd is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var x = this,\r\n    Big = x.constructor,\r\n    n = x.c[0];\r\n\r\n  if (sd !== UNDEFINED) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    x = round(new Big(x), sd, rm);\r\n    for (; x.c.length < sd;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Include the sign for negative zero.\r\n */\r\nP.valueOf = function () {\r\n  var x = this,\r\n    Big = x.constructor;\r\n  if (Big.strict === true) {\r\n    throw Error(NAME + 'valueOf disallowed');\r\n  }\r\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n};\r\n\r\n\r\n// Export\r\n\r\n\r\nexport var Big = _Big_();\r\n\r\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\r\nexport default Big;\r\n", "import Big from \"big.js\";\n\nexport const calculatePrettyBalance = (\n  value: number | bigint,\n  decimals: number = 18,\n  roundOff: boolean = true,\n  precision: number = 0\n): string => {\n  const bigDecimalValue = new Big(value.toString());\n  const bigDecimalExpo = new Big(Math.pow(10, decimals).toString());\n  const calculated = bigDecimalValue.div(bigDecimalExpo);\n\n  if (decimals === 0 || !roundOff) {\n    return calculated.toString();\n  }\n\n  const decimalFixed = precision || (calculated.lt(100) ? 6 : 2);\n  return calculated.toFixed(decimalFixed);\n};\n", "import { type Quote } from \"../types/Generic.types\";\n\nconst LESS_THAN_ZERO: string = \"0.01\";\nconst ZERO: string = \"0.00\";\n\nconst currencyMap: Record<Quote, string> = {\n  USD: \"$\",\n  CAD: \"CA$\",\n  EUR: \"€\",\n  SGD: \"S$\",\n  INR: \"₹\",\n  JPY: \"¥\",\n  VND: \"₫\",\n  CNY: \"CN¥\",\n  KRW: \"₩\",\n  RUB: \"₽\",\n  TRY: \"₺\",\n  NGN: \"₦\",\n  ARS: \"ARS\",\n  AUD: \"A$\",\n  CHF: \"CHF\",\n  GBP: \"£\",\n};\n\nexport const prettifyCurrency = (\n  value: number | bigint | string,\n  decimals = 2,\n  currency: Quote = \"USD\",\n  ignoreSmallValue = false,\n  ignoreMinus = true,\n  ignoreZero = false\n): string => {\n  let numValue = Number(value);\n  let minus = \"\";\n  let currencySuffix = \"\";\n\n  if (!ignoreMinus && numValue < 0) {\n    numValue = Math.abs(numValue);\n    minus = \"-\";\n  }\n\n  const currencySymbol = currencyMap[currency] ?? \"$\";\n\n  if (numValue === 0 || isNaN(numValue)) {\n    return ignoreZero\n      ? `<${currencySymbol}${LESS_THAN_ZERO}`\n      : `${currencySymbol}${ZERO}`;\n  }\n\n  if (numValue < 0.01 && ignoreSmallValue) {\n    return `<${currencySymbol}${LESS_THAN_ZERO}`;\n  }\n\n  if (numValue > 999999999) {\n    numValue /= 1000000000;\n    currencySuffix = \"B\";\n  } else if (numValue > 999999) {\n    numValue /= 1000000;\n    currencySuffix = \"M\";\n  }\n\n  const factor = Math.pow(10, decimals);\n  numValue = Math.floor(numValue * factor) / factor;\n\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: currency,\n    maximumFractionDigits: decimals,\n    currencyDisplay: \"symbol\",\n  });\n\n  const formattedValue = formatter\n    .format(numValue)\n    .replace(new RegExp(`${currency}\\\\s?`), currencySymbol);\n\n  return minus + formattedValue + currencySuffix;\n};\n", "const months: string[] = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const timestampParser = (\n  timestamp: string | Date,\n  type: \"descriptive\" | \"DD MMM YY\" | \"relative\" | \"YYYY-MM-DD\"\n): string => {\n  const _unix: Date = new Date(timestamp);\n\n  switch (type) {\n    case \"descriptive\": {\n      const _minutes = _unix.getMinutes();\n      const _hours = _unix.getHours();\n      const _seconds = _unix.getSeconds();\n      const _parsedSeconds: string = `${_seconds <= 9 ? \"0\" : \"\"}${_seconds}`;\n      const _parsedMinutes: string = `${_minutes <= 9 ? \"0\" : \"\"}${_minutes}`;\n      const _parsedHours: string = `${_hours <= 9 ? \"0\" : \"\"}${_hours}`;\n\n      return `${\n        months[_unix.getMonth()]\n      } ${_unix.getDate()} ${_unix.getFullYear()} at ${_parsedHours}:${_parsedMinutes}:${_parsedSeconds}`;\n    }\n\n    case \"DD MMM YY\": {\n      const day = _unix.getDate().toString().padStart(2, \"0\");\n      const month = months[_unix.getMonth()].substring(0, 3);\n      const year = _unix.getFullYear();\n      return `${day} ${month} ${year}`;\n    }\n\n    case \"relative\": {\n      const currentTime = new Date();\n      const unixTime = new Date(_unix);\n\n      const timeDifference = currentTime.getTime() - unixTime.getTime();\n\n      const secondsDifference = Math.floor(timeDifference / 1000);\n      const minutesDifference = Math.floor(secondsDifference / 60);\n      const hoursDifference = Math.floor(minutesDifference / 60);\n      const daysDifference = Math.floor(hoursDifference / 24);\n      const monthsDifference = Math.floor(daysDifference / 30);\n      const yearsDifference = Math.floor(daysDifference / 365);\n\n      if (yearsDifference > 0) {\n        return `${yearsDifference} year${yearsDifference > 1 ? \"s\" : \"\"} ago`;\n      } else if (monthsDifference > 0) {\n        return `${monthsDifference} month${monthsDifference > 1 ? \"s\" : \"\"} ago`;\n      } else if (daysDifference > 0) {\n        return `${daysDifference} day${daysDifference > 1 ? \"s\" : \"\"} ago`;\n      } else if (hoursDifference > 0) {\n        return `${hoursDifference} hour${hoursDifference > 1 ? \"s\" : \"\"} ago`;\n      } else if (minutesDifference > 0) {\n        return `${minutesDifference} minute${minutesDifference > 1 ? \"s\" : \"\"} ago`;\n      } else if (secondsDifference > 0) {\n        return `${secondsDifference} second${secondsDifference > 1 ? \"s\" : \"\"} ago`;\n      } else {\n        return `just now`;\n      }\n    }\n\n    case \"YYYY-MM-DD\": {\n      const offsetMinutes = _unix.getTimezoneOffset();\n      const offsetMilliseconds = offsetMinutes * 60 * 1000;\n      const utcTime = _unix.getTime() + offsetMilliseconds;\n      const _utc_unix: Date = new Date(utcTime);\n\n      const year = _utc_unix.getFullYear();\n      const month = String(_utc_unix.getMonth() + 1).padStart(2, \"0\");\n      const day = String(_utc_unix.getDate()).padStart(2, \"0\");\n\n      return `${year}-${month}-${day}`;\n    }\n\n    default: {\n      return _unix.toISOString();\n    }\n  }\n};\n", null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tool.types.js.map", null, null, null, null, null, "// src/cli/index.js\nimport { buildProject } from \"./build\";\nimport inquirer from \"inquirer\";\nimport { writeFileSync, readFileSync, mkdirSync, existsSync } from \"fs\";\nimport { join, resolve } from \"path\";\nimport dotenv from \"dotenv\";\nimport { generateFiles } from \"../generators\";\nimport ora from \"ora\";\nimport createCLIIntegration from \"./integration\";\nimport { buildProjectFiles, installDependencies } from \"./utils\";\nimport { handleDeploy } from \"./deploy\";\n\ndotenv.config();\n\n// Save the CLI configuration to a file\nfunction saveConfig(config: any) {\n  const configPath = join(process.cwd(), \".vanekit-config.json\");\n  writeFileSync(configPath, JSON.stringify(config, null, 2));\n}\n\n// Load the CLI configuration from a file\nfunction loadConfig() {\n  const configPath = join(process.cwd(), \".vanekit-config.json\");\n  if (existsSync(configPath)) {\n    try {\n      const config = JSON.parse(readFileSync(configPath, \"utf-8\"));\n      return config;\n    } catch (error) {\n      console.error(\"Failed to parse configuration file:\", error);\n    }\n  }\n  return undefined;\n}\n// Configure API keys\nasync function configureAPIKeys(config: any) {\n  // Check if API keys are already configured\n  if (config.apiKeys && config.apiKeys.openai) {\n    const { useExisting } = await inquirer.prompt([\n      {\n        type: \"confirm\",\n        name: \"useExisting\",\n        message: \"Use existing API keys?\",\n        default: true,\n      },\n    ]);\n\n    if (useExisting) return config.apiKeys;\n  }\n\n  console.log(\"\\n\uD83D\uDD11 API Key Configuration\");\n\n  const apiKeys = await inquirer.prompt([\n    {\n      type: \"password\",\n      name: \"openai\",\n      message: \"OpenAI API Key (for GPT models):\",\n      default: config.apiKeys?.openai || \"\",\n    },\n    {\n      type: \"password\",\n      name: \"anthropic\",\n      message: \"Anthropic API Key (for Claude models, optional):\",\n      default: config.apiKeys?.anthropic || \"\",\n    },\n  ]);\n\n  // Update config with new API keys\n  config.apiKeys = apiKeys;\n  saveConfig(config);\n\n  // Set environment variables for use in the current process\n  process.env.OPENAI_API_KEY = apiKeys.openai;\n  if (apiKeys.anthropic) {\n    process.env.ANTHROPIC_API_KEY = apiKeys.anthropic;\n  }\n\n  return apiKeys;\n}\n\n// Create a new Vane project\nasync function createProject() {\n  const { projectName } = await inquirer.prompt([\n    {\n      type: \"input\",\n      name: \"projectName\",\n      message: \"What would you like to name your project?\",\n      default: \"my-vane-project\",\n    },\n  ]);\n\n  const { projectDescription } = await inquirer.prompt([\n    {\n      type: \"input\",\n      name: \"projectDescription\",\n      message: \"Describe your project:\",\n      default: \"An AI agent system built with vane\",\n    },\n  ]);\n\n  // Normalize project name for path\n  const projectPath = resolve(projectName.toLowerCase().replace(/\\s+/g, \"-\"));\n\n  // Create project directory if it doesn't exist\n  if (!existsSync(projectPath)) {\n    mkdirSync(projectPath, { recursive: true });\n  }\n\n  // 1. Generate project files first\n  const spinner = ora(\"Generating project files...\").start();\n  try {\n    await generateFiles(projectPath, {\n      name: projectName,\n      description: projectDescription,\n    });\n    spinner.succeed(\"Project files generated successfully\");\n\n    // 2. Save configuration to the project directory\n    const config = {\n      projectName,\n      projectPath,\n      lastInteraction: new Date(),\n      savedConversation: [],\n    };\n\n    const configPath = join(projectPath, \".vanekit-config.json\");\n    writeFileSync(configPath, JSON.stringify(config, null, 2));\n    console.log(`Configuration saved to ${configPath}`);\n  } catch (error: any) {\n    spinner.fail(`Failed to set up project: ${error.message}`);\n    console.error(error);\n  }\n\n  console.log(`\n  \u2728 Project \"${projectName}\" created successfully!\n  \n  Next steps:\n    1. cd ${projectPath}\n    2. npm run dev\n  \n  To continue the conversation with Vane:\n    vanekit chat ${projectPath}  \n  `);\n}\n\n// Start the chat functionality with our vane CLI agent\nasync function startChat(config: any) {\n  console.log(`\n\uD83D\uDCAC Welcome to Vane Chat!\nYou're working on project: ${config.projectName}\n`);\n\n  // Normalize project ID for consistent use\n  const projectId = config.projectPath.split(\"/\").pop() || config.projectName;\n  console.log(`Using project ID: ${projectId}`);\n\n  // Ensure API keys are configured - we still need these for the agent\n  if (!config.apiKeys?.openai) {\n    console.log(\"\u26A0\uFE0F API keys not configured. Setting them up now.\");\n    await configureAPIKeys(config);\n  } else {\n    // Set environment variables for the current process\n    process.env.OPENAI_API_KEY = config.apiKeys.openai;\n    if (config.apiKeys.anthropic) {\n      process.env.ANTHROPIC_API_KEY = config.apiKeys.anthropic;\n    }\n  }\n\n  // Initialize memory from local config\n  if (!config.memory) {\n    config.memory = {\n      toolUsage: {},\n      agentUsage: {},\n      errors: [],\n      warnings: [],\n      conversation: [],\n      createdAt: new Date().toISOString(),\n    };\n  }\n\n  // Initialize CLI integration\n  const cliIntegration = createCLIIntegration(config);\n\n  // Save function - only saves to local config during development\n  const saveConversation = async () => {\n    // Update memory with current conversation from CLI integration\n    const conversation = cliIntegration.getConversation();\n    config.memory.conversation = conversation;\n    config.memory.lastSaved = new Date().toISOString();\n    config.lastInteraction = new Date();\n    // Save local config\n    saveConfig(config);\n  };\n\n  // Start conversation loop\n  let chatting = true;\n  while (chatting) {\n    const { message } = await inquirer.prompt([\n      {\n        type: \"input\",\n        name: \"message\",\n        message: \"\uD83D\uDC64 You:\",\n      },\n    ]);\n\n    // Handle direct commands first\n    if (message.toLowerCase() === \"exit\") {\n      // Save on exit\n      const spinner = ora(\"Saving conversation before exit...\").start();\n      await saveConversation();\n      spinner.succeed(\"Conversation saved\");\n      chatting = false;\n      continue;\n    }\n\n    if (message.toLowerCase() === \"help\") {\n      console.log(`\nAvailable commands:\n  exit - Exit the chat (auto-saves)\n  deploy - Deploy your website\n  save - Save the current conversation\n  clear - Clear the conversation history\n  generate <filename> - Generate a new file based on description\n  install - Install dependencies in the project\n  build - Build the project\n  api - Configure API keys\n  help - Show this help message\n`);\n      continue;\n    }\n\n    if (message.toLowerCase() === \"save\") {\n      const spinner = ora(\"Saving conversation...\").start();\n      await saveConversation();\n      spinner.succeed(\"Conversation saved\");\n      continue;\n    }\n\n    if (message.toLowerCase() === \"api\") {\n      await configureAPIKeys(config);\n      console.log(\"\u2705 API keys updated\");\n      continue;\n    }\n\n    if (message.toLowerCase() === \"clear\") {\n      // Reset the conversation history\n      config.savedConversation = [];\n      // Reinitialize the CLI integration\n      const cliIntegration = createCLIIntegration(config);\n      console.log(\"\uD83E\uDDF9 Conversation history cleared\");\n      continue;\n    }\n\n    if (message.toLowerCase() === \"install\") {\n      await installDependencies(config.projectPath);\n      continue;\n    }\n\n    if (\n      message.toLowerCase() === \"build\" ||\n      message.toLowerCase().match(/^build\\s+--[\\w-]+=?/)\n    ) {\n      await buildProjectFiles(message, config);\n      continue;\n    }\n\n    if (message.toLowerCase() === \"deploy\") {\n      await handleDeploy(config, projectId);\n      continue;\n    }\n\n    // For all other messages, use the CLI integration\n    try {\n      const response = await cliIntegration.processMessage(message);\n      console.log(`\uD83E\uDD16 Assistant: ${response}`);\n    } catch (error: any) {\n      console.error(\"Error processing message:\", error);\n      console.log(\n        `\uD83E\uDD16 Assistant: I encountered an error processing your request: ${error.message}`\n      );\n    }\n\n    // Auto-save after each exchange\n    await saveConversation().catch((err) =>\n      console.error(\"Failed to save conversation:\", err.message)\n    );\n  }\n\n  console.log(\"\uD83D\uDC4B Thanks for using Vanekit! Goodbye.\");\n}\n\n// Main CLI entry point\nasync function main() {\n  console.log(`\n  \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n  \u2551              VANE CLI                 \u2551\n  \u2551                                       \u2551\n  \u2551  Build, manage and deploy AI agents   \u2551\n  \u2551                                       \u2551\n  \u255A\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255D\n`);\n  const existingConfig = loadConfig();\n\n  if (existingConfig) {\n    console.log(`Found existing project: ${existingConfig.projectName}`);\n    const { action } = await inquirer.prompt([\n      {\n        type: \"list\",\n        name: \"action\",\n        message: \"What would you like to do?\",\n        choices: [\n          { name: \"Continue working on this project\", value: \"continue\" },\n          { name: \"Create a new project\", value: \"new\" },\n          { name: \"Build project for deployment\", value: \"build\" },\n          { name: \"Deploy project\", value: \"deploy\" },\n          { name: \"Install dependencies\", value: \"install\" },\n          { name: \"Exit\", value: \"exit\" },\n        ],\n      },\n    ]);\n\n    switch (action) {\n      case \"continue\":\n        await startChat(existingConfig);\n        break;\n\n      case \"new\":\n        await createProject();\n        break;\n\n      case \"install\":\n        await installDependencies(existingConfig.projectPath);\n        break;\n\n      case \"build\":\n        console.log(\"Starting build process...\");\n        const buildResult = await buildProject(existingConfig.projectPath, {\n          projectName: existingConfig.projectName,\n          skipDependencyPrompt: false,\n        });\n        if (buildResult.status === \"error\") {\n          console.error(`Build failed: ${buildResult.message}`);\n        }\n        break;\n\n      case \"deploy\":\n        await handleDeploy(existingConfig, existingConfig.projectName);\n        break;\n\n      case \"exit\":\n        console.log(\"\uD83D\uDC4B Goodbye!\");\n        process.exit(0);\n        break;\n    }\n  } else {\n    // No existing configuration, ask to create a new project\n    const { createNew } = await inquirer.prompt([\n      {\n        type: \"confirm\",\n        name: \"createNew\",\n        message: \"Would you like to create a new Vane project?\",\n        default: true,\n      },\n    ]);\n\n    if (createNew) {\n      await createProject();\n    } else {\n      console.log(\"\uD83D\uDC4B Goodbye!\");\n      process.exit(0);\n    }\n  }\n}\n\n// Export functions\nexport { createProject, startChat };\n\nmain().catch((error) => {\n  console.error(\"Fatal error:\", error);\n  process.exit(1);\n});\n", "// src/cli/build.ts\nimport fs from \"fs/promises\";\nimport path from \"path\";\nimport { existsSync, mkdirSync } from \"fs\";\nimport inquirer from \"inquirer\";\nimport ora from \"ora\";\nimport { execSync, spawn } from \"child_process\";\nimport {\n  executeCommand,\n  getPackageManager,\n  installDependencies,\n  logger,\n  toCamelCase,\n  withSpinner,\n} from \"./utils\";\n\n/**\n * Run npm scripts to build the project\n */\nasync function runProjectBuild(projectPath: string): Promise<boolean> {\n  const packageManager = getPackageManager();\n\n  if (!packageManager) {\n    logger.warn(\"No package manager found. Please build the project manually.\");\n    return false;\n  }\n\n  return executeCommand(packageManager, [\"run\", \"build\"], {\n    cwd: projectPath,\n    message: \"Building project...\",\n  });\n}\n\n// ======== File Processing Functions ========\n\n/**\n * Ensures the core agent-kit file exists and is properly copied\n */\nasync function ensureCoreFiles(\n  projectPath: string,\n  outputDir: string\n): Promise<boolean> {\n  return withSpinner(\"Ensuring core files exist...\", async () => {\n    try {\n      // Path to source and destination agent-kit files\n      const projectCorePath = path.join(projectPath, \"src\", \"core\");\n      const outputCorePath = path.join(outputDir, \"core\");\n      const cliCorePath = path.join(__dirname, \"..\", \"core\"); // CLI's core directory\n\n      // Create core directory in output if it doesn't exist\n      if (!existsSync(outputCorePath)) {\n        mkdirSync(outputCorePath, { recursive: true });\n      }\n\n      // Check if we need to copy the full agent-kit implementation\n      const projectAgentKitPath = path.join(projectCorePath, \"agent-kit.ts\");\n      const outputAgentKitPath = path.join(outputCorePath, \"agent-kit.js\");\n      const cliAgentKitPath = path.join(cliCorePath, \"agent-kit.js\");\n\n      // Log the paths we're checking (debug-level)\n      logger.debug(\"Checking core paths:\", {\n        projectCorePath,\n        outputCorePath,\n        cliCorePath,\n      });\n\n      let sourceFile = cliAgentKitPath;\n      let shouldCopy = true;\n\n      // First check if the output file already exists and has content\n      if (existsSync(outputAgentKitPath)) {\n        const outputContent = await fs.readFile(outputAgentKitPath, \"utf-8\");\n        if (outputContent.length > 1000) {\n          // Assuming a complete implementation is at least 1KB\n          logger.debug(\n            \"Full agent-kit.js implementation already exists in output\"\n          );\n          shouldCopy = false;\n        }\n      }\n\n      // If we need to copy, first check if the project has a complete implementation\n      if (shouldCopy && existsSync(projectAgentKitPath)) {\n        const projectContent = await fs.readFile(projectAgentKitPath, \"utf-8\");\n        if (projectContent.length > 1000) {\n          sourceFile = projectAgentKitPath;\n          logger.debug(\"Using project's agent-kit implementation\");\n        } else {\n          logger.debug(\n            \"Project has incomplete agent-kit.ts, using CLI's implementation\"\n          );\n        }\n      }\n\n      if (shouldCopy) {\n        if (existsSync(sourceFile)) {\n          await fs.copyFile(sourceFile, outputAgentKitPath);\n          logger.debug(\n            `Copied agent-kit from ${sourceFile} to ${outputAgentKitPath}`\n          );\n        } else {\n          logger.error(\n            `Could not find agent-kit implementation at ${sourceFile}`\n          );\n          logger.debug(\n            \"Available files in CLI core directory:\",\n            await fs.readdir(cliCorePath)\n          );\n          return false;\n        }\n      }\n\n      // Also copy any other necessary files like tool-registry\n      const toolRegistryFiles = [\"tool-registry.js\", \"tool-registry.d.ts\"];\n      for (const file of toolRegistryFiles) {\n        const sourcePath = path.join(cliCorePath, file);\n        const destPath = path.join(outputCorePath, file);\n\n        if (existsSync(sourcePath)) {\n          await fs.copyFile(sourcePath, destPath);\n          logger.debug(`Copied ${file} to output`);\n        }\n      }\n\n      return true;\n    } catch (error: any) {\n      logger.error(`Error ensuring core files: ${error.message}`);\n      logger.debug(\"Detailed error:\", error);\n      return false;\n    }\n  });\n}\n\n/**\n * Fixes import paths in the generated files\n */\nasync function fixImportPaths(outputDir: string): Promise<boolean> {\n  return withSpinner(\"Fixing import paths...\", async () => {\n    try {\n      // Get all JS files in the output directory\n      const findJsFiles = async (\n        dir: string,\n        fileList: string[] = []\n      ): Promise<string[]> => {\n        const files = await fs.readdir(dir, { withFileTypes: true });\n\n        for (const file of files) {\n          const filePath = path.join(dir, file.name);\n\n          if (file.isDirectory()) {\n            fileList = await findJsFiles(filePath, fileList);\n          } else if (file.name.endsWith(\".js\")) {\n            fileList.push(filePath);\n          }\n        }\n\n        return fileList;\n      };\n\n      const jsFiles = await findJsFiles(outputDir);\n      logger.debug(`Found ${jsFiles.length} JS files to fix`);\n\n      for (const filePath of jsFiles) {\n        let content = await fs.readFile(filePath, \"utf-8\");\n\n        // Fix paths with missing extensions\n        content = content.replace(\n          /from\\s+['\"]([^'\"]*\\/[^'\"]*?)['\"];/g,\n          (match, importPath) => {\n            if (importPath.startsWith(\".\") && !importPath.endsWith(\".js\")) {\n              return `from \"${importPath}.js\";`;\n            }\n            return match;\n          }\n        );\n\n        await fs.writeFile(filePath, content);\n      }\n\n      logger.debug(`Fixed import paths in ${jsFiles.length} files`);\n      return true;\n    } catch (error: any) {\n      logger.error(`Error fixing import paths: ${error.message}`);\n      return false;\n    }\n  });\n}\n\n/**\n * Scan project directories for agents and tools\n */\nasync function scanProject(projectPath: string): Promise<{\n  toolFiles: string[];\n  agentFiles: string[];\n}> {\n  return withSpinner(\"Scanning project files...\", async () => {\n    const toolsDir = path.join(projectPath, \"src/tools\");\n    const agentsDir = path.join(projectPath, \"src/agents\");\n\n    let toolFiles: string[] = [];\n    let agentFiles: string[] = [];\n\n    if (existsSync(toolsDir)) {\n      toolFiles = (await fs.readdir(toolsDir)).filter(\n        (file) =>\n          (file.endsWith(\".ts\") || file.endsWith(\".js\")) &&\n          file !== \"index.ts\" &&\n          file !== \"index.js\"\n      );\n    }\n\n    if (existsSync(agentsDir)) {\n      agentFiles = (await fs.readdir(agentsDir)).filter(\n        (file) =>\n          (file.endsWith(\".ts\") || file.endsWith(\".js\")) &&\n          file !== \"index.ts\" &&\n          file !== \"index.js\"\n      );\n    }\n\n    logger.debug(\n      `Found ${toolFiles.length} tools and ${agentFiles.length} agents`\n    );\n    return { toolFiles, agentFiles };\n  });\n}\n\n/**\n * Generate the main index file\n */\nasync function generateIndexFile(\n  projectPath: string,\n  options: BuildOptions,\n  toolFiles: string[],\n  agentFiles: string[]\n): Promise<void> {\n  return withSpinner(\"Generating index file...\", async () => {\n    let indexContent = `// Auto-generated index file for ${options.projectName}\\n`;\n    indexContent += `// Generated on ${new Date().toISOString()}\\n\\n`;\n    indexContent += `import AgentKit from \"./core/agent-kit.js\";\\n\\n`;\n\n    // Import all tools and agents\n    toolFiles.forEach((toolFile) => {\n      const toolName = path.basename(toolFile, path.extname(toolFile));\n      indexContent += `import \"./tools/${toolName}.js\";\\n`;\n    });\n\n    indexContent += `\\n`;\n\n    agentFiles.forEach((agentFile) => {\n      const agentName = path.basename(agentFile, path.extname(agentFile));\n      indexContent += `import \"./agents/${agentName}.js\";\\n`;\n    });\n\n    // Compile AgentKit configuration\n    indexContent += `\\n// Compile the AgentKit configuration\\n`;\n    indexContent += `const compiledKit = AgentKit.compile();\\n\\n`;\n\n    // Get the main agent if specified, otherwise use the first agent\n    let mainAgentName = options.mainAgent;\n    if (!mainAgentName && agentFiles.length > 0) {\n      mainAgentName = path.basename(agentFiles[0], path.extname(agentFiles[0]));\n    }\n\n    // Export all agents with proper naming\n    indexContent += `// Export individual agents\\n`;\n    agentFiles.forEach((agentFile) => {\n      const agentName = path.basename(agentFile, path.extname(agentFile));\n      const exportName = toCamelCase(agentName);\n      indexContent += `export const ${exportName} = compiledKit.agents[\"${agentName}\"];\\n`;\n    });\n\n    // Create an agents object with all available agents\n    if (agentFiles.length > 0) {\n      indexContent += `\\n// Create an agents object with all the agents\\n`;\n      indexContent += `const output = {\\n`;\n      agentFiles.forEach((agentFile) => {\n        const agentName = path.basename(agentFile, path.extname(agentFile));\n        const exportName = toCamelCase(agentName);\n        indexContent += `  ${exportName},\\n`;\n      });\n\n      // Add utility methods\n      indexContent += `  getAllAgents: () => compiledKit.agents,\\n`;\n      indexContent += `  getAllTools: () => compiledKit.tools,\\n`;\n      indexContent += `};\\n\\n`;\n\n      // Export the agents object as default\n      indexContent += `// Export the agents object as default\\n`;\n      indexContent += `export default output;\\n`;\n    } else {\n      // If there are no agents, export the compiled kit\n      indexContent += `\\n// Export compiled kit as default\\n`;\n      indexContent += `export default compiledKit;\\n`;\n    }\n\n    // Add usage examples in comments\n    indexContent += `\\n/*\nExample usage:\n\n// Using the default import (all agents)\nimport agents from \"./index.js\";\nconst response = await agents.${\n      agentFiles.length > 0\n        ? toCamelCase(path.basename(agentFiles[0], path.extname(agentFiles[0])))\n        : \"yourAgentName\"\n    }.generate({\n  messages: [{ role: 'user', content: 'Your message here' }]\n});\n\n// Using named exports for specific agents\nimport { ${agentFiles\n      .map((file) => toCamelCase(path.basename(file, path.extname(file))))\n      .join(\", \")} } from \"./index.js\";\nconst specificResponse = await ${\n      agentFiles.length > 0\n        ? toCamelCase(path.basename(agentFiles[0], path.extname(agentFiles[0])))\n        : \"yourAgentName\"\n    }.generate({\n  messages: [{ role: 'user', content: 'A message for this specific agent' }]\n});\n*/\\n`;\n\n    // Write the index file\n    await fs.writeFile(path.join(projectPath, \"src/index.ts\"), indexContent);\n  });\n}\n\n/**\n * Create distribution package.json\n */\nasync function createDistPackageJson(\n  outputDir: string,\n  options: BuildOptions\n): Promise<void> {\n  return withSpinner(\"Creating package.json for distribution...\", async () => {\n    const packageJson = {\n      name: options.projectName.toLowerCase().replace(/\\s+/g, \"-\"),\n      version: \"1.0.0\",\n      description: `AgentKit project: ${options.projectName}`,\n      type: options.format === \"esm\" ? \"module\" : \"commonjs\",\n      main: options.format === \"esm\" ? \"index.js\" : \"index.cjs\",\n      scripts: {\n        test: 'echo \"No tests specified\"',\n      },\n      dependencies: {\n        \"@covalenthq/ai-agent-sdk\": \"latest\",\n        zod: \"^3.22.4\",\n      },\n    };\n\n    await fs.writeFile(\n      path.join(outputDir, \"package.json\"),\n      JSON.stringify(packageJson, null, 2)\n    );\n  });\n}\n\n/**\n * Create a browser bundle with HTML example\n */\nasync function createBrowserBundle(\n  outputDir: string,\n  options: BuildOptions\n): Promise<void> {\n  return withSpinner(\"Creating browser bundle...\", async () => {\n    const htmlContent = `<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <title>${options.projectName}</title>\n  <style>\n    body { font-family: system-ui, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }\n    textarea { width: 100%; padding: 10px; font-family: inherit; }\n    button { padding: 8px 16px; background: #0066cc; color: white; border: none; border-radius: 4px; cursor: pointer; }\n    #response { white-space: pre-wrap; }\n  </style>\n</head>\n<body>\n  <h1>${options.projectName}</h1>\n  <div>\n    <textarea id=\"userInput\" rows=\"4\" placeholder=\"Enter your message here...\"></textarea>\n    <div style=\"margin-top: 10px;\">\n      <button id=\"sendBtn\">Send</button>\n    </div>\n  </div>\n  <div id=\"response\" style=\"margin-top: 20px; border: 1px solid #ccc; padding: 10px; min-height: 200px;\"></div>\n\n  <script type=\"module\">\n    import agent from './index.js';\n    \n    const sendBtn = document.getElementById('sendBtn');\n    const userInput = document.getElementById('userInput');\n    const responseDiv = document.getElementById('response');\n    \n    sendBtn.addEventListener('click', async () => {\n      const message = userInput.value;\n      if (!message) return;\n      \n      responseDiv.innerHTML = 'Thinking...';\n      \n      try {\n        const response = await agent.generate({\n          messages: [{ role: 'user', content: message }]\n        });\n        \n        responseDiv.innerHTML = response.content || response;\n      } catch (error) {\n        responseDiv.innerHTML = 'Error: ' + error.message;\n      }\n    });\n  </script>\n</body>\n</html>`;\n\n    await fs.writeFile(path.join(outputDir, \"index.html\"), htmlContent);\n  });\n}\n\n/**\n * Create README file\n */\nasync function createReadme(\n  outputDir: string,\n  options: BuildOptions,\n  toolFiles: string[],\n  agentFiles: string[]\n): Promise<void> {\n  return withSpinner(\"Creating README...\", async () => {\n    const readmeContent = `# ${options.projectName}\n\nThis is an AgentKit project compiled for deployment.\n\n## Usage\n\n\\`\\`\\`javascript\n${\n  options.format === \"esm\"\n    ? `import agent from './${options.outputDir}/index.js';`\n    : `const agent = require('./${options.outputDir}/index');`\n}\n\nconst response = await agent.generate({\n  messages: [{ role: 'user', content: 'Your message here' }]\n});\n\nconsole.log(response);\n\\`\\`\\`\n\n## Available Agents\n\n${agentFiles\n  .map((file) => {\n    const agentName = path.basename(file, path.extname(file));\n    return `- ${agentName}\\n`;\n  })\n  .join(\"\")}\n\n## Available Tools\n\n${toolFiles\n  .map((file) => {\n    const toolName = path.basename(file, path.extname(file));\n    return `- ${toolName}\\n`;\n  })\n  .join(\"\")}\n`;\n\n    await fs.writeFile(path.join(outputDir, \"README.md\"), readmeContent);\n  });\n}\n\n/**\n * Generate usage examples for the console output\n */\nfunction generateUsageExamples(\n  options: BuildOptions,\n  agentFiles: string[]\n): string {\n  let usageExamples = \"\";\n\n  // If we have agents, show examples using the agents object\n  if (agentFiles.length > 0) {\n    const firstAgentName = path.basename(\n      agentFiles[0],\n      path.extname(agentFiles[0])\n    );\n    const firstAgentExportName = toCamelCase(firstAgentName);\n    const agentExports = agentFiles\n      .map((file) => toCamelCase(path.basename(file, path.extname(file))))\n      .join(\", \");\n\n    usageExamples += `\n// Using the agents object (default export):\n${\n  options.format === \"esm\"\n    ? `import agents from './${options.outputDir}/index.js';`\n    : `const agents = require('./${options.outputDir}/index');`\n}\n\nconst response = await agents.${firstAgentExportName}.generate({\n  messages: [{ role: 'user', content: 'Your message here' }]\n});\nconsole.log(response.content);\n\n`;\n\n    // Always show named exports example\n    usageExamples += `\n// Using named exports for specific agents:\n${\n  options.format === \"esm\"\n    ? `import { ${agentExports} } from './${options.outputDir}/index.js';`\n    : `const { ${agentExports} } = require('./${options.outputDir}/index');`\n}\n\nconst specificResponse = await ${firstAgentExportName}.generate({\n  messages: [{ role: 'user', content: 'A message for a specific agent' }]\n});\n`;\n  } else {\n    // No agents - show basic import\n    usageExamples += `\n// Import the compiled kit:\n${\n  options.format === \"esm\"\n    ? `import compiledKit from './${options.outputDir}/index.js';`\n    : `const compiledKit = require('./${options.outputDir}/index');`\n}\n\n// No agents were found, so you'll need to create them after importing.\n`;\n  }\n\n  return usageExamples;\n}\n\n/**\n * Collect build options from command line or prompt\n */\nasync function collectBuildOptions(\n  projectPath: string,\n  options: Partial<BuildOptions>\n): Promise<BuildOptions> {\n  // Get user input for build options if not provided\n  if (!options.outputDir || !options.format || !options.projectName) {\n    const answers = await inquirer.prompt([\n      {\n        type: \"input\",\n        name: \"projectName\",\n        message: \"Project name:\",\n        default: path.basename(projectPath),\n        when: !options.projectName,\n      },\n      {\n        type: \"input\",\n        name: \"outputDir\",\n        message: \"Output directory:\",\n        default: \"dist\",\n        when: !options.outputDir,\n      },\n      {\n        type: \"list\",\n        name: \"format\",\n        message: \"Output format:\",\n        choices: [\n          { name: \"ESM (modern JavaScript modules)\", value: \"esm\" },\n          { name: \"CommonJS (Node.js require)\", value: \"cjs\" },\n          { name: \"Browser (web bundle)\", value: \"browser\" },\n        ],\n        default: \"esm\",\n        when: !options.format,\n      },\n      {\n        type: \"input\",\n        name: \"mainAgent\",\n        message: \"Main agent to export (leave empty to export all):\",\n        when: !options.mainAgent,\n      },\n    ]);\n\n    // Merge provided options with answers\n    options = { ...options, ...answers } as BuildOptions;\n  }\n\n  // Validate output format\n  if (![\"esm\", \"cjs\", \"browser\"].includes(options.format!)) {\n    throw new Error(`Invalid output format: ${options.format}`);\n  }\n\n  return options as BuildOptions;\n}\n\n// ======== Types ========\n\n/**\n * Build options type\n */\ninterface BuildOptions {\n  projectName: string;\n  outputDir: string;\n  format: \"esm\" | \"cjs\" | \"browser\";\n  mainAgent?: string;\n  skipDependencyPrompt?: boolean;\n}\n\n/**\n * Build result type\n */\ninterface BuildResult {\n  status: \"success\" | \"error\";\n  outputDir?: string;\n  format?: string;\n  projectName?: string;\n  agents?: string[];\n  tools?: string[];\n  message?: string;\n}\n\n// ======== Main Build Function ========\n\n/**\n * Build command for compiling and exporting an AgentKit project\n */\nexport async function buildProject(\n  projectPath: string,\n  inputOptions: Partial<BuildOptions> = {}\n): Promise<BuildResult> {\n  console.log(`\n  \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n  \u2551         AgentKit Build Tool         \u2551\n  \u2551                                     \u2551\n  \u2551  Compile and export your AI agents  \u2551\n  \u255A\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255D\n  `);\n\n  try {\n    // Resolve project path\n    projectPath = path.resolve(projectPath);\n    logger.info(\"Project path:\", projectPath);\n\n    if (!existsSync(projectPath)) {\n      throw new Error(`Project directory '${projectPath}' does not exist`);\n    }\n\n    // Check if package.json exists and install dependencies if needed\n    const packageJsonPath = path.join(projectPath, \"package.json\");\n    if (existsSync(packageJsonPath)) {\n      logger.debug(\"Found package.json:\", packageJsonPath);\n\n      const { installDeps } = await inquirer.prompt([\n        {\n          type: \"confirm\",\n          name: \"installDeps\",\n          message:\n            \"Would you like to install/update dependencies before building?\",\n          default: false,\n          when: !inputOptions.skipDependencyPrompt,\n        },\n      ]);\n\n      if (installDeps) {\n        const installed = await installDependencies(projectPath);\n        if (!installed) {\n          logger.warn(\n            \"Could not install dependencies. Continuing with build...\"\n          );\n        }\n      }\n    } else {\n      logger.warn(\"No package.json found in project directory\");\n    }\n\n    // Collect build options\n    const options = await collectBuildOptions(projectPath, inputOptions);\n\n    // Create output directory\n    const outputDir = path.resolve(projectPath, options.outputDir);\n    if (!existsSync(outputDir)) {\n      await fs.mkdir(outputDir, { recursive: true });\n    }\n\n    // 1. Scan for tools and agents\n    const { toolFiles, agentFiles } = await scanProject(projectPath);\n\n    // 2. Generate index file\n    await generateIndexFile(projectPath, options, toolFiles, agentFiles);\n\n    // 3. Create package.json for distribution\n    await createDistPackageJson(outputDir, options);\n\n    // 4. Run the project's build script first if available\n    let projectBuildSuccess = true;\n    const projectPackageJsonPath = path.join(projectPath, \"package.json\");\n\n    if (existsSync(projectPackageJsonPath)) {\n      try {\n        const packageJsonContent = await fs.readFile(\n          projectPackageJsonPath,\n          \"utf-8\"\n        );\n        const packageData = JSON.parse(packageJsonContent);\n\n        if (packageData.scripts && packageData.scripts.build) {\n          projectBuildSuccess = await runProjectBuild(projectPath);\n\n          if (!projectBuildSuccess) {\n            logger.warn(\n              \"Project build script failed, attempting to continue with TypeScript compilation\"\n            );\n          }\n        }\n      } catch (error) {\n        logger.warn(\n          \"Could not read package.json, skipping project build script\"\n        );\n      }\n    }\n\n    // 5. Run TypeScript compiler if project build didn't succeed or doesn't exist\n    if (!projectBuildSuccess) {\n      await withSpinner(\"Running TypeScript compiler...\", async () => {\n        try {\n          // Run tsc\n          execSync(`npx tsc --outDir ${options.outputDir}`, {\n            cwd: projectPath,\n            stdio: \"pipe\",\n          });\n          return true;\n        } catch (error: any) {\n          logger.error(`TypeScript compilation failed: ${error.message}`);\n          logger.debug(\n            \"TypeScript compiler output:\",\n            error.stdout?.toString() || \"No output\"\n          );\n          logger.info(\"Trying to continue by ensuring core files...\");\n          return false;\n        }\n      });\n    }\n\n    // 6. Ensure core files exist (agent-kit.js, etc.)\n    const coreFilesSuccess = await ensureCoreFiles(projectPath, outputDir);\n    if (!coreFilesSuccess) {\n      logger.warn(\"Warning: Failed to ensure core files\");\n    }\n\n    // 7. Fix import paths in compiled files\n    const fixImportsSuccess = await fixImportPaths(outputDir);\n    if (!fixImportsSuccess) {\n      logger.warn(\"Warning: Failed to fix import paths\");\n    }\n\n    // 8. Generate browser bundle if requested\n    if (options.format === \"browser\") {\n      await createBrowserBundle(outputDir, options);\n    }\n\n    // 9. Create README\n    await createReadme(outputDir, options, toolFiles, agentFiles);\n\n    // 10. Generate usage examples for the console output\n    const usageExamples = generateUsageExamples(options, agentFiles);\n\n    // Output success message\n    console.log(`\n\u2705 Build completed successfully!\n\nYour compiled project is available in: ${outputDir}\n\n## Usage Examples:\n${usageExamples}\n`);\n\n    return {\n      status: \"success\",\n      outputDir,\n      format: options.format,\n      projectName: options.projectName,\n      agents: agentFiles.map((file) => path.basename(file, path.extname(file))),\n      tools: toolFiles.map((file) => path.basename(file, path.extname(file))),\n    };\n  } catch (error: any) {\n    logger.error(\"Build failed:\", error.message);\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n}\n", "/**\n * Helper function to check if npm or another package manager is installed\n */\n\nimport { execSync, spawn } from \"child_process\";\nimport ora from \"ora\";\nimport { buildProject } from \"../build\";\n\nexport function getPackageManager() {\n  try {\n    // Check for pnpm first (fastest)\n    execSync(\"pnpm --version\", { stdio: \"ignore\" });\n    return \"pnpm\";\n  } catch (e) {\n    try {\n      // Then yarn\n      execSync(\"yarn --version\", { stdio: \"ignore\" });\n      return \"yarn\";\n    } catch (e) {\n      try {\n        // Then npm\n        execSync(\"npm --version\", { stdio: \"ignore\" });\n        return \"npm\";\n      } catch (e) {\n        return undefined;\n      }\n    }\n  }\n}\n\n/**\n * Install dependencies in the project directory\n */\nexport async function installDependencies(projectPath: any) {\n  const packageManager = getPackageManager();\n\n  if (!packageManager) {\n    console.warn(\n      \"\u26A0\uFE0F No package manager (npm, yarn, pnpm) found. Please install dependencies manually.\"\n    );\n    return false;\n  }\n\n  return new Promise((resolve) => {\n    const spinner = ora(\n      `Installing dependencies with ${packageManager}...`\n    ).start();\n\n    const installCommand = packageManager === \"yarn\" ? \"add\" : \"install\";\n    const installProcess = spawn(packageManager, [installCommand], {\n      cwd: projectPath,\n      stdio: \"pipe\",\n    });\n\n    installProcess.on(\"close\", (code) => {\n      if (code === 0) {\n        spinner.succeed(\n          `Dependencies installed successfully with ${packageManager}`\n        );\n        resolve(true);\n      } else {\n        spinner.fail(`Failed to install dependencies (exit code: ${code})`);\n        console.log(\n          `Please run '${packageManager} install' in the project directory manually.`\n        );\n        resolve(false);\n      }\n    });\n\n    // Handle potential errors\n    installProcess.on(\"error\", (err) => {\n      spinner.fail(`Error installing dependencies: ${err.message}`);\n      console.log(\n        `Please run '${packageManager} install' in the project directory manually.`\n      );\n      resolve(false);\n    });\n  });\n}\n\n/**\n * Build the project\n */\nexport async function buildProjectFiles(message: any, config: any) {\n  const args = message.split(\" \");\n  const options: any = {\n    projectName: config.projectName,\n    skipDependencyPrompt: true, // Skip dependency prompt in chat mode by default\n  };\n\n  // Parse options if provided\n  if (args.length > 1) {\n    if (args[1] === \"--help\" || args[1] === \"-h\") {\n      console.log(`\n  Build command options:\n    build                       - Build with interactive prompts\n    build --format=esm          - Specify output format (esm, cjs, browser)\n    build --output=dist         - Specify output directory\n    build --agent=AgentName     - Specify main agent to export as default\n    build --deps                - Prompt to install dependencies\n    build --no-deps             - Skip dependency installation prompt\n        `);\n      return;\n    }\n\n    // Parse command line args\n    args.slice(1).forEach((arg: string) => {\n      if (arg.startsWith(\"--format=\")) {\n        options.format = arg.split(\"=\")[1];\n      } else if (arg.startsWith(\"--output=\")) {\n        options.outputDir = arg.split(\"=\")[1];\n      } else if (arg.startsWith(\"--agent=\")) {\n        options.mainAgent = arg.split(\"=\")[1];\n      } else if (arg === \"--deps\") {\n        options.skipDependencyPrompt = false;\n      } else if (arg === \"--no-deps\") {\n        options.skipDependencyPrompt = true;\n      }\n    });\n  }\n\n  // Use full path\n  const buildResult = await buildProject(config.projectPath, options);\n  if (buildResult.status === \"error\") {\n    console.log(`\uD83E\uDD16 Assistant: Build failed: ${buildResult.message}`);\n  } else {\n    console.log(\n      `\uD83E\uDD16 Assistant: Build completed successfully! Your compiled project is available in: ${buildResult.outputDir}`\n    );\n  }\n}\n\n/**\n * Convert string to camelCase\n */\nexport function toCamelCase(str: string): string {\n  return str\n    .replace(/\\s+(.)/g, (_, char) => char.toUpperCase())\n    .replace(/\\s/g, \"\")\n    .replace(/^(.)/, (_, char) => char.toLowerCase())\n    .replace(/[^a-zA-Z0-9_]/g, \"\");\n}\n\n/**\n * Logger with configurable verbosity\n */\nexport const logger = {\n  debug: (message: string, ...args: any[]) => {\n    if (process.env.AGENT_KIT_DEBUG === \"true\") {\n      console.log(`[DEBUG] ${message}`, ...args);\n    }\n  },\n  info: (message: string, ...args: any[]) => console.log(message, ...args),\n  warn: (message: string, ...args: any[]) =>\n    console.warn(`\u26A0\uFE0F ${message}`, ...args),\n  error: (message: string, ...args: any[]) =>\n    console.error(`\u274C ${message}`, ...args),\n};\n\n/**\n * Execute a task with a spinner\n */\nexport async function withSpinner<T>(\n  message: string,\n  task: () => Promise<T>\n): Promise<T> {\n  const spinner = ora(message).start();\n  try {\n    const result = await task();\n    spinner.succeed();\n    return result;\n  } catch (error: any) {\n    spinner.fail(`${message} failed: ${error.message}`);\n    throw error;\n  }\n}\n\n/**\n * Execute a command with a Promise interface\n */\nexport function executeCommand(\n  command: string,\n  args: string[],\n  options: { cwd: string; message: string }\n): Promise<boolean> {\n  return new Promise((resolve) => {\n    const spinner = ora(options.message).start();\n\n    const process = spawn(command, args, {\n      cwd: options.cwd,\n      stdio: \"pipe\",\n    });\n\n    process.on(\"close\", (code) => {\n      if (code === 0) {\n        spinner.succeed(`${options.message} completed successfully`);\n        resolve(true);\n      } else {\n        spinner.fail(`${options.message} failed (exit code: ${code})`);\n        resolve(false);\n      }\n    });\n\n    process.on(\"error\", (err) => {\n      spinner.fail(`${options.message} error: ${err.message}`);\n      resolve(false);\n    });\n  });\n}\n", "//generators/index.ts\nimport { writeFileSync, mkdirSync, existsSync } from \"fs\";\nimport { join } from \"path\";\n\ninterface ProjectOptions {\n  name: string;\n  description: string;\n}\n\n/**\n * Ensures a directory exists, creating it if needed\n */\nfunction ensureDir(dir: string): void {\n  if (!existsSync(dir)) {\n    mkdirSync(dir, { recursive: true });\n  }\n}\n\n/**\n * Creates a file with the given content\n */\nfunction createFile(path: string, content: string): void {\n  writeFileSync(path, content);\n}\n\n/**\n * Generates the package.json file\n */\nfunction generatePackageJson(\n  projectPath: string,\n  options: ProjectOptions\n): void {\n  const packageJson = {\n    name: options.name.toLowerCase().replace(/\\s+/g, \"-\"),\n    version: \"0.1.0\",\n    description: options.description,\n    main: \"dist/index.js\",\n    type: \"module\",\n    scripts: {\n      build: \"tsc\",\n      dev: \"ts-node src/index.ts\",\n      start: \"node dist/index.js\",\n      test: \"vitest run\",\n      \"test:watch\": \"vitest\",\n    },\n    dependencies: {\n      \"@covalenthq/ai-agent-sdk\": \"^0.3.0\",\n      ai: \"^2.2.30\",\n      dotenv: \"^16.3.1\",\n      zod: \"^3.22.4\",\n    },\n    devDependencies: {\n      \"@types/node\": \"^20.10.0\",\n      typescript: \"^5.3.3\",\n      \"ts-node\": \"^10.9.2\",\n      vitest: \"^1.2.1\",\n    },\n    engines: {\n      node: \">=18.0.0\",\n    },\n    license: \"MIT\",\n  };\n\n  createFile(\n    join(projectPath, \"package.json\"),\n    JSON.stringify(packageJson, null, 2)\n  );\n}\n\n/**\n * Generates the tsconfig.json file\n */\nfunction generateTsConfig(projectPath: string): void {\n  const tsConfig = {\n    compilerOptions: {\n      target: \"ES2020\",\n      module: \"NodeNext\",\n      moduleResolution: \"NodeNext\",\n      esModuleInterop: true,\n      strict: true,\n      skipLibCheck: true,\n      outDir: \"dist\",\n      declaration: true,\n      sourceMap: true,\n    },\n    include: [\"src/**/*\"],\n    exclude: [\"node_modules\", \"dist\"],\n  };\n\n  createFile(\n    join(projectPath, \"tsconfig.json\"),\n    JSON.stringify(tsConfig, null, 2)\n  );\n}\n\n/**\n * Generates the .env file\n */\nfunction generateEnvFile(projectPath: string, options: ProjectOptions): void {\n  let envContent = `# Environment Variables\nNODE_ENV=development\n`;\n  createFile(join(projectPath, \".env.example\"), envContent);\n}\n\n/**\n * Generates the .gitignore file\n */\nfunction generateGitignore(projectPath: string): void {\n  const gitignore = `# Dependencies\nnode_modules\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Build output\ndist\nbuild\n\n# Environment variables\n.env\n.env.local\n.env.*.local\n\n# Editor directories and files\n.idea\n.vscode\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw*\n\n# OS files\n.DS_Store\nThumbs.db\n`;\n\n  createFile(join(projectPath, \".gitignore\"), gitignore);\n}\n\n/**\n * Generates the main index.ts file\n */\nfunction generateIndexFile(projectPath: string, options: ProjectOptions): void {\n  const indexContent = `// src/index.ts\nimport dotenv from 'dotenv';\nimport { AgentKit } from './core/agent-kit.js';\n\n// Load environment variables\ndotenv.config();\n\nasync function main() {\n  console.log('\uD83D\uDE80 Starting ${options.name}...');\n\n  // Initialize AgentKit\n  const agentKit = new AgentKit();\n  \n  // TODO: Define your tools, and agents here\n  // Example tool\n  agentKit.tool('Calculator', {\n    description: 'Performs mathematical calculations',\n    parameters: {\n      expression: { type: 'string', description: 'The mathematical expression to evaluate' }\n    },\n    execute: async ({ expression }) => {\n      try {\n        // Simple evaluation (for demonstration purposes only)\n        // In a real application, use a safer evaluation method\n        const result = eval(expression);\n        return \\`Result: \\${result}\\`;\n      } catch (error) {\n        return \\`Error: \\${error}\\`;\n      }\n    }\n  });\n  \n  // Example agent\n  agentKit.agent('MathAssistant', {\n    description: 'Helps solve mathematical problems',\n    model: 'gpt-4o',\n    instructions: [\n      'Analyze mathematical problems',\n      'Use the Calculator tool to compute results'\n    ],\n    tools: ['Calculator']\n  });\n  \n  \n  // Compile the configuration\n  const compiled = agentKit.compile();\n  \n  console.log('AgentKit configuration compiled successfully');\n  console.log(\\`Available agents: \\${Object.keys(compiled.agents).join(', ')}\\`);\n  \n  // Example usage\n  // const result = (await compiled.agents[\"MathAssistant\"]).generate([{type: 'user', content: 'Calculate the area of a circle with radius 5cm'}]);\n  // console.log('Result:', result);\n}\n\n// Run the main function\nmain().catch(error => {\n  console.error('\u274C Error:', error);\n  process.exit(1);\n});\n`;\n\n  ensureDir(join(projectPath, \"src\"));\n  createFile(join(projectPath, \"src\", \"index.ts\"), indexContent);\n}\n\n/**\n * Generates the core AgentKit implementation\n */\nfunction generateAgentKitCore(projectPath: string): void {\n  const coreDir = join(projectPath, \"src\", \"core\");\n  ensureDir(coreDir);\n\n  // Full implementation of agent-kit.ts, simplified version\n  const agentKitContent = `// src/core/agent-kit.ts\nimport { z, ZodObject, ZodTypeAny } from \"zod\";\nimport {\n  Agent,\n  Tool as SDKTool,\n  type ModelProvider,\n} from \"@covalenthq/ai-agent-sdk\";\n\ntype ModelType = \"gpt-4o\" | \"gpt-4-turbo\" | \"claude-3-opus\" | \"claude-3-sonnet\";\n\ntype ParamType = \"string\" | \"number\" | \"boolean\" | \"array\" | \"object\";\n\ninterface ParameterDefinition {\n  type: ParamType;\n  description?: string;\n  items?: {\n    type: string;\n  };\n}\n\ninterface ToolConfig {\n  description: string;\n  parameters: Record<string, ParameterDefinition>;\n  execute: (params: Record<string, any>) => Promise<unknown>;\n  provider?: string;\n}\n\ninterface AgentConfig {\n  description: string;\n  model: ModelType;\n  instructions?: string[];\n  tools?: string[];\n  temperature?: number;\n}\n\ninterface ToolDefinition extends ToolConfig {\n  name: string;\n  zodSchema: ZodObject<any>;\n  dependencies?: string[]; // Optional tool dependencies\n}\n\ninterface AgentDefinition extends AgentConfig {\n  name: string;\n}\n\n// Memory structure for tracking agent and tool usage\ninterface MemoryState {\n  toolUsage: Record<\n    string,\n    {\n      agents: string[];\n      usageCount: number;\n      lastUsed: Date;\n    }\n  >;\n  agentUsage: Record<\n    string,\n    {\n      usageCount: number;\n      lastUsed: Date;\n    }\n  >;\n  errors: string[];\n  warnings: string[];\n  conversation?: any[];\n}\n\n// Default usage structure for when an item isn't found in memory\ninterface DefaultToolUsage {\n  agents: string[];\n  usageCount: number;\n  lastUsed: null;\n}\n\ninterface DefaultAgentUsage {\n  usageCount: number;\n  lastUsed: null;\n}\n\ninterface CompiledResult {\n  tools: Record<string, SDKTool<any>>;\n  agents: Record<string, Agent>;\n  memory: MemoryState;\n}\n\nexport class AgentKit {\n  private tools: Record<string, ToolDefinition> = {};\n  private agents: Record<string, AgentDefinition> = {};\n  private errors: string[] = [];\n  private warnings: string[] = [];\n  private memory: MemoryState = {\n    toolUsage: {},\n    agentUsage: {},\n    errors: [],\n    warnings: [],\n  };\n  private modelMap: Record<ModelType, ModelProvider> = {\n    \"gpt-4o\": { provider: \"openai\", id: \"gpt-4o\" },\n    \"gpt-4-turbo\": { provider: \"openai\", id: \"gpt-4-turbo\" },\n    \"claude-3-opus\": { provider: \"anthropic\", id: \"claude-3-opus-20240229\" },\n    \"claude-3-sonnet\": {\n      provider: \"anthropic\",\n      id: \"claude-3-sonnet-20240229\",\n    },\n  };\n\n  constructor() {\n    // Initialize empty memory state\n    this.resetMemory();\n  }\n\n  // Memory management\n  private resetMemory(): void {\n    this.memory = {\n      toolUsage: {},\n      agentUsage: {},\n      errors: [],\n      warnings: [],\n    };\n  }\n\n  private trackToolUsage(toolName: string, agentName?: string): void {\n    if (!this.memory.toolUsage[toolName]) {\n      this.memory.toolUsage[toolName] = {\n        agents: [],\n        usageCount: 0,\n        lastUsed: new Date(),\n      };\n    }\n\n    this.memory.toolUsage[toolName].usageCount++;\n    this.memory.toolUsage[toolName].lastUsed = new Date();\n\n    if (\n      agentName &&\n      !this.memory.toolUsage[toolName].agents.includes(agentName)\n    ) {\n      this.memory.toolUsage[toolName].agents.push(agentName);\n    }\n  }\n\n  private trackAgentUsage(agentName: string): void {\n    if (!this.memory.agentUsage[agentName]) {\n      this.memory.agentUsage[agentName] = {\n        usageCount: 0,\n        lastUsed: new Date(),\n      };\n    }\n\n    this.memory.agentUsage[agentName].usageCount++;\n    this.memory.agentUsage[agentName].lastUsed = new Date();\n  }\n\n  // Tool definition and validation\n  public tool(name: string, config: ToolConfig): AgentKit {\n    try {\n      // Check if tool already exists\n      if (this.tools[name]) {\n        throw new Error(\\`Tool '\\${name}' already exists\\`);\n      }\n\n      // Validate parameters against Zod schema\n      const paramSchema: Record<string, ZodTypeAny> = {};\n      for (const [key, param] of Object.entries(config.parameters)) {\n        switch (param.type) {\n          case \"string\":\n            paramSchema[key] = z.string().describe(param.description || \"\");\n            break;\n          case \"number\":\n            paramSchema[key] = z.number().describe(param.description || \"\");\n            break;\n          case \"boolean\":\n            paramSchema[key] = z.boolean().describe(param.description || \"\");\n            break;\n          case \"array\":\n            paramSchema[key] = z\n              .array(z.any())\n              .describe(param.description || \"\");\n            break;\n          case \"object\":\n            paramSchema[key] = z\n              .record(z.any())\n              .describe(param.description || \"\");\n            break;\n          default:\n            throw new Error(\\`Unsupported parameter type: \\${param.type}\\`);\n        }\n      }\n\n      // Validate execute function\n      if (typeof config.execute !== \"function\") {\n        throw new Error(\"Tool execute must be a function\");\n      }\n\n      // Create mock parameters for validation\n      const mockParams: Record<string, any> = {};\n      for (const [key, param] of Object.entries(config.parameters)) {\n        switch (param.type) {\n          case \"string\":\n            mockParams[key] = \"test\";\n            break;\n          case \"number\":\n            mockParams[key] = 0;\n            break;\n          case \"boolean\":\n            mockParams[key] = false;\n            break;\n          case \"array\":\n            mockParams[key] = [];\n            break;\n          case \"object\":\n            mockParams[key] = {};\n            break;\n        }\n      }\n\n      // Store the tool definition\n      this.tools[name] = {\n        ...config,\n        name,\n        zodSchema: z.object(paramSchema).passthrough(),\n      };\n\n      // Track the tool creation in memory\n      this.trackToolUsage(name);\n\n      return this;\n    } catch (error) {\n      const errorMessage = \\`Error in tool '\\${name}': \\${\n        (error as Error).message\n      }\\`;\n      this.errors.push(errorMessage);\n      this.memory.errors.push(errorMessage);\n      return this;\n    }\n  }\n\n  // Agent definition and validation\n  public agent(name: string, config: AgentConfig): AgentKit {\n    try {\n      // Check if agent already exists\n      if (this.agents[name]) {\n        throw new Error(\\`Agent '\\${name}' already exists\\`);\n      }\n\n      // Validate model\n      if (!config.model || !this.modelMap[config.model]) {\n        throw new Error(\\`Invalid model: \\${config.model}\\`);\n      }\n\n      // Validate tools if present and track usage\n      if (config.tools && config.tools.length > 0) {\n        for (const toolName of config.tools) {\n          if (!this.tools[toolName]) {\n            throw new Error(\n              \\`Tool '\\${toolName}' not defined. Define it before adding to agent.\\`\n            );\n          }\n          // Track tool usage by this agent\n          this.trackToolUsage(toolName, name);\n        }\n      }\n\n      // Store the agent definition\n      this.agents[name] = {\n        ...config,\n        name,\n      };\n\n      // Track the agent creation in memory\n      this.trackAgentUsage(name);\n\n      return this;\n    } catch (error) {\n      const errorMessage = \\`Error in agent '\\${name}': \\${\n        (error as Error).message\n      }\\`;\n      this.errors.push(errorMessage);\n      this.memory.errors.push(errorMessage);\n      return this;\n    }\n  }\n\n  // Validation functions\n  public validateToolDependencies(): boolean {\n    let isValid = true;\n\n    // Check for circular dependencies between tools\n    const visited: Record<string, boolean> = {};\n    const recursionStack: Record<string, boolean> = {};\n\n    const checkCircular = (toolName: string, path: string[] = []): boolean => {\n      if (!visited[toolName]) {\n        visited[toolName] = true;\n        recursionStack[toolName] = true;\n\n        const tool = this.tools[toolName];\n        if (tool.dependencies) {\n          for (const dep of tool.dependencies) {\n            if (!visited[dep] && checkCircular(dep, [...path, toolName])) {\n              return true;\n            } else if (recursionStack[dep]) {\n              const cycle = [...path, toolName, dep].join(\" -> \");\n              const warningMsg = \\`Circular dependency detected: \\${cycle}\\`;\n              this.warnings.push(warningMsg);\n              this.memory.warnings.push(warningMsg);\n              isValid = false;\n              return true;\n            }\n          }\n        }\n\n        recursionStack[toolName] = false;\n      }\n      return false;\n    };\n\n    Object.keys(this.tools).forEach((toolName) => {\n      if (!visited[toolName]) {\n        checkCircular(toolName);\n      }\n    });\n\n    return isValid;\n  }\n\n  public validateHierarchy(): boolean {\n    let isValid = true;\n\n    // Check that all tools used by agents exist\n    Object.entries(this.agents).forEach(([agentName, agent]) => {\n      if (agent.tools) {\n        for (const toolName of agent.tools) {\n          if (!this.tools[toolName]) {\n            const errorMsg = \\`Agent '\\${agentName}' references non-existent tool '\\${toolName}'\\`;\n            this.errors.push(errorMsg);\n            this.memory.errors.push(errorMsg);\n            isValid = false;\n          }\n        }\n      }\n    });\n\n    return isValid;\n  }\n\n  // Utility functions\n  public getMemory(): MemoryState {\n    return { ...this.memory };\n  }\n\n  public getErrors(): string[] {\n    return [...this.errors];\n  }\n\n  public getWarnings(): string[] {\n    return [...this.warnings];\n  }\n\n  public getToolsInfo(): Record<\n    string,\n    {\n      definition: ToolDefinition;\n      usage: MemoryState[\"toolUsage\"][string] | DefaultToolUsage;\n    }\n  > {\n    const result: Record<\n      string,\n      {\n        definition: ToolDefinition;\n        usage: MemoryState[\"toolUsage\"][string] | DefaultToolUsage;\n      }\n    > = {};\n\n    Object.keys(this.tools).forEach((toolName) => {\n      result[toolName] = {\n        definition: this.tools[toolName],\n        usage: this.memory.toolUsage[toolName] || {\n          agents: [],\n          usageCount: 0,\n          lastUsed: null,\n        },\n      };\n    });\n\n    return result;\n  }\n\n  public getAgentsInfo(): Record<\n    string,\n    {\n      definition: AgentDefinition;\n      usage: MemoryState[\"agentUsage\"][string] | DefaultAgentUsage;\n    }\n  > {\n    const result: Record<\n      string,\n      {\n        definition: AgentDefinition;\n        usage: MemoryState[\"agentUsage\"][string] | DefaultAgentUsage;\n      }\n    > = {};\n\n    Object.keys(this.agents).forEach((agentName) => {\n      result[agentName] = {\n        definition: this.agents[agentName],\n        usage: this.memory.agentUsage[agentName] || {\n          usageCount: 0,\n          lastUsed: null,\n        },\n      };\n    });\n\n    return result;\n  }\n\n  // Save a message to the conversation history\n  public addToConversation(message: { role: string; content: string }): void {\n    if (!this.memory.conversation) {\n      this.memory.conversation = [];\n    }\n    this.memory.conversation.push(message);\n  }\n\n  // Compilation\n  public compile(): CompiledResult {\n    // Validate hierarchy and dependencies\n    this.validateHierarchy();\n    this.validateToolDependencies();\n\n    // Check for any validation errors\n    if (this.errors.length > 0) {\n      console.error(\"Compilation failed with errors:\");\n      this.errors.forEach((err) => console.error(\\`- \\${err}\\`));\n      throw new Error(\"Compilation failed due to validation errors\");\n    }\n\n    // Show warnings but continue\n    if (this.warnings.length > 0) {\n      console.warn(\"Compilation proceeded with warnings:\");\n      this.warnings.forEach((warn) => console.warn(\\`- \\${warn}\\`));\n    }\n\n    // Store a reference to this for use in closures\n    const self = this;\n\n    try {\n      // Compile tools\n      const compiledTools: Record<string, SDKTool<any>> = {};\n      Object.entries(this.tools).forEach(([name, config]) => {\n        const zodSchema: Record<string, ZodTypeAny> = {};\n\n        // Convert parameter definitions to zod\n        for (const [key, param] of Object.entries(config.parameters)) {\n          let schema: ZodTypeAny;\n          switch (param.type) {\n            case \"string\":\n              schema = z.string();\n              break;\n            case \"number\":\n              schema = z.number();\n              break;\n            case \"boolean\":\n              schema = z.boolean();\n              break;\n            case \"array\":\n              let itemSchema: ZodTypeAny = z.any();\n              if (param.items && param.items.type === \"string\") {\n                itemSchema = z.string();\n              }\n              schema = z.array(itemSchema);\n              break;\n            case \"object\":\n              schema = z.record(z.any());\n              break;\n            default:\n              throw new Error(\\`Unsupported parameter type: \\${param.type}\\`);\n          }\n\n          if (param.description) {\n            schema = schema.describe(param.description);\n          }\n          zodSchema[key] = schema.optional();\n        }\n\n        compiledTools[name] = new SDKTool({\n          name: name,\n          description: config.description,\n          parameters: z.object(zodSchema),\n          execute: config.execute,\n          provider: (config.provider || \"openai\") as \"openai\" | \"anthropic\",\n        });\n      });\n\n      // Compile agents\n      const compiledAgents: Record<string, Agent> = {};\n      Object.entries(this.agents).forEach(([name, config]) => {\n        // Collect tools for this agent\n        const agentTools: Record<string, SDKTool<any>> = {};\n        if (config.tools) {\n          for (const toolName of config.tools) {\n            agentTools[toolName] = compiledTools[toolName];\n          }\n        }\n\n        compiledAgents[name] = new Agent({\n          name: name,\n          description: config.description,\n          instructions: config.instructions || [],\n          model: this.modelMap[config.model],\n          tools: Object.keys(agentTools).length > 0 ? agentTools : undefined,\n          temperature: config.temperature || 0.5,\n        });\n      });\n\n      // Build and return the result object\n      const result: CompiledResult = {\n        tools: compiledTools,\n        agents: compiledAgents,\n        memory: { ...this.memory },\n      };\n\n      return result;\n    } catch (error) {\n      console.error(\"Compilation error:\", error);\n      this.memory.errors.push(\\`Failed to compile: \\${(error as Error).message}\\`);\n      throw new Error(\\`Failed to compile: \\${(error as Error).message}\\`);\n    }\n  }\n}\n\n// Singleton instance as the default export\nexport default new AgentKit();\n`;\n  createFile(join(coreDir, \"agent-kit.ts\"), agentKitContent);\n\n  // Create an index file for the core directory\n  const coreIndexContent = `// src/core/index.ts\nexport * from './agent-kit.js';\n`;\n\n  createFile(join(coreDir, \"index.ts\"), coreIndexContent);\n}\n\n/**\n * Main function to generate all project files\n */\nexport async function generateFiles(\n  projectPath: string,\n  options: ProjectOptions\n): Promise<void> {\n  // Create the project directory structure\n  ensureDir(projectPath);\n  ensureDir(join(projectPath, \"src\"));\n  ensureDir(join(projectPath, \"src\", \"agents\"));\n  ensureDir(join(projectPath, \"src\", \"tools\"));\n\n  // Generate configuration files\n  generatePackageJson(projectPath, options);\n  generateTsConfig(projectPath);\n  generateEnvFile(projectPath, options);\n  generateGitignore(projectPath);\n\n  // Generate main source files\n  generateIndexFile(projectPath, options);\n  generateAgentKitCore(projectPath);\n\n  // Create placeholder files\n  createFile(\n    join(projectPath, \"src\", \"agents\", \"index.ts\"),\n    \"// Export your agent definitions here\\n\"\n  );\n  createFile(\n    join(projectPath, \"src\", \"tools\", \"index.ts\"),\n    \"// Export your tool implementations here\\n\"\n  );\n\n  console.log(`Project files generated at: ${projectPath}`);\n}\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\"\n        ? params(data)\n        : typeof params === \"string\"\n            ? { message: params }\n            : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nfunction custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    var _a, _b;\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "// src/core/agent-kit.ts\nimport { z, ZodObject, ZodTypeAny } from \"zod\";\nimport {\n  Agent,\n  Tool as SDKTool,\n  type ModelProvider,\n} from \"@covalenthq/ai-agent-sdk\";\n\ntype ModelType = \"gpt-4o\" | \"gpt-4-turbo\" | \"claude-3-opus\" | \"claude-3-sonnet\";\n\ntype ParamType = \"string\" | \"number\" | \"boolean\" | \"array\" | \"object\";\n\ninterface ParameterDefinition {\n  type: ParamType;\n  description?: string;\n  items?: {\n    type: string;\n  };\n}\n\ninterface ToolConfig {\n  description: string;\n  parameters: Record<string, ParameterDefinition>;\n  execute: (params: Record<string, any>) => Promise<unknown>;\n  provider?: string;\n}\n\ninterface AgentConfig {\n  description: string;\n  model: ModelType;\n  instructions?: string[];\n  tools?: string[];\n  temperature?: number;\n}\n\ninterface ToolDefinition extends ToolConfig {\n  name: string;\n  zodSchema: ZodObject<any>;\n  dependencies?: string[]; // Optional tool dependencies\n}\n\ninterface AgentDefinition extends AgentConfig {\n  name: string;\n}\n\n// Memory structure for tracking agent and tool usage\ninterface MemoryState {\n  toolUsage: Record<\n    string,\n    {\n      agents: string[];\n      usageCount: number;\n      lastUsed: Date;\n    }\n  >;\n  agentUsage: Record<\n    string,\n    {\n      usageCount: number;\n      lastUsed: Date;\n    }\n  >;\n  errors: string[];\n  warnings: string[];\n  conversation?: any[];\n}\n\n// Default usage structure for when an item isn't found in memory\ninterface DefaultToolUsage {\n  agents: string[];\n  usageCount: number;\n  lastUsed: null;\n}\n\ninterface DefaultAgentUsage {\n  usageCount: number;\n  lastUsed: null;\n}\n\ninterface CompiledResult {\n  tools: Record<string, SDKTool<any>>;\n  agents: Record<string, Agent>;\n  memory: MemoryState;\n}\n\nexport class AgentKit {\n  private tools: Record<string, ToolDefinition> = {};\n  private agents: Record<string, AgentDefinition> = {};\n  private errors: string[] = [];\n  private warnings: string[] = [];\n  private memory: MemoryState = {\n    toolUsage: {},\n    agentUsage: {},\n    errors: [],\n    warnings: [],\n  };\n  private modelMap: Record<ModelType, ModelProvider> = {\n    \"gpt-4o\": { provider: \"openai\", id: \"gpt-4o\" },\n    \"gpt-4-turbo\": { provider: \"openai\", id: \"gpt-4-turbo\" },\n    \"claude-3-opus\": { provider: \"anthropic\", id: \"claude-3-opus-20240229\" },\n    \"claude-3-sonnet\": {\n      provider: \"anthropic\",\n      id: \"claude-3-sonnet-20240229\",\n    },\n  };\n\n  constructor() {\n    // Initialize empty memory state\n    this.resetMemory();\n  }\n\n  // Memory management\n  private resetMemory(): void {\n    this.memory = {\n      toolUsage: {},\n      agentUsage: {},\n      errors: [],\n      warnings: [],\n    };\n  }\n\n  private trackToolUsage(toolName: string, agentName?: string): void {\n    if (!this.memory.toolUsage[toolName]) {\n      this.memory.toolUsage[toolName] = {\n        agents: [],\n        usageCount: 0,\n        lastUsed: new Date(),\n      };\n    }\n\n    this.memory.toolUsage[toolName].usageCount++;\n    this.memory.toolUsage[toolName].lastUsed = new Date();\n\n    if (\n      agentName &&\n      !this.memory.toolUsage[toolName].agents.includes(agentName)\n    ) {\n      this.memory.toolUsage[toolName].agents.push(agentName);\n    }\n  }\n\n  private trackAgentUsage(agentName: string): void {\n    if (!this.memory.agentUsage[agentName]) {\n      this.memory.agentUsage[agentName] = {\n        usageCount: 0,\n        lastUsed: new Date(),\n      };\n    }\n\n    this.memory.agentUsage[agentName].usageCount++;\n    this.memory.agentUsage[agentName].lastUsed = new Date();\n  }\n\n  // Tool definition and validation\n  public tool(name: string, config: ToolConfig): AgentKit {\n    try {\n      // Check if tool already exists\n      if (this.tools[name]) {\n        throw new Error(`Tool '${name}' already exists`);\n      }\n\n      // Validate parameters against Zod schema\n      const paramSchema: Record<string, ZodTypeAny> = {};\n      for (const [key, param] of Object.entries(config.parameters)) {\n        switch (param.type) {\n          case \"string\":\n            paramSchema[key] = z.string().describe(param.description || \"\");\n            break;\n          case \"number\":\n            paramSchema[key] = z.number().describe(param.description || \"\");\n            break;\n          case \"boolean\":\n            paramSchema[key] = z.boolean().describe(param.description || \"\");\n            break;\n          case \"array\":\n            paramSchema[key] = z\n              .array(z.any())\n              .describe(param.description || \"\");\n            break;\n          case \"object\":\n            paramSchema[key] = z\n              .record(z.any())\n              .describe(param.description || \"\");\n            break;\n          default:\n            throw new Error(`Unsupported parameter type: ${param.type}`);\n        }\n      }\n\n      // Validate execute function\n      if (typeof config.execute !== \"function\") {\n        throw new Error(\"Tool execute must be a function\");\n      }\n\n      // Create mock parameters for validation\n      const mockParams: Record<string, any> = {};\n      for (const [key, param] of Object.entries(config.parameters)) {\n        switch (param.type) {\n          case \"string\":\n            mockParams[key] = \"test\";\n            break;\n          case \"number\":\n            mockParams[key] = 0;\n            break;\n          case \"boolean\":\n            mockParams[key] = false;\n            break;\n          case \"array\":\n            mockParams[key] = [];\n            break;\n          case \"object\":\n            mockParams[key] = {};\n            break;\n        }\n      }\n\n      // Store the tool definition\n      this.tools[name] = {\n        ...config,\n        name,\n        zodSchema: z.object(paramSchema).passthrough(),\n      };\n\n      // Track the tool creation in memory\n      this.trackToolUsage(name);\n\n      return this;\n    } catch (error) {\n      const errorMessage = `Error in tool '${name}': ${\n        (error as Error).message\n      }`;\n      this.errors.push(errorMessage);\n      this.memory.errors.push(errorMessage);\n      return this;\n    }\n  }\n\n  // Agent definition and validation\n  public agent(name: string, config: AgentConfig): AgentKit {\n    try {\n      // Check if agent already exists\n      if (this.agents[name]) {\n        throw new Error(`Agent '${name}' already exists`);\n      }\n\n      // Validate model\n      if (!config.model || !this.modelMap[config.model]) {\n        throw new Error(`Invalid model: ${config.model}`);\n      }\n\n      // Validate tools if present and track usage\n      if (config.tools && config.tools.length > 0) {\n        for (const toolName of config.tools) {\n          if (!this.tools[toolName]) {\n            throw new Error(\n              `Tool '${toolName}' not defined. Define it before adding to agent.`\n            );\n          }\n          // Track tool usage by this agent\n          this.trackToolUsage(toolName, name);\n        }\n      }\n\n      // Store the agent definition\n      this.agents[name] = {\n        ...config,\n        name,\n      };\n\n      // Track the agent creation in memory\n      this.trackAgentUsage(name);\n\n      return this;\n    } catch (error) {\n      const errorMessage = `Error in agent '${name}': ${\n        (error as Error).message\n      }`;\n      this.errors.push(errorMessage);\n      this.memory.errors.push(errorMessage);\n      return this;\n    }\n  }\n\n  // Validation functions\n  public validateToolDependencies(): boolean {\n    let isValid = true;\n\n    // Check for circular dependencies between tools\n    const visited: Record<string, boolean> = {};\n    const recursionStack: Record<string, boolean> = {};\n\n    const checkCircular = (toolName: string, path: string[] = []): boolean => {\n      if (!visited[toolName]) {\n        visited[toolName] = true;\n        recursionStack[toolName] = true;\n\n        const tool = this.tools[toolName];\n        if (tool.dependencies) {\n          for (const dep of tool.dependencies) {\n            if (!visited[dep] && checkCircular(dep, [...path, toolName])) {\n              return true;\n            } else if (recursionStack[dep]) {\n              const cycle = [...path, toolName, dep].join(\" -> \");\n              const warningMsg = `Circular dependency detected: ${cycle}`;\n              this.warnings.push(warningMsg);\n              this.memory.warnings.push(warningMsg);\n              isValid = false;\n              return true;\n            }\n          }\n        }\n\n        recursionStack[toolName] = false;\n      }\n      return false;\n    };\n\n    Object.keys(this.tools).forEach((toolName) => {\n      if (!visited[toolName]) {\n        checkCircular(toolName);\n      }\n    });\n\n    return isValid;\n  }\n\n  public validateHierarchy(): boolean {\n    let isValid = true;\n\n    // Check that all tools used by agents exist\n    Object.entries(this.agents).forEach(([agentName, agent]) => {\n      if (agent.tools) {\n        for (const toolName of agent.tools) {\n          if (!this.tools[toolName]) {\n            const errorMsg = `Agent '${agentName}' references non-existent tool '${toolName}'`;\n            this.errors.push(errorMsg);\n            this.memory.errors.push(errorMsg);\n            isValid = false;\n          }\n        }\n      }\n    });\n\n    return isValid;\n  }\n\n  // Utility functions\n  public getMemory(): MemoryState {\n    return { ...this.memory };\n  }\n\n  public getErrors(): string[] {\n    return [...this.errors];\n  }\n\n  public getWarnings(): string[] {\n    return [...this.warnings];\n  }\n\n  public getToolsInfo(): Record<\n    string,\n    {\n      definition: ToolDefinition;\n      usage: MemoryState[\"toolUsage\"][string] | DefaultToolUsage;\n    }\n  > {\n    const result: Record<\n      string,\n      {\n        definition: ToolDefinition;\n        usage: MemoryState[\"toolUsage\"][string] | DefaultToolUsage;\n      }\n    > = {};\n\n    Object.keys(this.tools).forEach((toolName) => {\n      result[toolName] = {\n        definition: this.tools[toolName],\n        usage: this.memory.toolUsage[toolName] || {\n          agents: [],\n          usageCount: 0,\n          lastUsed: null,\n        },\n      };\n    });\n\n    return result;\n  }\n\n  public getAgentsInfo(): Record<\n    string,\n    {\n      definition: AgentDefinition;\n      usage: MemoryState[\"agentUsage\"][string] | DefaultAgentUsage;\n    }\n  > {\n    const result: Record<\n      string,\n      {\n        definition: AgentDefinition;\n        usage: MemoryState[\"agentUsage\"][string] | DefaultAgentUsage;\n      }\n    > = {};\n\n    Object.keys(this.agents).forEach((agentName) => {\n      result[agentName] = {\n        definition: this.agents[agentName],\n        usage: this.memory.agentUsage[agentName] || {\n          usageCount: 0,\n          lastUsed: null,\n        },\n      };\n    });\n\n    return result;\n  }\n\n  // Save a message to the conversation history\n  public addToConversation(message: { role: string; content: string }): void {\n    if (!this.memory.conversation) {\n      this.memory.conversation = [];\n    }\n    this.memory.conversation.push(message);\n  }\n\n  // Compilation\n  public compile(): CompiledResult {\n    // Validate hierarchy and dependencies\n    this.validateHierarchy();\n    this.validateToolDependencies();\n\n    // Check for any validation errors\n    if (this.errors.length > 0) {\n      console.error(\"Compilation failed with errors:\");\n      this.errors.forEach((err) => console.error(`- ${err}`));\n      throw new Error(\"Compilation failed due to validation errors\");\n    }\n\n    // Show warnings but continue\n    if (this.warnings.length > 0) {\n      console.warn(\"Compilation proceeded with warnings:\");\n      this.warnings.forEach((warn) => console.warn(`- ${warn}`));\n    }\n\n    // Store a reference to this for use in closures\n    const self = this;\n\n    try {\n      // Compile tools\n      const compiledTools: Record<string, SDKTool<any>> = {};\n      Object.entries(this.tools).forEach(([name, config]) => {\n        const zodSchema: Record<string, ZodTypeAny> = {};\n\n        // Convert parameter definitions to zod\n        for (const [key, param] of Object.entries(config.parameters)) {\n          let schema: ZodTypeAny;\n          switch (param.type) {\n            case \"string\":\n              schema = z.string();\n              break;\n            case \"number\":\n              schema = z.number();\n              break;\n            case \"boolean\":\n              schema = z.boolean();\n              break;\n            case \"array\":\n              let itemSchema: ZodTypeAny = z.any();\n              if (param.items && param.items.type === \"string\") {\n                itemSchema = z.string();\n              }\n              schema = z.array(itemSchema);\n              break;\n            case \"object\":\n              schema = z.record(z.any());\n              break;\n            default:\n              throw new Error(`Unsupported parameter type: ${param.type}`);\n          }\n\n          if (param.description) {\n            schema = schema.describe(param.description);\n          }\n          zodSchema[key] = schema.optional();\n        }\n\n        compiledTools[name] = new SDKTool({\n          name: name,\n          description: config.description,\n          parameters: z.object(zodSchema),\n          execute: config.execute,\n          provider: (config.provider || \"openai\") as \"openai\" | \"anthropic\",\n        });\n      });\n\n      // Compile agents\n      const compiledAgents: Record<string, Agent> = {};\n      Object.entries(this.agents).forEach(([name, config]) => {\n        // Collect tools for this agent\n        const agentTools: Record<string, SDKTool<any>> = {};\n        if (config.tools) {\n          for (const toolName of config.tools) {\n            agentTools[toolName] = compiledTools[toolName];\n          }\n        }\n\n        compiledAgents[name] = new Agent({\n          name: name,\n          description: config.description,\n          instructions: config.instructions || [],\n          model: this.modelMap[config.model],\n          tools: Object.keys(agentTools).length > 0 ? agentTools : undefined,\n          temperature: config.temperature || 0.5,\n        });\n      });\n\n      // Build and return the result object\n      const result: CompiledResult = {\n        tools: compiledTools,\n        agents: compiledAgents,\n        memory: { ...this.memory },\n      };\n\n      return result;\n    } catch (error) {\n      console.error(\"Compilation error:\", error);\n      this.memory.errors.push(`Failed to compile: ${(error as Error).message}`);\n      throw new Error(`Failed to compile: ${(error as Error).message}`);\n    }\n  }\n}\n\n// Singleton instance as the default export\nexport default new AgentKit();\n", "// src/cli/system/cli-agent.ts\n\nimport AgentKit from \"../../core/agent-kit\";\nimport fs from \"fs/promises\";\nimport path from \"path\";\nimport {\n  CONVERSATIONAL_ASSISTANT_PROMPT,\n  TOOL_IMPLEMENTATION_GUIDELINES,\n} from \"./prompts\";\nimport { registerCLITools } from \"./tools\";\n\ninterface ConversationContext {\n  conversation: Array<{ role: string; content: string }>;\n  currentTask: {\n    type: string | null; // 'tool_creation', 'agent_creation', etc.\n    status: \"collecting_info\" | \"generating\" | \"complete\" | \"idle\";\n    collectedInfo: Record<string, any>;\n    currentQuestion: string | null;\n    expectedAnswer: string | null;\n  };\n  createdEntities: {\n    tools: Array<{ name: string; path: string }>;\n    agents: Array<{ name: string; path: string }>;\n  };\n}\n\n/**\n * Creates a CLI agent that interacts with users conversationally\n */\nexport function createCLIAgent(): any {\n  try {\n    // Register the required tools first\n    registerCLITools();\n\n    // Register agent with core instructions\n    AgentKit.agent(\"cliAgent\", {\n      description:\n        \"CLI assistant for Vanekit that helps users build and manage AI agents conversationally\",\n      model: \"gpt-4o\",\n      instructions: [\n        // Core purpose definition\n        \"You are a CLI assistant for Vane`s Agentkit that helps users build and deploy AI agents through natural conversation.\",\n        \"Your primary role is to guide users through creating tools and agents in a friendly, step-by-step manner.\",\n\n        // Conversation guidelines\n        \"Always be conversational and personable. Ask one clear question at a time to guide the user.\",\n        \"After each user response, thank them, acknowledge their input, and provide the next step.\",\n        \"Maintain context throughout the conversation to build tools and agents incrementally.\",\n\n        // Tool creation guidance\n        \"When creating a tool, collect information one question at a time: name, description, parameters, and implementation.\",\n        \"For tool parameters, choose the most fitting type (string, number, boolean, etc.) and description for each parameter, unless user gives you otherwise.\",\n        \"For tool implementation, help users write appropriate JavaScript/TypeScript code that fulfills their needs.\",\n        TOOL_IMPLEMENTATION_GUIDELINES,\n\n        // Agent creation guidance\n        \"When creating an agent, collect information one question at a time: name, description, instructions, tools, and model.\",\n        \"For agent instructions, collect multiple clear instructions that will guide the agent's behavior.\",\n        \"For agent tools, list the names of tools that have been previously created or are built into the system.\",\n\n        // FILE GENERATION USING NEW TEMPLATE SYSTEM\n        \"When all information has been collected and you're ready to generate a file:\",\n        \"- For tools: use the 'generateToolFile' tool with name, description, parameters (MUST be an object with parameter definitions), and implementation\",\n        \"- For agents: use the 'generateAgentFile' tool with name, description, model, instructions (array), tools (array), and temperature\",\n        \"Never skip the parameters object for tools - if there are no parameters, provide an empty object {}.\",\n\n        // Action orientation\n        \"End responses with questions or suggested next steps rather than just statements.\",\n        \"Use the collectedInfo field to track information gathered during the conversation.\",\n\n        // Progress tracking\n        \"When a task status is 'generating', immediately use the generateFile tool with the collected information.\",\n        \"After successfully generating a file, set the task status to 'complete' and suggest the next steps to the user.\",\n      ],\n      tools: [\n        \"generateToolFile\",\n        \"generateAgentFile\",\n        \"buildTool\",\n        \"readFile\",\n        \"updateFile\",\n        \"listDirectory\",\n      ],\n      temperature: 0.3,\n    });\n    return {\n      compiled: null,\n\n      getCompiled() {\n        if (!this.compiled) {\n          this.compiled = AgentKit.compile();\n        }\n        return this.compiled;\n      },\n    };\n  } catch (error) {\n    console.error(\"Error creating CLI agent:\", error);\n    throw error;\n  }\n}\n\n/**\n * Process a natural language command conversationally\n */\nexport async function processCLICommand(\n  agentWrapper: any,\n  command: string,\n  context: ConversationContext\n): Promise<any> {\n  try {\n    // Initialize context if needed\n    if (!context.currentTask) {\n      context.currentTask = {\n        type: null,\n        status: \"idle\",\n        collectedInfo: {},\n        currentQuestion: null,\n        expectedAnswer: null,\n      };\n    }\n    if (!context.createdEntities) {\n      context.createdEntities = { tools: [], agents: [] };\n    }\n\n    // Get the CLI agent\n    const cliAgent = agentWrapper.getCompiled().agents.cliAgent;\n    if (!cliAgent) {\n      throw new Error(\"CLI agent not found in compiled result\");\n    }\n\n    // Build the system message content\n    const systemContent = `${CONVERSATIONAL_ASSISTANT_PROMPT}\n\n    Current task status: ${JSON.stringify(context.currentTask)}\n    Previously created:\n    - Tools: ${JSON.stringify(context.createdEntities.tools.map((t) => t.name))}\n    - Agents: ${JSON.stringify(\n      context.createdEntities.agents.map((a) => a.name)\n    )}\n    \n    IMPORTANT GUIDELINES:\n    1. Ask only ONE QUESTION at a time\n    2. Acknowledge the user's previous answer before asking the next question\n    3. Track all collected information in the collectedInfo field\n    4. Generate files ONLY when all information is collected\n    6. For tool creation, you need: name, description, parameters, implementation\n    7. For agent creation, you need: name, description, instructions, tools, model\n    \n    Remember to make the experience conversational and friendly!`;\n\n    const messages: any = [];\n\n    // Add system message\n    messages.push({\n      role: \"system\",\n      content: systemContent,\n    });\n\n    // Add conversation history\n    if (\n      context &&\n      context.conversation &&\n      Array.isArray(context.conversation)\n    ) {\n      // Add up to 10 recent messages for better context\n      const recentMessages = context.conversation.slice(-10);\n      for (const msg of recentMessages) {\n        if (\n          msg &&\n          typeof msg === \"object\" &&\n          \"role\" in msg &&\n          \"content\" in msg\n        ) {\n          messages.push({\n            role: msg.role,\n            content: msg.content,\n          });\n        }\n      }\n    }\n\n    // Add the current user message\n    messages.push({\n      role: \"user\",\n      content: command,\n    });\n\n    // Generate response with simpler schema\n    const response = await cliAgent.generate({\n      messages: messages,\n      temperature: 0.2,\n    });\n\n    console.log(\n      \"Received response:\",\n      JSON.stringify(response).slice(0, 100) + \"...\"\n    );\n\n    // Extract response content and any potential schema information\n    let responseContent = \"\";\n    let currentTask = {\n      type: context.currentTask.type || \"none\",\n      status: context.currentTask.status || \"idle\",\n      collectedInfo: context.currentTask.collectedInfo || {},\n      nextQuestion: null,\n    };\n    let filesToGenerate: any = [];\n\n    // Handle different response formats\n    if (typeof response === \"string\") {\n      // Simple string response\n      responseContent = response;\n    } else if (response && typeof response === \"object\") {\n      // Check for content field directly\n      if (\"content\" in response) {\n        responseContent = response.content;\n      }\n      // Check for value field containing content\n      else if (\n        response.value &&\n        typeof response.value === \"object\" &&\n        \"content\" in response.value\n      ) {\n        responseContent = response.value.content;\n\n        // Try to extract task information too if available\n        if (\"currentTask\" in response.value) {\n          currentTask = response.value.currentTask;\n        }\n\n        // Try to extract files to generate if available\n        if (\n          \"filesToGenerate\" in response.value &&\n          Array.isArray(response.value.filesToGenerate)\n        ) {\n          filesToGenerate = response.value.filesToGenerate;\n        }\n      }\n      // Try text field if others aren't available\n      else if (\"text\" in response) {\n        responseContent = response.text;\n      }\n      // Last resort - stringify the whole thing\n      else {\n        responseContent = JSON.stringify(response);\n      }\n    } else {\n      responseContent =\n        \"I received your message but couldn't generate a proper response.\";\n    }\n\n    // Process any file generation requests\n    const generatedFiles: any[] = [];\n\n    for (const file of filesToGenerate) {\n      try {\n        if (!file.path || !file.content) continue;\n\n        // Ensure directory exists\n        const dir = path.dirname(file.path);\n        await fs.mkdir(dir, { recursive: true });\n\n        // Write the file\n        await fs.writeFile(file.path, file.content);\n\n        // Add to generated files list\n        generatedFiles.push({\n          path: file.path,\n          operation: \"created\",\n          status: \"success\",\n        });\n\n        // Track created entity based on file path\n        if (file.path.includes(\"/tools/\")) {\n          const toolName = path.basename(file.path, path.extname(file.path));\n          context.createdEntities.tools.push({\n            name: toolName,\n            path: file.path,\n          });\n        } else if (file.path.includes(\"/agents/\")) {\n          const agentName = path.basename(file.path, path.extname(file.path));\n          context.createdEntities.agents.push({\n            name: agentName,\n            path: file.path,\n          });\n        }\n      } catch (error) {\n        console.error(`Error generating file ${file.path}:`, error);\n        generatedFiles.push({\n          path: file.path,\n          operation: \"failed\",\n          status: \"error\",\n          error: error instanceof Error ? error.message : String(error),\n        });\n      }\n    }\n\n    // Update task status in context\n    context.currentTask = {\n      type: currentTask.type || context.currentTask.type,\n      status: currentTask.status || context.currentTask.status,\n      collectedInfo:\n        currentTask.collectedInfo || context.currentTask.collectedInfo,\n      currentQuestion: currentTask.nextQuestion || null,\n      expectedAnswer: null,\n    };\n\n    // Return the response\n    return {\n      status: \"success\",\n      response: responseContent, // Always return this explicitly\n      metadata: {\n        filesGenerated: generatedFiles.length > 0 ? generatedFiles : undefined,\n        contextState: context,\n      },\n    };\n  } catch (error) {\n    console.error(\"Error processing command:\", error);\n    return {\n      status: \"error\",\n      message: `Error processing command: ${\n        error instanceof Error ? error.message : String(error)\n      }`,\n      response: `I encountered an error: ${\n        error instanceof Error ? error.message : String(error)\n      }`,\n    };\n  }\n}\n", "// src/cli/prompts.ts\n/**\n * This file contains the various system prompts and instruction sets\n * used by the AgentKit CLI assistant\n */\n\n/**\n * Main system prompt for the conversational CLI assistant\n */\nexport const CONVERSATIONAL_ASSISTANT_PROMPT = `\nYou are the Vane CLI assistant, designed to help users build AI agents using Vane's AgentKit framework in a conversational, step-by-step manner.\n\nYOUR PRIMARY RESPONSIBILITIES:\n1. Guide users through creating tools and agents for their AI applications\n2. Ask ONE QUESTION AT A TIME to collect necessary information\n3. Generate the appropriate files once all information is collected\n4. Always confirm successful creation with file paths\n\nCONVERSATION GUIDELINES:\n- Be friendly, conversational, and personable\n- Ask users clear, specific questions ONE AT A TIME\n- Acknowledge user responses before moving to the next question\n- End each response with a question or suggested next step\n- Always track collected information in the currentTask.collectedInfo field\n\nTOOL-AGENT RELATIONSHIP:\n- Tools are the building blocks that agents use to perform tasks\n- When users want to build an agent for a specific purpose (like news or weather):\n  * First help them create the necessary tools\n  * Then create the agent that uses those tools\n- Tools need: name, description, parameters, and implementation\n- Agents need: name, description, instructions, tools, and model\n\nFILE GENERATION:\n- Generate files only when all necessary information is collected\n- Place tool files in src/tools/ directory\n- Place agent files in src/agents/ directory\n- Always confirm successful creation with exact file paths\n- Track created tools and agents to reference them later\n\nEXAMPLE CONVERSATION FLOW:\n1. User: \"I want an AI assistant for my news station\"\n2. You: \"That sounds great! Does your news station have a publicly accessible API? [Ask just this one question]\"\n3. User: \"Yes, it's at api.mynews.com/v1\"\n4. You: \"Thanks for sharing that. What would you like to name this tool that will fetch news from your API? [One question]\"\n5. User: \"NewsAPITool\"\n6. You: \"Great name! Now I need to understand what parameters this tool will need. What information will we need to fetch news? (E.g., category, date, etc.) [One question]\"\n...and so on, one step at a time.\n\nRemember: Your goal is to create a friendly, interactive experience that guides users through building AI agents step by step.\n`;\n/**\n * Instructions for tool creation guidance\n */\n\n/**\n * Instructions to guide users in creating tools with direct implementation\n */\nexport const TOOL_IMPLEMENTATION_GUIDELINES = `\nWhen creating a tool implementation:\n\n1. WRITE DIRECT CODE that uses the parameters directly\n2. DO NOT create nested function definitions\n3. End your implementation with a return statement in this format:\n\nreturn {\n status: \"success\",\n data: finalData,\n message: \"A descriptive success message\"\n};\n\nBAD FORMAT - DO NOT USE:\nasync function fetchData(param1, param2) {\n  return result;\n}\n\nGOOD FORMAT - USE THIS:\n// const apiUrl = \\`https://example.com/api?param=\\${param1}\\`;\n// const response = await fetch(apiUrl);\n// const data = await response.json();\n// Process the data\nconst filteredData = data.filter(item => item.property === filterValue);\n\n// Return the result\nreturn {\n status: \"success\",\n data: filteredData,\n message: \\`Successfully retrieved \\${filteredData.length} items\\`\n};\n`;\n", "//cli/system/tools\nimport path from \"path\";\nimport fs from \"fs/promises\";\nimport AgentKit from \"../../core/agent-kit\";\nimport { buildProject } from \"../build\";\n\n/**\n * Register the core tools needed by the CLI agent\n */\nfunction registerCLITools() {\n  // Tool creation tool\n  AgentKit.tool(\"generateToolFile\", {\n    description:\n      \"Generates a new tool file using the AgentKit template with direct implementation\",\n    parameters: {\n      name: {\n        type: \"string\",\n        description: \"Name of the tool\",\n      },\n      description: {\n        type: \"string\",\n        description: \"Description of the tool\",\n      },\n      parameters: {\n        type: \"object\",\n        description:\n          \"Parameters object for tools, with key-value pairs of parameter definitions\",\n      },\n      implementation: {\n        type: \"string\",\n        description: \"Direct implementation code for the tool\",\n      },\n    },\n    execute: async ({ name, description, parameters, implementation }) => {\n      try {\n        // Debug logging\n        console.log(\"========== GENERATE TOOL FILE DEBUG ==========\");\n        console.log(\"Tool Name:\", name);\n        console.log(\"Description:\", description);\n        console.log(\"Parameters:\", JSON.stringify(parameters, null, 2));\n        console.log(\"==============================================\");\n\n        // Handle case where parameters is undefined or null - provide empty object\n        const toolParams = parameters || {};\n\n        // Format parameters for template\n        let paramsStr = \"\";\n\n        if (Object.keys(toolParams).length > 0) {\n          paramsStr = Object.entries(toolParams)\n            .map(([key, param]) => {\n              const paramObj =\n                typeof param === \"object\" ? param : { type: \"string\" };\n              const type = (paramObj as any).type || \"string\";\n              const desc = (paramObj as any).description || \"\";\n              return `    ${key}: {\n        type: \"${type}\",\n        description: \"${desc.replace(/\"/g, '\\\\\"')}\"\n      }`;\n            })\n            .join(\",\\n\");\n        }\n\n        // Create parameter names for destructuring\n        const paramNames =\n          Object.keys(toolParams).length > 0\n            ? `{ ${Object.keys(toolParams).join(\", \")} }`\n            : \"parameters\";\n\n        // Format implementation with proper indentation\n        const formattedImplementation = implementation\n          ? implementation\n              .split(\"\\n\")\n              .map((line: any) => `      ${line}`)\n              .join(\"\\n\")\n          : \"      // TODO: Implement tool functionality\";\n\n        // Generate the final file content\n        const content = `import AgentKit from \"../core/agent-kit.js\";\n    \n  /**\n   * ${description}\n   */\n  AgentKit.tool(\"${name}\", {\n    description: \"${description}\",\n    parameters: {\n  ${paramsStr || \"    // No parameters\"}\n    },\n    execute: async (${paramNames}) => {\n      try {\n  ${formattedImplementation}\n      } catch (error) {\n        return {\n          status: \"error\",\n          message: \\`Error in ${name}: \\${error instanceof Error ? error.message : String(error)}\\`\n        };\n      }\n    }\n  });\n  `;\n\n        // Create the file\n        const filename = `src/tools/${name}.ts`;\n        const dir = path.dirname(filename);\n        await fs.mkdir(dir, { recursive: true });\n        await fs.writeFile(filename, content);\n\n        console.log(`Generated tool file: ${filename}`);\n\n        return {\n          status: \"success\",\n          message: `Tool file ${filename} generated successfully`,\n          metadata: {\n            name,\n            description,\n            path: filename,\n          },\n        };\n      } catch (error) {\n        console.error(`Error generating tool file:`, error);\n        return {\n          status: \"error\",\n          message: `Failed to generate tool file: ${\n            error instanceof Error ? error.message : String(error)\n          }`,\n        };\n      }\n    },\n  });\n\n  // Agent creation tool\n  AgentKit.tool(\"generateAgentFile\", {\n    description: \"Generates a new agent file using the AgentKit template\",\n    parameters: {\n      name: {\n        type: \"string\",\n        description: \"Name of the agent\",\n      },\n      description: {\n        type: \"string\",\n        description: \"Description of the agent\",\n      },\n      model: {\n        type: \"string\",\n        description: \"Model to use for the agent (e.g., gpt-4o)\",\n      },\n      instructions: {\n        type: \"array\",\n        description: \"Array of instruction strings for the agent\",\n        items: {\n          type: \"string\",\n        },\n      },\n      tools: {\n        type: \"array\",\n        description: \"Array of tool names for the agent\",\n        items: {\n          type: \"string\",\n        },\n      },\n      temperature: {\n        type: \"number\",\n        description: \"Temperature setting for the agent\",\n      },\n    },\n    execute: async ({\n      name,\n      description,\n      model = \"gpt-4o\",\n      instructions = [],\n      tools = [],\n      temperature = 0.3,\n    }) => {\n      try {\n        // Debug logging\n        console.log(\"========== GENERATE AGENT FILE DEBUG ==========\");\n        console.log(\"Agent Name:\", name);\n        console.log(\"Description:\", description);\n        console.log(\"Model:\", model);\n        console.log(\"Instructions:\", JSON.stringify(instructions, null, 2));\n        console.log(\"Tools:\", JSON.stringify(tools, null, 2));\n        console.log(\"Temperature:\", temperature);\n        console.log(\"==============================================\");\n\n        // Format instructions for template\n        const formattedInstructions =\n          instructions.length > 0\n            ? instructions\n                .map((instr: any) => `    \"${instr.replace(/\"/g, '\\\\\"')}\"`)\n                .join(\",\\n\")\n            : '    \"Assist users with their requests in a helpful manner.\"';\n\n        // Format tools for template\n        const formattedTools =\n          tools.length > 0\n            ? tools.map((tool: any) => `    \"${tool}\"`).join(\",\\n\")\n            : \"\";\n\n        // Generate the file content directly for consistency\n        const content = `import AgentKit from \"../core/agent-kit.js\";\n\n/**\n * ${description}\n */\nAgentKit.agent(\"${name}\", {\n  description: \"${description}\",\n  model: \"${model}\",\n  instructions: [\n${formattedInstructions}\n  ],\n  tools: [\n${formattedTools}\n  ],\n  temperature: ${temperature},\n});\n`;\n\n        // Create the file\n        const filename = `src/agents/${name}.ts`;\n        const dir = path.dirname(filename);\n        await fs.mkdir(dir, { recursive: true });\n        await fs.writeFile(filename, content);\n\n        console.log(`Generated agent file: ${filename}`);\n\n        return {\n          status: \"success\",\n          message: `Agent file ${filename} generated successfully`,\n          metadata: {\n            name,\n            description,\n            path: filename,\n          },\n        };\n      } catch (error) {\n        console.error(`Error generating agent file:`, error);\n        return {\n          status: \"error\",\n          message: `Failed to generate agent file: ${\n            error instanceof Error ? error.message : String(error)\n          }`,\n        };\n      }\n    },\n  });\n\n  // Build project tool\n  AgentKit.tool(\"buildTool\", {\n    description: \"Builds and compiles the AgentKit project for deployment\",\n    parameters: {\n      outputDir: {\n        type: \"string\",\n        description:\n          \"Output directory for the compiled files (default: 'dist')\",\n      },\n      format: {\n        type: \"string\",\n        description: \"Output format ('esm', 'cjs', or 'browser')\",\n      },\n      mainAgent: {\n        type: \"string\",\n        description:\n          \"Name of the main agent to be exported as the default entry point\",\n      },\n      installDependencies: {\n        type: \"boolean\",\n        description: \"Whether to install dependencies before building\",\n      },\n    },\n    execute: async ({\n      outputDir = \"dist\",\n      format = \"esm\",\n      mainAgent,\n      installDependencies = false,\n    }) => {\n      try {\n        // Get current working directory\n        const projectPath = process.cwd();\n\n        // Call the build function\n        const result = await buildProject(projectPath, {\n          outputDir,\n          format,\n          mainAgent,\n          skipDependencyPrompt: !installDependencies,\n          // We'll get the project name from the directory if needed\n        });\n\n        if (result.status === \"error\") {\n          return {\n            status: \"error\",\n            message: `Build failed: ${result.message}`,\n          };\n        }\n\n        return {\n          status: \"success\",\n          data: result,\n          message: `Successfully built project. Output is available in: ${result.outputDir}`,\n        };\n      } catch (error) {\n        return {\n          status: \"error\",\n          message: `Error in buildTool: ${\n            error instanceof Error ? error.message : String(error)\n          }`,\n        };\n      }\n    },\n  });\n\n  // Register readFile tool\n  AgentKit.tool(\"readFile\", {\n    description: \"Reads the content of a file\",\n    parameters: {\n      filename: {\n        type: \"string\",\n        description: \"Path to the file to read\",\n      },\n    },\n    execute: async ({ filename }) => {\n      try {\n        // Check if file exists\n        try {\n          await fs.access(filename);\n        } catch {\n          return {\n            status: \"error\",\n            message: `File ${filename} does not exist`,\n          };\n        }\n\n        // Read the file\n        const content = await fs.readFile(filename, \"utf-8\");\n\n        console.log(`Read file: ${filename}`);\n\n        return {\n          status: \"success\",\n          message: `File ${filename} read successfully`,\n          data: {\n            content,\n            path: filename,\n          },\n        };\n      } catch (error) {\n        console.error(`Error reading file ${filename}:`, error);\n        return {\n          status: \"error\",\n          message: `Failed to read file: ${\n            error instanceof Error ? error.message : String(error)\n          }`,\n        };\n      }\n    },\n  });\n\n  // Register updateFile tool\n  AgentKit.tool(\"updateFile\", {\n    description: \"Updates the content of a file\",\n    parameters: {\n      filename: {\n        type: \"string\",\n        description: \"Path to the file to update\",\n      },\n      content: {\n        type: \"string\",\n        description: \"New content for the file\",\n      },\n    },\n    execute: async ({ filename, content }) => {\n      try {\n        // Check if file exists\n        try {\n          await fs.access(filename);\n        } catch {\n          return {\n            status: \"error\",\n            message: `File ${filename} does not exist`,\n          };\n        }\n\n        // Write the file\n        await fs.writeFile(filename, content);\n\n        console.log(`Updated file: ${filename}`);\n\n        return {\n          status: \"success\",\n          message: `File ${filename} updated successfully`,\n          metadata: {\n            filename,\n            path: filename,\n          },\n        };\n      } catch (error) {\n        console.error(`Error updating file ${filename}:`, error);\n        return {\n          status: \"error\",\n          message: `Failed to update file: ${\n            error instanceof Error ? error.message : String(error)\n          }`,\n        };\n      }\n    },\n  });\n\n  // Register listDirectory tool\n  AgentKit.tool(\"listDirectory\", {\n    description: \"Lists the contents of a directory\",\n    parameters: {\n      directory: {\n        type: \"string\",\n        description: \"Path to the directory to list\",\n      },\n    },\n    execute: async ({ directory }) => {\n      try {\n        // Check if directory exists\n        try {\n          await fs.access(directory);\n        } catch {\n          return {\n            status: \"error\",\n            message: `Directory ${directory} does not exist`,\n          };\n        }\n\n        // List the directory\n        const entries = await fs.readdir(directory, { withFileTypes: true });\n\n        const files = entries\n          .filter((entry) => entry.isFile())\n          .map((entry) => entry.name);\n\n        const directories = entries\n          .filter((entry) => entry.isDirectory())\n          .map((entry) => entry.name);\n\n        console.log(`Listed directory: ${directory}`);\n\n        return {\n          status: \"success\",\n          message: `Directory ${directory} listed successfully`,\n          data: {\n            path: directory,\n            files,\n            directories,\n          },\n        };\n      } catch (error) {\n        console.error(`Error listing directory ${directory}:`, error);\n        return {\n          status: \"error\",\n          message: `Failed to list directory: ${\n            error instanceof Error ? error.message : String(error)\n          }`,\n        };\n      }\n    },\n  });\n}\n\nexport { registerCLITools };\n", "// src/cli/integration.ts\nimport { createCLIAgent, processCLICommand } from \"./sytem/cli-agent\";\nimport ora from \"ora\";\nimport { join } from \"path\";\nimport { mkdirSync, existsSync } from \"fs\";\n\nexport class CLIIntegration {\n  private agent: any;\n  private conversation: Array<{ role: string; content: string }> = [];\n  private config: any;\n  private context: any = {\n    conversation: [],\n    currentTask: {\n      type: null,\n      status: \"idle\",\n      collectedInfo: {},\n      currentQuestion: null,\n      expectedAnswer: null,\n    },\n    createdEntities: {\n      tools: [],\n      agents: [],\n    },\n  };\n\n  constructor(config: any) {\n    this.config = config;\n\n    // Initialize conversation from config if available\n    if (config.savedConversation && Array.isArray(config.savedConversation)) {\n      this.conversation = [...config.savedConversation];\n      this.context.conversation = [...config.savedConversation];\n    }\n\n    // Ensure project directories exist\n    this.ensureProjectDirectories();\n  }\n\n  /**\n   * Ensure required project directories exist\n   */\n  private ensureProjectDirectories(): void {\n    const directories = [\n      join(this.config.projectPath, \"src/tools\"),\n      join(this.config.projectPath, \"src/agents\"),\n      join(this.config.projectPath, \"src/core\"),\n    ];\n\n    for (const dir of directories) {\n      if (!existsSync(dir)) {\n        try {\n          mkdirSync(dir, { recursive: true });\n        } catch (error) {\n          console.warn(`Could not create directory ${dir}: ${error}`);\n        }\n      }\n    }\n  }\n\n  /**\n   * Initialize the CLI agent\n   */\n  async initialize() {\n    if (this.agent) return this.agent;\n\n    const spinner = ora(\"Initializing CLI assistant...\").start();\n    try {\n      this.agent = await createCLIAgent();\n      spinner.succeed(\"CLI assistant ready\");\n      return this.agent;\n    } catch (error) {\n      spinner.fail(\n        `Failed to initialize CLI assistant: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Process a user message and handle file generation\n   */\n  async processMessage(message: string): Promise<string> {\n    // Initialize agent if needed\n    if (!this.agent) {\n      await this.initialize();\n    }\n\n    // Add message to conversation history\n    this.conversation.push({ role: \"user\", content: message });\n    this.context.conversation = this.conversation;\n\n    // Process with agent\n    const spinner = ora(\"Processing...\").start();\n    try {\n      // Process the command\n      const result = await processCLICommand(this.agent, message, this.context);\n\n      // Update context from result if available\n      if (result.metadata && result.metadata.contextState) {\n        this.context = result.metadata.contextState;\n      }\n\n      spinner.succeed(\"Done\");\n\n      // Handle file generation\n      let filesGenerated = false;\n      if (\n        result.metadata?.filesGenerated &&\n        result.metadata.filesGenerated.length > 0\n      ) {\n        filesGenerated = true;\n\n        // Log each generated file\n        result.metadata.filesGenerated.forEach((file: any) => {\n          if (file.status === \"success\") {\n            console.log(`\u2705 ${file.operation} file: ${file.path}`);\n          } else {\n            console.error(`\u274C Failed to ${file.operation} file: ${file.path}`);\n            if (file.error) {\n              console.error(`   Error: ${file.error}`);\n            }\n          }\n        });\n      }\n\n      // Extract response\n      let responseText: any;\n      if (result.status === \"error\") {\n        responseText =\n          result.response ||\n          result.message ||\n          \"An error occurred while processing your request.\";\n      } else {\n        responseText =\n          result.response ||\n          \"I processed your request but couldn't generate a response.\";\n      }\n\n      // If files were generated, append info to response\n      if (filesGenerated) {\n        // Check what was just created\n        const justCreated =\n          this.context.currentTask.type === \"tool_creation\"\n            ? \"tool\"\n            : this.context.currentTask.type === \"agent_creation\"\n            ? \"agent\"\n            : \"file\";\n\n        // Get the name of what was created\n        const justCreatedName =\n          this.context.currentTask.collectedInfo?.name || \"item\";\n\n        // Add a success message to the response\n        if (!responseText.includes(\"successfully\")) {\n          responseText += `\\n\\nThe ${justCreated} \\`${justCreatedName}\\` has been successfully created.`;\n        }\n\n        // Reset task status\n        this.context.currentTask.status = \"complete\";\n      }\n\n      // Add response to conversation\n      this.conversation.push({ role: \"assistant\", content: responseText });\n      this.context.conversation = this.conversation;\n\n      // Log current task for debugging\n      if (this.context.currentTask?.type) {\n        console.debug(\n          `Current task: ${this.context.currentTask.type} (${this.context.currentTask.status})`\n        );\n        console.debug(\n          `Collected info: ${JSON.stringify(\n            this.context.currentTask.collectedInfo\n          )}`\n        );\n      }\n\n      return responseText;\n    } catch (error) {\n      spinner.fail(\n        `Error: ${error instanceof Error ? error.message : String(error)}`\n      );\n      const errorMessage = `I encountered an error processing your request: ${\n        error instanceof Error ? error.message : String(error)\n      }`;\n      this.conversation.push({ role: \"assistant\", content: errorMessage });\n      this.context.conversation = this.conversation;\n      return errorMessage;\n    }\n  }\n\n  /**\n   * Get current task status\n   */\n  getCurrentTaskStatus(): any {\n    return {\n      type: this.context.currentTask?.type || null,\n      status: this.context.currentTask?.status || \"idle\",\n    };\n  }\n\n  /**\n   * Get the created entities\n   */\n  getCreatedEntities(): any {\n    return {\n      tools: [...(this.context.createdEntities?.tools || [])],\n      agents: [...(this.context.createdEntities?.agents || [])],\n    };\n  }\n\n  /**\n   * Get the current conversation history\n   */\n  getConversation(): Array<{ role: string; content: string }> {\n    return [...this.conversation];\n  }\n}\n\n/**\n * Create a new CLI integration\n */\nexport default function createCLIIntegration(config: any): CLIIntegration {\n  return new CLIIntegration(config);\n}\n", "// src/cli/deploy.js\nimport { buildProject } from \"./build\";\nimport inquirer from \"inquirer\";\nimport fs, {\n  existsSync,\n  mkdirSync,\n  writeFileSync,\n  readFileSync,\n  readdirSync,\n} from \"fs\";\nimport { join, resolve } from \"path\";\nimport * as path from \"path\";\nimport { logger, withSpinner } from \"./utils\";\n\n/**\n * A recursive directory copy function using only fs\n * Replacement for fs-extra's copySync\n */\nfunction copyDirSync(src, dest) {\n  // Create destination directory if it doesn't exist\n  if (!existsSync(dest)) {\n    mkdirSync(dest, { recursive: true });\n  }\n\n  // Read all files/directories in the source directory\n  const entries = readdirSync(src, { withFileTypes: true });\n\n  for (const entry of entries) {\n    const srcPath = join(src, entry.name);\n    const destPath = join(dest, entry.name);\n\n    if (entry.isDirectory()) {\n      // Recursively copy directories\n      copyDirSync(srcPath, destPath);\n    } else {\n      // Copy files\n      writeFileSync(destPath, readFileSync(srcPath));\n    }\n  }\n}\n\n/**\n * Replacement for fs-extra's remove using only fs\n */\nfunction removeDirSync(dir) {\n  if (!existsSync(dir)) return;\n\n  const entries = readdirSync(dir, { withFileTypes: true });\n\n  for (const entry of entries) {\n    const fullPath = path.join(dir, entry.name);\n\n    if (entry.isDirectory()) {\n      removeDirSync(fullPath);\n    } else {\n      fs.unlinkSync(fullPath);\n    }\n  }\n\n  fs.rmdirSync(dir);\n}\n\n/**\n * Deploy the built agent to an Alexa skill\n */\nexport async function deployToAlexaSkill(projectPath, inputOptions = {}) {\n  console.log(`\n  \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n  \u2551       Vane Alexa Deployment         \u2551\n  \u2551                                     \u2551\n  \u2551   Integrate your AI agent with      \u2551\n  \u2551        your Alexa skill             \u2551\n  \u255A\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255D\n  `);\n\n  try {\n    // Resolve project path\n    projectPath = resolve(projectPath);\n    logger.info(\"Project path:\", projectPath);\n\n    if (!existsSync(projectPath)) {\n      throw new Error(`Project directory '${projectPath}' does not exist`);\n    }\n\n    // Check if dist directory exists\n    const distPath = join(projectPath, \"dist\");\n    if (!existsSync(distPath)) {\n      throw new Error(\n        `Dist directory not found. Please build your project first with 'vanekit build'.`\n      );\n    }\n\n    // Collect deployment options\n    const options = await collectDeployOptions(projectPath, inputOptions);\n\n    // Ensure Alexa skill directory exists\n    const alexaSkillPath = resolve(options.alexaSkillPath);\n    if (!existsSync(alexaSkillPath)) {\n      throw new Error(\n        `Alexa skill directory '${alexaSkillPath}' does not exist`\n      );\n    }\n\n    // Create target directories\n    const lambdaPath = join(alexaSkillPath, \"lambda\");\n    const customPath = join(lambdaPath, \"custom\");\n    const utilsPath = join(customPath, \"utils\");\n\n    // Ensure directories exist\n    if (!existsSync(lambdaPath)) mkdirSync(lambdaPath, { recursive: true });\n    if (!existsSync(customPath)) mkdirSync(customPath, { recursive: true });\n    if (!existsSync(utilsPath)) mkdirSync(utilsPath, { recursive: true });\n\n    // 1. Copy dist folder to Alexa skill\n    const targetAgentPath = join(customPath, options.agentName);\n    await withSpinner(`Copying agent to ${targetAgentPath}...`, async () => {\n      if (existsSync(targetAgentPath)) {\n        // Remove existing directory to ensure clean deployment\n        removeDirSync(targetAgentPath);\n      }\n\n      // Create the target directory\n      mkdirSync(targetAgentPath, { recursive: true });\n\n      // Copy dist folder to target path using our custom function\n      copyDirSync(distPath, targetAgentPath);\n      logger.info(`Agent copied to ${targetAgentPath}`);\n      return true;\n    });\n\n    // 2. Generate wrapper utility function\n    const wrapperPath = join(utilsPath, `${options.agentName}.js`);\n    await withSpinner(\n      `Creating agent wrapper at ${wrapperPath}...`,\n      async () => {\n        const wrapperContent = generateWrapperFunction(options.agentName);\n        writeFileSync(wrapperPath, wrapperContent);\n        return true;\n      }\n    );\n\n    // 3. Generate example handler\n    const handlersPath = join(customPath, \"handlers\");\n    if (!existsSync(handlersPath)) mkdirSync(handlersPath, { recursive: true });\n\n    const handlerPath = join(handlersPath, `${options.agentName}Handler.js`);\n    await withSpinner(\n      `Creating example handler at ${handlerPath}...`,\n      async () => {\n        const handlerContent = generateExampleHandler(options.agentName);\n        writeFileSync(handlerPath, handlerContent);\n        return true;\n      }\n    );\n\n    // 4. Generate interaction model snippet\n    const intentName = options.agentName.includes(\"-\")\n      ? capitalizeFirstLetter(options.agentName.replace(/-/g, \"\"))\n      : capitalizeFirstLetter(options.agentName);\n\n    const interactionModelSnippet = `\n{\n  \"name\": \"${intentName}Intent\",\n  \"slots\": [\n    {\n      \"name\": \"query\",\n      \"type\": \"AMAZON.SearchQuery\"\n    }\n  ],\n  \"samples\": [\n    \"ask about {query}\",\n    \"tell me about {query}\",\n    \"what is {query}\",\n    \"check {query}\",\n    \"get information about {query}\",\n    \"lookup {query}\"\n  ]\n}`;\n\n    // 5. Generate index.js import snippet\n    const handlerName = intentName + \"IntentHandler\";\n\n    console.log(`\n\u2705 Deployment completed successfully!\n\nYour agent has been deployed to: ${targetAgentPath}\nA wrapper function has been created at: ${wrapperPath}\nAn example handler has been created at: ${handlerPath}\n\nTo use your agent in your Alexa skill:\n\n1. Add the following to your index.js:\n\nconst ${handlerName} = require('./handlers/${options.agentName}Handler');\n\n// Add to your skill builder\nconst skillBuilder = Alexa.SkillBuilders.custom()\n  .addRequestHandlers(\n    // ... your existing handlers\n    ${handlerName}\n  )\n  .lambda();\n\n2. Add this intent to your interaction model:\n${interactionModelSnippet}\n\n3. Build and deploy your Alexa skill\n`);\n\n    return {\n      status: \"success\",\n      deployPath: targetAgentPath,\n      message: `Agent successfully deployed to ${targetAgentPath}`,\n    };\n  } catch (error) {\n    logger.error(\"Deployment failed:\", error.message);\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n}\n\n/**\n * Collect deployment options through CLI prompts\n */\nasync function collectDeployOptions(projectPath, inputOptions) {\n  // Get project name from package.json if not provided\n  let projectName = inputOptions.projectName;\n  if (!projectName) {\n    try {\n      const packageJsonPath = join(projectPath, \"package.json\");\n      if (existsSync(packageJsonPath)) {\n        const packageJson = JSON.parse(readFileSync(packageJsonPath, \"utf-8\"));\n        projectName = packageJson.name;\n      }\n    } catch (error) {\n      logger.warn(\"Could not read package.json to determine project name\");\n    }\n  }\n\n  // If still no project name, use the directory name\n  if (!projectName) {\n    projectName = projectPath.split(\"/\").pop() || \"vane-agent\";\n  }\n\n  // Prompt for Alexa skill path\n  const { alexaSkillPath } = await inquirer.prompt([\n    {\n      type: \"input\",\n      name: \"alexaSkillPath\",\n      message: \"Enter the path to your Alexa skill root directory:\",\n      default: inputOptions.alexaSkillPath || \"../Alexa-skills/vanewallet\",\n    },\n  ]);\n\n  // Validate Alexa skill path\n  const resolvedSkillPath = resolve(alexaSkillPath);\n  if (!existsSync(resolvedSkillPath)) {\n    throw new Error(`Alexa skill directory not found at: ${resolvedSkillPath}`);\n  }\n\n  // Prompt for agent name (used for target directory)\n  const { agentName } = await inquirer.prompt([\n    {\n      type: \"input\",\n      name: \"agentName\",\n      message:\n        \"What name would you like to use for the agent in your Alexa skill?\",\n      default: inputOptions.agentName || \"vane-agent\",\n    },\n  ]);\n\n  return {\n    projectPath,\n    projectName,\n    alexaSkillPath,\n    agentName,\n  };\n}\n\n/**\n * Generate wrapper function to simplify agent usage\n */\nfunction generateWrapperFunction(agentName) {\n  return `// Auto-generated wrapper for ${agentName}\nconst path = require('path');\n\n/**\n * Simple wrapper for the Vane AI agent\n * @param {string} prompt - The user's query or prompt\n * @param {Object} [options] - Optional configuration\n * @returns {Promise<string>} - The agent's response\n */\nasync function queryAgent(prompt, options = {}) {\n  try {\n    // Dynamically import the agent (only once)\n    if (!queryAgent.agent) {\n      const agentPath = path.join(__dirname, '..', '${agentName}');\n      console.log('Loading agent from:', agentPath);\n      \n      try {\n        // Using require instead of import for compatibility\n        const agentModule = require(agentPath);\n        \n        // The agent might be the default export or named export\n        queryAgent.agent = agentModule.default || agentModule.agent || agentModule;\n        \n        if (!queryAgent.agent || typeof queryAgent.agent !== 'function') {\n          console.error('Agent not found or not a function in module:', Object.keys(agentModule));\n          \n          // Try to find any function export that could be the agent\n          for (const key in agentModule) {\n            if (typeof agentModule[key] === 'function') {\n              console.log('Found potential agent function:', key);\n              queryAgent.agent = agentModule[key];\n              break;\n            }\n          }\n          \n          // If still not found, use the whole module as a fallback\n          if (!queryAgent.agent || typeof queryAgent.agent !== 'function') {\n            console.warn('Could not identify agent function, using module as agent');\n            queryAgent.agent = agentModule;\n          }\n        }\n        \n        // Initialize agent if needed\n        if (typeof queryAgent.agent.initialize === 'function') {\n          console.log('Initializing agent...');\n          await queryAgent.agent.initialize();\n        }\n      } catch (error) {\n        console.error('Error importing agent:', error);\n        throw error;\n      }\n    }\n    \n    // Send query to agent\n    console.log('Sending query to agent:', prompt);\n    let response;\n    \n    if (typeof queryAgent.agent === 'function') {\n      response = await queryAgent.agent(prompt, options);\n    } else if (queryAgent.agent && typeof queryAgent.agent.query === 'function') {\n      response = await queryAgent.agent.query(prompt, options);\n    } else if (queryAgent.agent && typeof queryAgent.agent.run === 'function') {\n      response = await queryAgent.agent.run(prompt, options);\n    } else {\n      throw new Error('Could not determine how to invoke the agent');\n    }\n    \n    console.log('Received response from agent');\n    return response;\n  } catch (error) {\n    console.error('Error querying agent:', error);\n    return 'I encountered an error while processing your request. ' + error.message;\n  }\n}\n\n// Export the wrapper function\nmodule.exports = {\n  queryAgent\n};\n`;\n}\n\n/**\n * Generate example handler for the Alexa skill\n */\nfunction generateExampleHandler(agentName) {\n  const intentName = agentName.includes(\"-\")\n    ? capitalizeFirstLetter(agentName.replace(/-/g, \"\"))\n    : capitalizeFirstLetter(agentName);\n\n  const handlerName = intentName + \"IntentHandler\";\n\n  return `// Auto-generated handler for ${agentName}\nconst Alexa = require('ask-sdk-core');\nconst { queryAgent } = require('../utils/${agentName}');\n\n/**\n * Handler for ${intentName} queries\n */\nconst ${handlerName} = {\n  canHandle(handlerInput) {\n    return (\n      Alexa.getRequestType(handlerInput.requestEnvelope) === 'IntentRequest' &&\n      Alexa.getIntentName(handlerInput.requestEnvelope) === '${intentName}Intent'\n    );\n  },\n  async handle(handlerInput) {\n    // Get the user's query from the slot\n    const query = Alexa.getSlotValue(handlerInput.requestEnvelope, 'query') || \n                  'What is the current price of Ethereum?';\n    \n    try {\n      console.log('${handlerName} received query:', query);\n      \n      // Query the agent\n      const response = await queryAgent(query, {\n        // You can add options here as needed\n        userId: handlerInput.requestEnvelope.session.user.userId\n      });\n      \n      console.log('Agent response:', response);\n      \n      return handlerInput.responseBuilder\n        .speak(response)\n        .reprompt('Is there anything else you would like to know?')\n        .getResponse();\n    } catch (error) {\n      console.error('Error in ${handlerName}:', error);\n      \n      return handlerInput.responseBuilder\n        .speak('I had trouble accessing that information right now. Please try again later.')\n        .getResponse();\n    }\n  }\n};\n\nmodule.exports = ${handlerName};\n`;\n}\n\n/**\n * Helper to capitalize the first letter of a string\n */\nfunction capitalizeFirstLetter(string) {\n  if (!string) return \"\";\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n// Handle deploy command in the main CLI\nexport async function handleDeploy(config, projectId) {\n  try {\n    const projectPath = config.projectPath;\n\n    // Check if project is built\n    if (!existsSync(path.join(projectPath, \"dist\"))) {\n      const { shouldBuild } = await inquirer.prompt([\n        {\n          type: \"confirm\",\n          name: \"shouldBuild\",\n          message: \"Project needs to be built first. Build now?\",\n          default: true,\n        },\n      ]);\n\n      if (shouldBuild) {\n        console.log(\"Building project before deployment...\");\n        const buildResult = await buildProject(projectPath, {\n          projectName: config.projectName,\n          skipDependencyPrompt: false,\n        });\n\n        if (buildResult.status === \"error\") {\n          console.error(`Build failed: ${buildResult.message}`);\n          return;\n        }\n      } else {\n        console.log(\n          'Deployment canceled. Please build the project first with \"vanekit build\".'\n        );\n        return;\n      }\n    }\n\n    // Deploy to Alexa skill\n    const result = await deployToAlexaSkill(projectPath, {\n      projectName: config.projectName,\n    });\n\n    if (result.status === \"error\") {\n      console.error(`\u274C Deployment failed: ${result.message}`);\n    }\n  } catch (error) {\n    console.error(`\u274C Deployment failed: ${error.message}`);\n  }\n}\n"],
  "mappings": "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",
  "names": ["exports", "exports", "module", "exports", "module", "exports", "module", "err", "exports", "module", "err", "exports", "module", "path", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "path", "exports", "module", "path", "exports", "module", "path", "i", "node", "exports", "module", "path", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "path", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "fs", "path", "major", "err", "n", "releasedBufObj", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "join", "FinalizationRegistry", "WeakRef", "exports", "module", "join", "onExit", "fixTarget", "context", "exports", "module", "stringify", "_", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "bindings", "exports", "module", "value", "join", "tmp", "key", "res", "stringify", "exports", "module", "streamLevels", "exports", "module", "serializers", "time", "exports", "module", "exports", "__export", "AISDKError", "APICallError", "EmptyResponseBodyError", "InvalidPromptError", "InvalidResponseDataError", "JSONParseError", "LoadAPIKeyError", "NoContentGeneratedError", "NoSuchModelError", "TypeValidationError", "UnsupportedFunctionalityError", "module", "__toCommonJS", "_AISDKError", "name", "marker", "symbol", "_a", "_TypeValidationError", "exports", "module", "exports", "module", "createParser", "__export", "createIdGenerator", "generateId", "resolve", "module", "__toCommonJS", "import_provider", "fetch", "__toESM", "zodSchema", "validator", "SecureJSON", "getOriginalFetch", "atob", "exports", "util", "objectUtil", "getParsedType", "exports", "quotelessJson", "ZodError", "exports", "errorMap", "exports", "overrideErrorMap", "setErrorMap", "getErrorMap", "exports", "makeIssue", "path", "addIssueToContext", "ParseStatus", "DIRTY", "OK", "isAborted", "isDirty", "isValid", "isAsync", "exports", "exports", "errorUtil", "exports", "__classPrivateFieldGet", "__classPrivateFieldSet", "_ZodEnum_cache", "_ZodNativeEnum_cache", "ParseInputLazyPath", "path", "handleResult", "processCreateParams", "errorMap", "ZodType", "ZodEffects", "ZodFirstPartyTypeKind", "ZodOptional", "ZodNullable", "ZodArray", "ZodPromise", "ZodUnion", "ZodIntersection", "ZodDefault", "ZodBranded", "ZodCatch", "ZodPipeline", "ZodReadonly", "cuidRegex", "cuid2Regex", "ulidRegex", "uuidRegex", "nanoidRegex", "jwtRegex", "durationRegex", "emailRegex", "_emojiRegex", "emojiRegex", "ipv4Regex", "ipv4CidrRegex", "ipv6Regex", "ipv6CidrRegex", "base64Regex", "base64urlRegex", "dateRegexSource", "dateRegex", "timeRegexSource", "timeRegex", "datetimeRegex", "isValidIP", "isValidJWT", "isValidCidr", "ZodString", "ctx", "floatSafeRemainder", "ZodNumber", "ZodBigInt", "ZodBoolean", "ZodDate", "ZodSymbol", "ZodUndefined", "ZodNull", "ZodAny", "ZodUnknown", "ZodNever", "ZodVoid", "result", "deepPartialify", "ZodObject", "ZodTuple", "createZodEnum", "issues", "getDiscriminator", "ZodLazy", "ZodLiteral", "ZodEnum", "ZodNativeEnum", "ZodDiscriminatedUnion", "mergeValues", "ZodRecord", "ZodMap", "ZodSet", "elements", "ZodFunction", "processed", "ZodNaN", "cleanParams", "custom", "r", "_a", "_b", "instanceOfType", "stringType", "numberType", "nanType", "bigIntType", "booleanType", "dateType", "symbolType", "undefinedType", "nullType", "anyType", "unknownType", "neverType", "voidType", "arrayType", "objectType", "strictObjectType", "unionType", "discriminatedUnionType", "intersectionType", "tupleType", "recordType", "mapType", "setType", "functionType", "lazyType", "literalType", "enumType", "nativeEnumType", "promiseType", "effectsType", "optionalType", "nullableType", "preprocessType", "pipelineType", "ostring", "onumber", "oboolean", "exports", "exports", "z", "__export", "module", "__toCommonJS", "import_provider", "import_provider_utils", "import_zod", "anthropicTools", "_a", "anthropic", "i", "part", "import_zod3", "__export", "module", "__toCommonJS", "import_provider_utils", "import_zod", "jsonSchema", "import_provider", "generateId", "import_zod3", "_a", "__export", "module", "__toCommonJS", "import_provider_utils", "import_provider", "import_zod", "token", "logprob", "type", "openaiTools", "_a", "toolCall", "import_zod3", "_b", "_c", "path", "exports", "jsonSchema", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "emojiRegex", "exports", "exports", "exports", "exports", "exports", "exports", "types", "x", "exports", "base", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "jsonSchema", "exports", "exports", "name", "schema", "main", "exports", "__export", "formatAssistantStreamPart", "formatDataStreamPart", "jsonSchema", "parseAssistantStreamPart", "parseDataStreamPart", "processDataStream", "processTextStream", "zodSchema", "module", "__toCommonJS", "import_provider_utils", "textStreamPart", "errorStreamPart", "validCodes", "value", "generateId", "generateIdFunction", "_a", "part", "invocation", "fetch", "getOriginalFetch", "resolve", "NEWLINE", "concatChunks", "__toESM", "zodToJsonSchema", "isLastToolInvocationFollowedByText", "isCompatible", "diag", "logger", "DiagComponentLogger", "DiagLogLevel", "logger", "DiagAPI", "logger", "__spreadArray", "__read", "BaggageImpl", "__read", "BaseContext", "context", "DiagConsoleLogger", "NoopMeter", "NoopMetric", "NoopCounterMetric", "NoopUpDownCounterMetric", "NoopGaugeMetric", "NoopHistogramMetric", "NoopObservableMetric", "NoopObservableCounterMetric", "NoopObservableGaugeMetric", "NoopObservableUpDownCounterMetric", "ValueType", "NoopContextManager", "__spreadArray", "__read", "API_NAME", "init_context", "ContextAPI", "context", "__spreadArray", "__read", "TraceFlags", "NonRecordingSpan", "context", "init_context", "init_context", "NoopTracer", "context", "ProxyTracer", "context", "NoopTracerProvider", "ProxyTracerProvider", "SamplingDecision", "SpanKind", "SpanStatusCode", "TraceStateImpl", "init_utils", "init_context", "diag", "NoopMeterProvider", "API_NAME", "MetricsAPI", "NoopTextMapPropagator", "context", "context", "init_context", "API_NAME", "PropagationAPI", "context", "API_NAME", "TraceAPI", "diag", "init_utils", "__export", "module", "__toCommonJS", "import_provider_utils", "import_ui_utils", "resolve", "import_provider", "name", "marker", "symbol", "_a", "import_api", "attributes", "embedding", "usage", "embeddings", "text", "import_zod", "processBlock", "content", "tool", "i", "import_zod2", "context", "generateId", "span", "_b", "_c", "_d", "result", "object", "originalGenerateId", "now", "doStreamSpan", "error", "_e", "_f", "delay", "originalDelay", "chunk", "originalGenerateMessageId", "stepType", "stream", "stepReasoning", "stepFiles", "activeReasoningText", "getErrorMessage", "getToolInvocations", "delayFunction", "process", "mergeIntoDataStream", "toDataStream", "toDataStreamResponse", "toDataStreamInternal", "exports", "exports", "exports", "Agent", "exports", "exports", "exports", "exports", "ChainName", "ChainID", "Queue", "require$$0", "resolve", "pLimit", "INVALID", "Big", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "exports", "ZEEActionResponseType", "exports", "exports", "exports", "import_child_process", "e", "resolve", "ora", "process", "path", "fs", "inquirer", "import_inquirer", "import_fs", "import_path", "import_fs", "import_path", "path", "generateIndexFile", "import_ora", "util", "objectUtil", "path", "errorUtil", "path", "errorMap", "ctx", "result", "issues", "elements", "processed", "r", "_a", "_b", "ZodFirstPartyTypeKind", "isValid", "path", "zodSchema", "SDKTool", "import_promises", "import_path", "import_path", "import_promises", "path", "fs", "installDependencies", "context", "path", "fs", "import_ora", "import_path", "import_fs", "ora", "import_inquirer", "import_fs", "import_path", "path", "fs", "inquirer", "dotenv", "inquirer", "ora", "cliIntegration"]
}
